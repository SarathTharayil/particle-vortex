!function e(t,n,r){function o(a,s){if(!n[a]){if(!t[a]){var c="function"==typeof require&&require;if(!s&&c)return c(a,!0);if(i)return i(a,!0);var u=new Error("Cannot find module '"+a+"'");throw u.code="MODULE_NOT_FOUND",u}var l=n[a]={exports:{}};t[a][0].call(l.exports,function(e){var n=t[a][1][e];return o(n?n:e)},l,l.exports,e,t,n,r)}return n[a].exports}for(var i="function"==typeof require&&require,a=0;a<r.length;a++)o(r[a]);return o}({1:[function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{"default":e}}function o(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(n,"__esModule",{value:!0});var i=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),a=e("../utils/utils"),s=e("../utils/three-utils"),c=e("../utils/loader"),u=r(c),l=e("../post/effects-manager"),d=r(l),f=e("./gpgpu"),v=r(f),p=e("../libs/stats.min"),h=void 0,m=void 0,x=void 0,y=void 0,E=void 0,g=void 0,T=void 0,w=void 0,M=void 0,R=void 0,z=void 0,P=void 0,b=void 0,S=void 0,H=function(){function e(){o(this,e),h=this,g=new THREE.Vector3(0,0,.5),this.createBaseElements(),this.addListeners();var t=[{file:"assets/img/particle.png",id:"particle"}];this.loadAssets(t,function(e){h.createScene(e),h.handleResize(),h.update()})}return i(e,[{key:"loadAssets",value:function(e,t){var n=new u["default"];n.load(e,function(e){"function"==typeof t&&t(e)})}},{key:"createBaseElements",value:function(){var e=window.innerWidth,t=window.innerHeight;m=new THREE.Scene,x=new THREE.PerspectiveCamera(50,e/t,.1,1e3),x.position.z=350,y=new THREE.WebGLRenderer,y.setClearColor(1184274,1),y.setSize(e,t),document.body.appendChild(y.domElement)}},{key:"createScene",value:function(e){for(var t=512,n=THREE.RGBAFormat,r=n===THREE.RGBFormat?3:4,o=t*t*r,i=new Float32Array(o),c=new Float32Array(o),u=50,l=0;l<o;l+=r)i[l+0]=(0,a.randomRange)(-u,u),i[l+1]=(0,a.randomRange)(-u,u),i[l+2]=(0,a.randomRange)(-u,u),i[l+3]=0,c[l+0]=(0,a.randomRange)(.1,.9),c[l+1]=(0,a.randomInt)(1,6),c[l+2]=0,c[l+3]=0;M=(0,s.getDataTexture)(i,t,t,n),R=(0,s.getDataTexture)(i,t,t,n),z=(0,s.getDataTexture)(c,t,t,n),P=new THREE.ShaderMaterial({uniforms:{tOriginalPositions:{type:"t",value:M},tPositions:{type:"t",value:R},tData:{type:"t",value:z},curlScale:{type:"f",value:1.5},amplitude:{type:"f",value:125},time:{type:"f",value:0},mousePosition:{type:"v3",value:g},forceStrength:{type:"f",value:1e4},rotation:{type:"f",value:.05}},vertexShader:"#define GLSLIFY 1\nvarying vec2 vUv;\n\nvoid main() {\n    // vUv = uv;\n    vUv = vec2(uv.x, 1.0 - uv.y);\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n}",fragmentShader:"#define GLSLIFY 1\n//\n// Description : Array and textureless GLSL 2D/3D/4D simplex\n//               noise functions.\n//      Author : Ian McEwan, Ashima Arts.\n//  Maintainer : ijm\n//     Lastmod : 20110822 (ijm)\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\n//               Distributed under the MIT License. See LICENSE file.\n//               https://github.com/ashima/webgl-noise\n//\n\nvec3 mod289(vec3 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 mod289(vec4 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 permute(vec4 x) {\n     return mod289(((x*34.0)+1.0)*x);\n}\n\nvec4 taylorInvSqrt(vec4 r)\n{\n  return 1.79284291400159 - 0.85373472095314 * r;\n}\n\nfloat snoise(vec3 v)\n  {\n  const vec2  C = vec2(1.0/6.0, 1.0/3.0) ;\n  const vec4  D = vec4(0.0, 0.5, 1.0, 2.0);\n\n// First corner\n  vec3 i  = floor(v + dot(v, C.yyy) );\n  vec3 x0 =   v - i + dot(i, C.xxx) ;\n\n// Other corners\n  vec3 g = step(x0.yzx, x0.xyz);\n  vec3 l = 1.0 - g;\n  vec3 i1 = min( g.xyz, l.zxy );\n  vec3 i2 = max( g.xyz, l.zxy );\n\n  //   x0 = x0 - 0.0 + 0.0 * C.xxx;\n  //   x1 = x0 - i1  + 1.0 * C.xxx;\n  //   x2 = x0 - i2  + 2.0 * C.xxx;\n  //   x3 = x0 - 1.0 + 3.0 * C.xxx;\n  vec3 x1 = x0 - i1 + C.xxx;\n  vec3 x2 = x0 - i2 + C.yyy; // 2.0*C.x = 1/3 = C.y\n  vec3 x3 = x0 - D.yyy;      // -1.0+3.0*C.x = -0.5 = -D.y\n\n// Permutations\n  i = mod289(i);\n  vec4 p = permute( permute( permute(\n             i.z + vec4(0.0, i1.z, i2.z, 1.0 ))\n           + i.y + vec4(0.0, i1.y, i2.y, 1.0 ))\n           + i.x + vec4(0.0, i1.x, i2.x, 1.0 ));\n\n// Gradients: 7x7 points over a square, mapped onto an octahedron.\n// The ring size 17*17 = 289 is close to a multiple of 49 (49*6 = 294)\n  float n_ = 0.142857142857; // 1.0/7.0\n  vec3  ns = n_ * D.wyz - D.xzx;\n\n  vec4 j = p - 49.0 * floor(p * ns.z * ns.z);  //  mod(p,7*7)\n\n  vec4 x_ = floor(j * ns.z);\n  vec4 y_ = floor(j - 7.0 * x_ );    // mod(j,N)\n\n  vec4 x = x_ *ns.x + ns.yyyy;\n  vec4 y = y_ *ns.x + ns.yyyy;\n  vec4 h = 1.0 - abs(x) - abs(y);\n\n  vec4 b0 = vec4( x.xy, y.xy );\n  vec4 b1 = vec4( x.zw, y.zw );\n\n  //vec4 s0 = vec4(lessThan(b0,0.0))*2.0 - 1.0;\n  //vec4 s1 = vec4(lessThan(b1,0.0))*2.0 - 1.0;\n  vec4 s0 = floor(b0)*2.0 + 1.0;\n  vec4 s1 = floor(b1)*2.0 + 1.0;\n  vec4 sh = -step(h, vec4(0.0));\n\n  vec4 a0 = b0.xzyw + s0.xzyw*sh.xxyy ;\n  vec4 a1 = b1.xzyw + s1.xzyw*sh.zzww ;\n\n  vec3 p0 = vec3(a0.xy,h.x);\n  vec3 p1 = vec3(a0.zw,h.y);\n  vec3 p2 = vec3(a1.xy,h.z);\n  vec3 p3 = vec3(a1.zw,h.w);\n\n//Normalise gradients\n  vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\n  p0 *= norm.x;\n  p1 *= norm.y;\n  p2 *= norm.z;\n  p3 *= norm.w;\n\n// Mix final noise value\n  vec4 m = max(0.6 - vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3)), 0.0);\n  m = m * m;\n  return 42.0 * dot( m*m, vec4( dot(p0,x0), dot(p1,x1),\n                                dot(p2,x2), dot(p3,x3) ) );\n  }\n\nvec3 snoiseVec3( vec3 x ){\n\n  float s  = snoise(vec3( x ));\n  float s1 = snoise(vec3( x.y - 19.1 , x.z + 33.4 , x.x + 47.2 ));\n  float s2 = snoise(vec3( x.z + 74.2 , x.x - 124.5 , x.y + 99.4 ));\n  vec3 c = vec3( s , s1 , s2 );\n  return c;\n\n}\n\nvec3 curlNoise( vec3 p ){\n  \n  const float e = .1;\n  vec3 dx = vec3( e   , 0.0 , 0.0 );\n  vec3 dy = vec3( 0.0 , e   , 0.0 );\n  vec3 dz = vec3( 0.0 , 0.0 , e   );\n\n  vec3 p_x0 = snoiseVec3( p - dx );\n  vec3 p_x1 = snoiseVec3( p + dx );\n  vec3 p_y0 = snoiseVec3( p - dy );\n  vec3 p_y1 = snoiseVec3( p + dy );\n  vec3 p_z0 = snoiseVec3( p - dz );\n  vec3 p_z1 = snoiseVec3( p + dz );\n\n  float x = p_y1.z - p_y0.z - p_z1.y + p_z0.y;\n  float y = p_z1.x - p_z0.x - p_x1.z + p_x0.z;\n  float z = p_x1.y - p_x0.y - p_y1.x + p_y0.x;\n\n  const float divisor = 1.0 / ( 2.0 * e );\n  return normalize( vec3( x , y , z ) * divisor );\n\n}\n\nmat3 rotateAngleAxisMatrix(float angle, vec3 axis)\n{\n    float c = cos(angle);\n    float s = sin(angle);\n    float t = 1.0 - c;\n    axis = normalize(axis);\n    float x = axis.x, y = axis.y, z = axis.z;\n    return mat3(\n        t*x*x + c,    t*x*y + s*z,  t*x*z - s*y,\n        t*x*y - s*z,  t*y*y + c,    t*y*z + s*x,\n        t*x*z + s*y,  t*y*z - s*x,  t*z*z + c\n    );\n}\n\nvec3 rotateAngleAxis(float angle, vec3 axis, vec3 v)\n{\n    return rotateAngleAxisMatrix(angle, axis) * v;\n}\n\nuniform sampler2D tOriginalPositions;//DATA Texture containing original positions\nuniform sampler2D tPositions;//DATA Texture containing original positions\nuniform sampler2D tData;\nuniform float curlScale;\nuniform float amplitude;\nuniform float time;\nuniform vec3 mousePosition;\nuniform float forceStrength;\nuniform float rotation;\n\nvarying vec2 vUv;\n\nconst vec3 yAxis = vec3(0.0, 1.0, 0.0);\n\nvoid main() {\n\n    //basic simulation: displays the particles in place.\n    vec4 oPos = texture2D(tOriginalPositions, vUv);\n    vec4 pos = texture2D(tPositions, vUv);\n    // // vec3 pos = texture2D(tPositions, vUv).xyz + (vUv.xyx * 2.0);\n    // vec3 otherVals = texture2D(tData, vUv).xyz;\n    // vec3 c = curl(pos + vUv.x + vUv.y + time) * curlScale;\n    // pos += (c - pos) * otherVals.x;\n    // pos.x += 0.1;\n    // pos.a = 1.0;\n\n    // pos.xyz += curl(pos.xyz / amplitude + time) * curlScale;// * 0.1;\n    // pos.xyz = mix(oPos.xyz, curl((pos.xyz) / amplitude) * curlScale, 0.1);// * 0.1;\n\n    float dist = distance(oPos.xyz, pos.xyz);\n\n    if(dist > 150.0)\n    {\n        pos = oPos;\n        pos.a = 0.0;\n    }\n    else\n    {\n        pos.xyz += curlNoise(pos.xyz / amplitude) * curlScale;// * 0.1;\n        // pos.xyz += ((pos.xyz + (curl(pos.xyz / amplitude) * curlScale)) - pos.xyz) * 0.5;\n\n        if(pos.a < 0.1)\n        {\n            pos.a += 0.001;\n        }\n\n        float mid = 0.5;\n        pos.xyz = rotateAngleAxis(rotation, yAxis, pos.xyz - mid) + mid;\n\n        vec3 force = mousePosition - pos.xyz;\n        dist = length(force);\n        float strength = forceStrength / (dist * dist);\n        force = normalize(force) * strength;\n\n        pos.x -= force.x;\n        pos.y -= force.y;\n        pos.z -= force.z;\n    }\n\n    // pos.a = cos(pos.y) * 3.0;\n    // pos.a = 1.0 + abs(cos(pos.x) * 2.0);\n\n    // pos.x += cos(pos.y) * 2.0;\n\n    gl_FragColor = pos;\n}"}),b=new THREE.ShaderMaterial({uniforms:{tOriginalPositions:{type:"t",value:M},tPositions:{type:"t",value:R},tData:{type:"t",value:z},map:{type:"t",value:e.textures.particle},pointSize:{type:"f",value:1},texSize:{type:"f",value:t}},vertexShader:"#define GLSLIFY 1\nuniform sampler2D tOriginalPositions;\nuniform sampler2D tPositions;//RenderTarget containing the transformed positions\nuniform sampler2D tData;\nuniform float pointSize;\nuniform float texSize;\n\nvarying vec4 vPos;\n// varying vec4 vOriginalPos;\n\nvoid main() {\n\n    vec2 uv = position.xy + vec2(0.5 / texSize, 0.5 / texSize);\n    vec4 pos = texture2D(tPositions, uv);\n    vPos = pos;\n\n    // vec4 oPos = texture2D(tOriginalPositions, uv);\n    // vOriginalPos = oPos;\n\n    // vec4 pos = texture2D(tPositions, position.xy);\n\n    vec4 data = texture2D(tData, uv);\n    // vec3 otherVals = texture2D(tData, position.xy).xyz;\n\n    //regular projection of our position\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(pos.xyz, 1.0);\n\n    //sets the point size\n    // gl_PointSize = pointSize;\n    // gl_PointSize = pos.a;\n    gl_PointSize = data.y;\n    // gl_PointSize = sin(pos.x) * data.y;\n    // gl_PointSize = length(pos) * 0.025;\n}",fragmentShader:"#define GLSLIFY 1\nfloat hue2rgb(float f1, float f2, float hue) {\n    if (hue < 0.0)\n        hue += 1.0;\n    else if (hue > 1.0)\n        hue -= 1.0;\n    float res;\n    if ((6.0 * hue) < 1.0)\n        res = f1 + (f2 - f1) * 6.0 * hue;\n    else if ((2.0 * hue) < 1.0)\n        res = f2;\n    else if ((3.0 * hue) < 2.0)\n        res = f1 + (f2 - f1) * ((2.0 / 3.0) - hue) * 6.0;\n    else\n        res = f1;\n    return res;\n}\n\nvec3 hsl2rgb(vec3 hsl) {\n    vec3 rgb;\n    \n    if (hsl.y == 0.0) {\n        rgb = vec3(hsl.z); // Luminance\n    } else {\n        float f2;\n        \n        if (hsl.z < 0.5)\n            f2 = hsl.z * (1.0 + hsl.y);\n        else\n            f2 = hsl.z + hsl.y - hsl.y * hsl.z;\n            \n        float f1 = 2.0 * hsl.z - f2;\n        \n        rgb.r = hue2rgb(f1, f2, hsl.x + (1.0/3.0));\n        rgb.g = hue2rgb(f1, f2, hsl.x);\n        rgb.b = hue2rgb(f1, f2, hsl.x - (1.0/3.0));\n    }   \n    return rgb;\n}\n\nvec3 hsl2rgb(float h, float s, float l) {\n    return hsl2rgb(vec3(h, s, l));\n}\n\nuniform sampler2D map;\nvarying vec4 vPos;\n// varying vec4 vOriginalPos;\n\nvoid main()\n{\n    // vec3 rgb = hsl2rgb((vPos.x + vPos.y)/360.0, 1.0, 0.5);\n    // float dist = distance(vOriginalPos.xyz, vPos.xyz) * 0.005;\n    // float opacity = smoothstep(0.0, 0.5, dist) * 0.5;\n    vec3 rgb = hsl2rgb(length(vPos)/150.0, 1.0, 0.65);\n    // vec3 rgb = hsl2rgb(1.0 - (length(vPos)/180.0), 1.0, 0.5);\n    gl_FragColor = vec4(rgb, vPos.a) * texture2D(map, gl_PointCoord);\n    // gl_FragColor = vec4(rgb, vPos.a * sin(gl_FragCoord.x / 2.0)) * texture2D(map, gl_PointCoord);\n\n    if(vPos.a < 0.05)\n    {\n        discard;\n    }\n}",transparent:!0,blending:THREE.AdditiveBlending,depthTest:!1,depthWrite:!1}),o=t*t;for(var d=new Float32Array(3*o),f=0;f<o;f++)d[3*f+0]=f%t/t,d[3*f+1]=Math.floor(f/t)/t;var p=new THREE.BufferGeometry;p.addAttribute("position",new THREE.BufferAttribute(d,3)),w=new THREE.Points(p,b),m.add(w),T=new v["default"]({renderer:y,simulationMaterial:P,renderMaterial:b,size:t,format:n})}},{key:"addListeners",value:function(){window.addEventListener("resize",this.handleResize,!1),window.addEventListener("orientationchange",this.handleResize,!1),window.addEventListener("mousemove",this.handleMouseMove,!1)}},{key:"removeListeners",value:function(){window.removeEventListener("resize",this.handleResize),window.removeEventListener("orientationchange",this.handleResize),window.removeEventListener("mousemove",this.handleMouseMove)}},{key:"addStats",value:function(){S=new p,S.domElement.style.position="absolute",S.domElement.style.left="0px",S.domElement.style.bottom="0px",document.body.appendChild(S.domElement)}},{key:"createEffects",value:function(){E=new d["default"]({renderer:y,camera:x,scene:m})}},{key:"handleResize",value:function(e){var t=window.innerWidth,n=window.innerHeight;x.aspect=t/n,x.updateProjectionMatrix(),y.setSize(t,n),E&&E.resize(t,n)}},{key:"handleMouseMove",value:function(e){g.x=e.clientX/window.innerWidth*2-1,g.y=2*-(e.clientY/window.innerHeight)+1}},{key:"update",value:function(){P.uniforms.time.value+=.001,P.uniforms.mousePosition.value=(0,s.getMouseWorldPos)(g,x),T.update("tPositions"),E?E.update():y.render(m,x),S&&S.update(),requestAnimationFrame(h.update)}},{key:"dispose",value:function(){removeListeners()}}]),e}();n["default"]=H},{"../libs/stats.min":3,"../post/effects-manager":10,"../utils/loader":11,"../utils/three-utils":12,"../utils/utils":13,"./gpgpu":2}],2:[function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(n,"__esModule",{value:!0});var o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=void 0,a=void 0,s=void 0,c=void 0,u=void 0,l=!1,d=function(){function e(t){var n=t.renderer,o=t.simulationMaterial,l=t.renderMaterial,d=t.size,f=void 0===d?128:d,v=t.format,p=void 0===v?THREE.RGBFormat:v;r(this,e);var h=n.getContext();if(!h.getExtension("OES_texture_float"))return void alert("No OES_texture_float support for float textures!");if(0===h.getParameter(h.MAX_VERTEX_TEXTURE_IMAGE_UNITS))return void alert("No support for vertex shader textures!");a=new THREE.OrthographicCamera((-.5),.5,.5,(-.5),0,1),i=new THREE.Scene,s=new THREE.Mesh(new THREE.PlaneBufferGeometry(1,1),o),i.add(s);var m={minFilter:THREE.NearestFilter,magFilter:THREE.NearestFilter,type:THREE.FloatType,format:p,stencil:!1};c=new THREE.WebGLRenderTarget(f,f,m),u=c.clone(),this.renderer=n,this.simulationMaterial=o,this.renderMaterial=l}return o(e,[{key:"update",value:function(e){e=e||"tPositions",l?(this.renderer.render(i,a,u,!1),this.renderMaterial.uniforms[e].value=u.texture,this.simulationMaterial.uniforms[e].value=u.texture):(this.renderer.render(i,a,c,!1),this.renderMaterial.uniforms[e].value=c.texture,this.simulationMaterial.uniforms[e].value=c.texture),l=!l}}]),e}();n["default"]=d},{}],3:[function(e,t,n){"use strict";var r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol?"symbol":typeof e},o=function(){function e(e,t,n){return e=document.createElement(e),e.id=t,e.style.cssText=n,e}function t(t,n,r){var o=e("div",t,"padding:0 0 3px 3px;text-align:left;background:"+r),i=e("div",t+"Text","font-family:Helvetica,Arial,sans-serif;font-size:9px;font-weight:bold;line-height:15px;color:"+n);for(i.innerHTML=t.toUpperCase(),o.appendChild(i),t=e("div",t+"Graph","width:74px;height:30px;background:"+n),o.appendChild(t),n=0;74>n;n++)t.appendChild(e("span","","width:1px;height:30px;float:left;opacity:0.9;background:"+r));return o}function n(e){for(var t=u.children,n=0;n<t.length;n++)t[n].style.display=n===e?"block":"none";c=e}function r(e,t){e.appendChild(e.firstChild).style.height=Math.min(30,30-30*t)+"px"}var o=self.performance&&self.performance.now?self.performance.now.bind(performance):Date.now,i=o(),a=i,s=0,c=0,u=e("div","stats","width:80px;opacity:0.9;cursor:pointer");u.addEventListener("mousedown",function(e){e.preventDefault(),n(++c%u.children.length)},!1);var l=0,d=1/0,f=0,v=t("fps","#0ff","#002"),p=v.children[0],h=v.children[1];u.appendChild(v);var m=0,x=1/0,y=0,v=t("ms","#0f0","#020"),E=v.children[0],g=v.children[1];if(u.appendChild(v),self.performance&&self.performance.memory){var T=0,w=1/0,M=0,v=t("mb","#f08","#201"),R=v.children[0],z=v.children[1];u.appendChild(v)}return n(c),{REVISION:14,domElement:u,setMode:n,begin:function(){i=o()},end:function(){var e=o();if(m=e-i,x=Math.min(x,m),y=Math.max(y,m),E.textContent=(0|m)+" MS ("+(0|x)+"-"+(0|y)+")",r(g,m/200),s++,e>a+1e3&&(l=Math.round(1e3*s/(e-a)),d=Math.min(d,l),f=Math.max(f,l),p.textContent=l+" FPS ("+d+"-"+f+")",r(h,l/100),a=e,s=0,void 0!==T)){var t=performance.memory.usedJSHeapSize,n=performance.memory.jsHeapSizeLimit;T=Math.round(9.54e-7*t),w=Math.min(w,T),M=Math.max(M,T),R.textContent=T+" MB ("+w+"-"+M+")",r(z,t/n)}return e},update:function(){i=this.end()}}};"object"===("undefined"==typeof t?"undefined":r(t))&&(t.exports=o)},{}],4:[function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{"default":e}}var o=e("./app/app"),i=r(o);document.addEventListener("DOMContentLoaded",function(){new i["default"]},!1)},{"./app/app":1}],5:[function(e,t,n){"use strict";THREE.CopyShader={uniforms:{tDiffuse:{value:null},opacity:{value:1}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform float opacity;","uniform sampler2D tDiffuse;","varying vec2 vUv;","void main() {","vec4 texel = texture2D( tDiffuse, vUv );","gl_FragColor = opacity * texel;","}"].join("\n")}},{}],6:[function(e,t,n){"use strict";THREE.EffectComposer=function(e,t){if(this.renderer=e,void 0===t){var n={minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBAFormat,stencilBuffer:!1},r=e.getSize();t=new THREE.WebGLRenderTarget(r.width,r.height,n)}this.renderTarget1=t,this.renderTarget2=t.clone(),this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2,this.passes=[],void 0===THREE.CopyShader&&console.error("THREE.EffectComposer relies on THREE.CopyShader"),this.copyPass=new THREE.ShaderPass(THREE.CopyShader)},Object.assign(THREE.EffectComposer.prototype,{swapBuffers:function(){var e=this.readBuffer;this.readBuffer=this.writeBuffer,this.writeBuffer=e},addPass:function(e){this.passes.push(e);var t=this.renderer.getSize();e.setSize(t.width,t.height)},insertPass:function(e,t){this.passes.splice(t,0,e)},render:function(e){var t,n,r=!1,o=this.passes.length;for(n=0;n<o;n++)if(t=this.passes[n],t.enabled!==!1){if(t.render(this.renderer,this.writeBuffer,this.readBuffer,e,r),t.needsSwap){if(r){var i=this.renderer.context;i.stencilFunc(i.NOTEQUAL,1,4294967295),this.copyPass.render(this.renderer,this.writeBuffer,this.readBuffer,e),i.stencilFunc(i.EQUAL,1,4294967295)}this.swapBuffers()}void 0!==THREE.MaskPass&&(t instanceof THREE.MaskPass?r=!0:t instanceof THREE.ClearMaskPass&&(r=!1))}},reset:function(e){if(void 0===e){var t=this.renderer.getSize();e=this.renderTarget1.clone(),e.setSize(t.width,t.height)}this.renderTarget1.dispose(),this.renderTarget2.dispose(),this.renderTarget1=e,this.renderTarget2=e.clone(),this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2},setSize:function(e,t){this.renderTarget1.setSize(e,t),this.renderTarget2.setSize(e,t);for(var n=0;n<this.passes.length;n++)this.passes[n].setSize(e,t)}}),THREE.Pass=function(){this.enabled=!0,this.needsSwap=!0,this.clear=!1,this.renderToScreen=!1},Object.assign(THREE.Pass.prototype,{setSize:function(e,t){},render:function(e,t,n,r,o){console.error("THREE.Pass: .render() must be implemented in derived pass.")}})},{}],7:[function(e,t,n){"use strict";THREE.MaskPass=function(e,t){THREE.Pass.call(this),this.scene=e,this.camera=t,this.clear=!0,this.needsSwap=!1,this.inverse=!1},THREE.MaskPass.prototype=Object.assign(Object.create(THREE.Pass.prototype),{constructor:THREE.MaskPass,render:function(e,t,n,r,o){var i=e.context,a=e.state;a.buffers.color.setMask(!1),a.buffers.depth.setMask(!1),a.buffers.color.setLocked(!0),a.buffers.depth.setLocked(!0);var s,c;this.inverse?(s=0,c=1):(s=1,c=0),a.buffers.stencil.setTest(!0),a.buffers.stencil.setOp(i.REPLACE,i.REPLACE,i.REPLACE),a.buffers.stencil.setFunc(i.ALWAYS,s,4294967295),a.buffers.stencil.setClear(c),e.render(this.scene,this.camera,n,this.clear),e.render(this.scene,this.camera,t,this.clear),a.buffers.color.setLocked(!1),a.buffers.depth.setLocked(!1),a.buffers.stencil.setFunc(i.EQUAL,1,4294967295),a.buffers.stencil.setOp(i.KEEP,i.KEEP,i.KEEP)}}),THREE.ClearMaskPass=function(){THREE.Pass.call(this),this.needsSwap=!1},THREE.ClearMaskPass.prototype=Object.create(THREE.Pass.prototype),Object.assign(THREE.ClearMaskPass.prototype,{render:function(e,t,n,r,o){e.state.buffers.stencil.setTest(!1)}})},{}],8:[function(e,t,n){"use strict";THREE.RenderPass=function(e,t,n,r,o){THREE.Pass.call(this),this.scene=e,this.camera=t,this.overrideMaterial=n,this.clearColor=r,this.clearAlpha=void 0!==o?o:0,this.clear=!0,this.needsSwap=!1},THREE.RenderPass.prototype=Object.assign(Object.create(THREE.Pass.prototype),{constructor:THREE.RenderPass,render:function(e,t,n,r,o){var i=e.autoClear;e.autoClear=!1,this.scene.overrideMaterial=this.overrideMaterial;var a,s;this.clearColor&&(a=e.getClearColor().getHex(),s=e.getClearAlpha(),e.setClearColor(this.clearColor,this.clearAlpha)),e.render(this.scene,this.camera,this.renderToScreen?null:n,this.clear),this.clearColor&&e.setClearColor(a,s),this.scene.overrideMaterial=null,e.autoClear=i}})},{}],9:[function(e,t,n){"use strict";THREE.ShaderPass=function(e,t){THREE.Pass.call(this),this.textureID=void 0!==t?t:"tDiffuse",e instanceof THREE.ShaderMaterial?(this.uniforms=e.uniforms,this.material=e):e&&(this.uniforms=THREE.UniformsUtils.clone(e.uniforms),this.material=new THREE.ShaderMaterial({defines:e.defines||{},uniforms:this.uniforms,vertexShader:e.vertexShader,fragmentShader:e.fragmentShader})),this.camera=new THREE.OrthographicCamera((-1),1,1,(-1),0,1),this.scene=new THREE.Scene,this.quad=new THREE.Mesh(new THREE.PlaneBufferGeometry(2,2),null),this.scene.add(this.quad)},THREE.ShaderPass.prototype=Object.assign(Object.create(THREE.Pass.prototype),{constructor:THREE.ShaderPass,render:function(e,t,n,r,o){this.uniforms[this.textureID]&&(this.uniforms[this.textureID].value=n.texture),this.quad.material=this.material,this.renderToScreen?e.render(this.scene,this.camera):e.render(this.scene,this.camera,t,this.clear)}})},{}],10:[function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(n,"__esModule",{value:!0});var o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}();e("./EffectComposer"),e("./RenderPass"),e("./ShaderPass"),e("./MaskPass"),e("./CopyShader");var i=void 0,a=void 0,s=void 0,c=void 0,u=function(){function e(t){var n=t.renderer,o=t.camera,u=t.scene;r(this,e),a=new THREE.EffectComposer(n),s=new THREE.RenderPass(u,o),c=new THREE.ShaderPass(THREE.CopyShader),c.renderToScreen=!0,i={},a=new THREE.EffectComposer(n),a.addPass(s),a.addPass(c)}return o(e,[{key:"update",value:function(){a.render(.1)}},{key:"resize",value:function(e,t){a&&a.setSize(e,t)}},{key:"dispose",value:function(){i=null,a=null,s=null,c=null}},{key:"passes",get:function(){return i}}]),e}();n["default"]=u},{"./CopyShader":5,"./EffectComposer":6,"./MaskPass":7,"./RenderPass":8,"./ShaderPass":9}],11:[function(e,t,n){"use strict";function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(n,"__esModule",{value:!0});var o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=void 0,a=void 0,s=void 0,c=void 0,u=void 0,l=void 0,d=void 0,f=void 0,v=void 0,p=!1,h=function(){function e(){r(this,e),a={},s={textures:{},geometry:{},fonts:{},data:{}},f=this.checkLoaded,v=this}return o(e,[{key:"load",value:function(e,t,n){l=n,d=t,c=e.length,u=0;var r=this;e.forEach(function(e){"[object Array]"!==Object.prototype.toString.call(e.file)?e.file.indexOf(".png")>0||e.file.indexOf(".jpg")>0||e.file.indexOf(".jpeg")>0||e.file.indexOf(".gif")>0?r.loadTexture(e):e.file.indexOf(".json")>0?e.isData?r.loadDataJSON(e):e.isFont?r.loadFontJSON(e):r.loadGeometryJSON(e):e.file.indexOf(".dae")>0&&r.loadCollada(e):r.loadCubemap(e)}),i=setInterval(r.update,1e3/30)}},{key:"loadDataJSON",value:function(e){var t=new XMLHttpRequest;t.overrideMimeType("application/json"),t.open("GET",e.file,!0),t.onreadystatechange=function(){4===t.readyState&&200===t.status&&(s.data[e.id]=JSON.parse(t.responseText),u++,f())},t.send()}},{key:"loadGeometryJSON",value:function(e){var t=new THREE.JSONLoader;a[e.id]={loaded:0,total:0},t.load(e.file,function(t){a[e.id].loaded=a[e.id].total,s.geometry[e.id]=t,u++,f()},function(t){a[e.id].loaded=t.loaded,a[e.id].total=t.total})}},{key:"loadFontJSON",value:function(e){var t=new THREE.FontLoader;a[e.id]={loaded:0,total:0},t.load(e.file,function(t){a[e.id].loaded=a[e.id].total,s.fonts[e.id]=t,u++,f()},function(t){a[e.id].loaded=t.loaded,a[e.id].total=t.total})}},{key:"loadCollada",value:function(e){var t=new THREE.ColladaLoader;a[e.id]={loaded:0,total:0},t.load(e.file,function(t){a[e.id].loaded=a[e.id].total,s.geometry[e.id]=t,u++,f()},function(t){a[e.id].loaded=t.loaded,a[e.id].total=t.total})}},{key:"loadTexture",value:function(e){var t=new THREE.TextureLoader;a[e.id]={loaded:0,total:0},t.load(e.file,function(t){a[e.id].loaded=a[e.id].total,s.textures[e.id]=t,u++,f()},function(t){a[e.id].loaded=t.loaded,a[e.id].total=t.total})}},{key:"loadCubemap",value:function(e){var t=new THREE.CubeTextureLoader;a[e.id]={loaded:0,total:0},t.load(e.file,function(t){a[e.id].loaded=a[e.id].total,s.textures[e.id]=t,u++,f()},function(t){a[e.id].loaded=t.loaded,a[e.id].total=t.total})}},{key:"checkLoaded",value:function(){p||u===c&&(p=!0,clearInterval(i),v.update(),"function"==typeof d&&d(s))}},{key:"update",value:function(){if("function"==typeof l){var e=0,t=0;for(var n in a)e+=parseInt(a[n].loaded),t+=parseInt(a[n].total);l&&l(e,t)}}},{key:"dispose",value:function(){clearInterval(i),i=null,a=null,s=null,c=null,u=null,l=null,d=null,p=null}}]),e}();n["default"]=h},{}],12:[function(e,t,n){"use strict";function r(e){return e/180*Math.PI}function o(e){return 180*e/Math.PI}function a(e,t,n,r){var o=new THREE.DataTexture(e,t,n,r,THREE.FloatType);return o.minFilter=THREE.NearestFilter,o.magFilter=THREE.NearestFilter,o.generateMipmaps=!1,o.needsUpdate=!0,o}function s(e,t,n){return new THREE.Mesh(new THREE.PlaneGeometry(e||1,t||1),new THREE.MeshBasicMaterial({color:n||16777215}))}function c(e,t){return e+Math.random()*(t-e)}function u(e,t){var n=new THREE.Matrix4;n.makeRotationX(t),n.multiply(e.matrix),e.matrix=n,e.rotation.setFromRotationMatrix(e.matrix)}function l(e,t){var n=new THREE.Matrix4;n.makeRotationY(t),n.multiply(e.matrix),e.matrix=n,e.rotation.setFromRotationMatrix(e.matrix)}function d(e,t){var n=new THREE.Matrix4;n.makeRotationZ(t),n.multiply(e.matrix),e.matrix=n,e.rotation.setFromRotationMatrix(e.matrix)}function f(e,t,n){var r=new THREE.Matrix4;r.makeRotationAxis(t.normalize(),n),r.multiply(e.matrix),e.matrix=r,e.rotation.setFromRotationMatrix(e.matrix)}function v(e,t){e.scale.set(t,t,t)}function p(e){e&&(e.parent&&e.parent.remove(e),e.geometry&&e.geometry.dispose(),e.material&&(e.material.map&&e.material.map.dispose(),e.material.dispose()))}function h(e){if(e)for(;e.length>0;)p(e[0])}function m(e){for(;e.children.length>0;)e.remove(e.children[0])}function x(e,t,n){e.position.x+=(t.x-e.position.x)*n,e.position.y+=(t.y-e.position.y)*n,e.position.z+=(t.z-e.position.z)*n}function y(e,t,n){e.x+=(t.x-e.x)*n,e.y+=(t.y-e.y)*n,e.z+=(t.z-e.z)*n}function E(e,t,n){e.rotation.x+=(t.x-e.rotation.x)*n,e.rotation.y+=(t.y-e.rotation.y)*n,e.rotation.z+=(t.z-e.rotation.z)*n}function g(e){e.updateMatrix(),e.updateMatrixWorld(),e.matrixWorldInverse.getInverse(e.matrixWorld)}function T(e,t,n){return n=n||new THREE.Frustum,g(t),e.updateMatrix(),e.updateMatrixWorld(),n.setFromMatrix((new THREE.Matrix4).multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse)),n.intersectsObject(e)}function w(e,t,n,r){r=r||new THREE.Raycaster,r.setFromCamera(e,t);var o=r.intersectObjects(n);return o.length>0?o[0]:null}function M(e,t){g(t),e.updateMatrixWorld();var n=window.innerWidth,r=window.innerHeight,o=n/2,i=r/2,a=(new THREE.Vector3).setFromMatrixPosition(e.matrixWorld);return a.project(t),{x:a.x*o+o|0,y:-(a.y*i)+i|0}}function R(e,t){g(t),e.updateMatrixWorld();var n=window.innerWidth,r=window.innerHeight,o=(new THREE.Vector3).setFromMatrixPosition(e.matrixWorld),i=new THREE.Matrix4;return i.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),o.applyMatrix4(i),{x:(o.x+1)*n/2|0,y:(-o.y+1)*r/2|0}}function z(e,t){g(t);var n=window.innerWidth,r=window.innerHeight,o=n/2,i=r/2,a=(new THREE.Vector3).copy(e);return a.project(t),{x:a.x*o+o|0,y:-(a.y*i)+i|0}}function P(e,t){g(t);var n=e.x/window.innerWidth*2-1,r=2*-(e.y/window.innerHeight)+1,o=new THREE.Vector3(n,r,.5);o.unproject(t);var i=o.sub(t.position).normalize(),a=-t.position.z/i.z;return t.position.clone().add(i.multiplyScalar(a))}function b(e,t,n){var r=e.x/window.innerWidth*2-1,o=2*-(e.y/window.innerHeight)+1,i=new THREE.Plane(new THREE.Vector3(0,0,1),t),a=new THREE.Vector3(r,o,.5),s=new THREE.Raycaster,c=void 0;return s.setFromCamera(a,n),c=s.ray.intersectPlane(i)}function S(e,t){var n=e.clone().unproject(t),r=n.sub(t.position).normalize(),o=-t.position.z/r.z;return t.position.clone().add(r.multiplyScalar(o))}function H(e,t,n){var r=new THREE.Plane(new THREE.Vector3(0,0,1),n),o=e,i=new THREE.Raycaster;i.pickingRay(o,t);var a=i.ray.intersectPlane(r);return a}function C(e){var t=[0,0],n={};keys=["a","b","c"],geometry2,thresholdDot=Math.cos(THREE.Math.degToRad(1));var r=function(e,t){return e-t};e.geometry instanceof THREE.BufferGeometry?(geometry2=new THREE.Geometry,geometry2.fromBufferGeometry(e.geometry)):geometry2=e.geometry.clone(),geometry2.mergeVertices(),geometry2.computeFaceNormals();for(var o=geometry2.vertices,i=geometry2.faces,a=e.geometry.faces,s=void 0,c=0,u=i.length;c<u;c++)for(var l=i[c],d=0;d<3;d++)t[0]=l[keys[d]],t[1]=l[keys[(d+1)%3]],t.sort(r),s=t.toString(),void 0===n[s]?n[s]={vert1:t[0],vert2:t[1],face1:c,face2:void 0}:n[s].face2=c;var f=[];for(s in n){var v=n[s];(void 0===v.face2||i[v.face1].normal.dot(i[v.face2].normal)<=thresholdDot)&&f.push({vertex1:o[v.vert1],vertex2:o[v.vert2],face1:a[v.face1],face2:a[v.face2],faceIndex1:v.face1,faceIndex2:v.face2})}return f}function O(e){for(var t=e.split("\n"),n=t.length,r=0;r<n;r++)"/*#FOG_INJECTION_1#*/"===t[r]?t[r]=THREE.ShaderChunk.fog_pars_fragment:"/*#FOG_INJECTION_2#*/"===t[r]&&(t[r]=THREE.ShaderChunk.fog_fragment);return t.join("\n")}function _(e,t,n){return{x:e*Math.cos(t)*Math.sin(n),y:e*Math.sin(t)*Math.sin(n),z:e*Math.cos(n)}}function A(e){for(var t=[],n=void 0,r=0;r<e;r++)n=_(1,Math.random()*Math.PI*2,Math.random()*Math.PI*2),t.push(new THREE.Vector3(n.x,n.y,n.z));
return t}function L(e,t){for(var n=[],r=void 0,o=0;o<e;o++)r=_(Math.random()*t,Math.random()*Math.PI*2,Math.random()*Math.PI*2),n.push(new THREE.Vector3(r.x,r.y,r.z));return n}function F(e){for(var t=[],n=Math.PI*(3-Math.sqrt(5)),r=2/e,o=void 0,i=void 0,a=void 0,s=void 0,c=void 0,u=0;u<e;u++)i=u*r-1+r/2,s=Math.sqrt(1-i*i),c=u*n,o=Math.cos(c)*s,a=Math.sin(c)*s,t.push(new THREE.Vector3(o,i,a));return t}function I(e,t){return new THREE.Vector3(c(e,t),c(e,t),c(e,t))}function D(e,t,n){return I(t,n).add(e)}function k(e){var t=180/Math.PI;return new THREE.Euler(e.x*t,e.y*t,e.z*t,e.order)}function j(e,t){var n=new THREE.JSONLoader,r=e.length,o=0,i=void 0,a=void 0,s={};geometries=[];var c=function u(){i=void 0!==e[o].file?e[o].file:e[o],a=void 0!==e[o].id?e[o].id:null,n.load(i,function(e){a&&(s[a]=e),geometries.push({geometry:e,id:a}),o++,o===r?"function"==typeof t&&t(geometries,s):u()})};c()}function V(e,t){var n=e.length,r=0,o=void 0,i=void 0,a={};textures=[],loader=new THREE.TextureLoader,loader.crossOrigin="";var s=function c(){o=void 0!==e[r].file?e[r].file:e[r],i=void 0!==e[r].id?e[r].id:null,loader.load(o,function(e){i&&(a[i]=e),textures.push({texture:e,id:i}),r++,r===n?"function"==typeof t&&t(textures,a):c()})};s()}function N(e,t){for(var n=0;n<e.length;n++)e[n].wrapS=e[n].wrapT=t,e[n].needsUpdate=!0}function B(e,t){for(var n=0;n<e.length;n++)e[n].generateMipmaps=t,e[n].needsUpdate=!0}function U(e,t,n){for(var r=0;r<e.length;r++)t&&(e[r].minFilter=t),n&&(e[r].magFilter=n),e[r].needsUpdate=!0}function W(e,t,n){if("[object Array]"===Object.prototype.toString.call(n)){for(var r="",o=0;o<n.length;o++)r+=n[o]+"\n";return e.replace(t,r)}return e.replace(t,n)}function G(e){console.log(e.x,e.y,e.z)}function q(e,t){var n={attributes:[],uniforms:[],attributeCount:0,uniformCount:0};activeUniforms=e.getProgramParameter(t,e.ACTIVE_UNIFORMS),activeAttributes=e.getProgramParameter(t,e.ACTIVE_ATTRIBUTES);for(var r={35664:"FLOAT_VEC2",35665:"FLOAT_VEC3",35666:"FLOAT_VEC4",35667:"INT_VEC2",35668:"INT_VEC3",35669:"INT_VEC4",35670:"BOOL",35671:"BOOL_VEC2",35672:"BOOL_VEC3",35673:"BOOL_VEC4",35674:"FLOAT_MAT2",35675:"FLOAT_MAT3",35676:"FLOAT_MAT4",35678:"SAMPLER_2D",35680:"SAMPLER_CUBE",5120:"BYTE",5121:"UNSIGNED_BYTE",5122:"SHORT",5123:"UNSIGNED_SHORT",5124:"INT",5125:"UNSIGNED_INT",5126:"FLOAT"},o=0;o<activeUniforms;o++){var a=e.getActiveUniform(t,o);a.typeName=r[a.type],n.uniforms.push(a),n.uniformCount+=a.size}for(i=0;i<activeAttributes;i++){var s=e.getActiveAttrib(t,i);s.typeName=r[s.type],n.attributes.push(s),n.attributeCount+=s.size}console.log(n)}Object.defineProperty(n,"__esModule",{value:!0}),n.degreesToRads=r,n.radsToDegrees=o,n.getDataTexture=a,n.createPlane=s,n.randomRange=c,n.rotateAroundWorldAxisX=u,n.rotateAroundWorldAxisY=l,n.rotateAroundWorldAxisZ=d,n.rotateAroundWorldAxis=f,n.setScale=v,n.disposeOfMesh=p,n.disposeOfChildren=h,n.removeAllChildren=m,n.moveTowards=x,n.moveVectorTowards=y,n.rotateTowards=E,n.updateCameraMatrices=g,n.meshIsInView=T,n.getMouseIntersection=w,n.objectWorldPositionToScreen=M,n.objectWorldPositionToScreenAlt=R,n.worldToScreen=z,n.screenToWorld=P,n.screenToWorldAtZ=b,n.getMouseWorldPos=S,n.getMouseWorldPosAtZ=H,n.getEdges=C,n.addFragmentFogInjections=O,n.pointOnSphere=_,n.getPointsOnSphere=A,n.getPointsWithinSphere=L,n.getPointsOnSphereEvenly=F,n.getRandomVector3=I,n.addRandomVector3=D,n.rotationInDegrees=k,n.loadJSONGeometry=j,n.loadTextures=V,n.setTextureWrapping=N,n.setTextureMipmapping=B,n.setTextureMinMagFilters=U,n.injectShaderCode=W,n.logVector=G,n.logProgramInfo=q;n.axisUp=new THREE.Vector3(0,1,0),n.axisDown=new THREE.Vector3(0,(-1),0),n.axisLeft=new THREE.Vector3((-1),0,0),n.axisRight=new THREE.Vector3(1,0,0),n.axisForward=new THREE.Vector3(0,0,1),n.axisBackward=new THREE.Vector3(0,0,(-1))},{}],13:[function(e,t,n){"use strict";function r(e,t,n){e=e||"div";var r=document.createElement(e);return t&&t.forEach(function(e){r.classList.add(e)}),n&&(r.innerHTML=n),r}function o(e,t,n){return(e-t)/(n-t)}function i(e,t,n){return(n-t)*e+t}function a(e,t,n,r,a){return i(o(e,t,n),r,a)}function s(e,t,n){return Math.min(Math.max(e,Math.min(t,n)),Math.max(t,n))}function c(e,t){var n=t.x-e.x,r=t.y-e.y;return Math.sqrt(n*n+r*r)}function u(e,t,n,r){var o=n-e,i=r-t;return Math.sqrt(o*o+i*i)}function l(e,t){return c(e,t)<=e.radius+t.radius}function d(e,t,n){return u(e,t,n.x,n.y)<n.radius}function f(e,t,n){return v(e,n.x,n.x+n.width)&&v(t,n.y,n.y+n.height)}function v(e,t,n){return e>=Math.min(t,n)&&e<=Math.max(t,n)}function p(e,t,n,r){return Math.max(e,t)>=Math.min(n,r)&&Math.min(e,t)<=Math.max(n,r)}function h(e,t){return p(e.x,e.x+e.width,t.x,t.x+t.width)&&p(e.y,e.y+e.height,t.y,t.y+t.height)}function m(e){return e/180*Math.PI}function x(e){return 180*e/Math.PI}function y(e,t){return Math.atan2(t.y-e.y,t.x-e.x)}function E(e,t){return e+Math.random()*(t-e)}function g(e,t){return Math.floor(e+Math.random()*(t-e+1))}function T(e,t){var n=Math.pow(10,t);return Math.round(e*n)/n}function w(e,t){return Math.round(e/t)*t}function M(e,t,n,r,o){return o=o||{},o.x=Math.pow(1-r,2)*e.x+2*(1-r)*r*t.x+r*r*n.x,o.y=Math.pow(1-r,2)*e.y+2*(1-r)*r*t.y+r*r*n.y,o}function R(e,t,n,r,o,i){return i=i||{},i.x=Math.pow(1-o,3)*e.x+3*Math.pow(1-o,2)*o*t.x+3*(1-o)*o*o*n.x+o*o*o*r.x,i.y=Math.pow(1-o,3)*e.y+3*Math.pow(1-o,2)*o*t.y+3*(1-o)*o*o*n.y+o*o*o*r.y,i}function z(e,t){var n=void 0,r=void 0,o=void 0,i=void 0;t.moveTo(e[0].x,e[0].y);for(var a=1;a<e.length-2;a+=1)n=e[a],r=e[a+1],o=(n.x+r.x)/2,i=(n.y+r.y)/2,t.quadraticCurveTo(n.x,n.y,o,i);n=e[e.length-2],r=e[e.length-1],t.quadraticCurveTo(n.x,n.y,r.x,r.y)}function P(e,t,n){return{x:e*Math.cos(t)*Math.sin(n),y:e*Math.sin(t)*Math.sin(n),z:e*Math.cos(n)}}function b(e){for(var t=[],n=void 0,r=0;r<e;r++)n=P(1,Math.random()*Math.PI*2,Math.random()*Math.PI*2),t.push({x:n.x,y:n.y,z:n.z});return t}function S(e){for(var t=[],n=Math.PI*(3-Math.sqrt(5)),r=2/e,o=void 0,i=void 0,a=void 0,s=void 0,c=void 0,u=0;u<e;u++)i=u*r-1+r/2,s=Math.sqrt(1-i*i),c=u*n,o=Math.cos(c)*s,a=Math.sin(c)*s,t.push({x:o,y:i,z:a});return t}function H(e){return JSON.parse(JSON.stringify(e))}function C(e){return"[object Array]"===Object.prototype.toString.call(e)}function O(e){for(var t=e.length,n=void 0,r=void 0;0!==t;)r=Math.floor(Math.random()*t),t-=1,n=e[t],e[t]=e[r],e[r]=n;return e}function _(e,t){for(var n=[],r=e.length,o=0;o<r;o+=t)n.push(e[o]);return n}function A(e){return e[Math.random()*e.length|0]}function L(e,t,n){for(var r=[],o=e.length,i=0;i<o;i++)v(e[i].z,t,n)&&r.push(e[i]);return r}function F(e,t){for(var n=[],r=0;r<e.length;r++)n.push(e[r][t]);return n}function I(e,t,n,r,o){o=o||0;var i=0,a=function s(){setTimeout(function(){e(t),i++,i<n&&s()},r)};setTimeout(function(){a()},o)}function D(){return!!window.opera||navigator.userAgent.indexOf(" OPR/")>=0}function k(){return"undefined"!=typeof InstallTrigger}function j(){return Object.prototype.toString.call(window.HTMLElement).indexOf("Constructor")>0}function V(){return!!window.chrome&&!D()}function N(){return!!document.documentMode}function B(){return navigator.platform.toLowerCase().indexOf("mac")>-1}function U(){return navigator.platform.toLowerCase().indexOf("win")>-1}function W(){if(window.WebGLRenderingContext){for(var e=document.createElement("canvas"),t=["webgl","experimental-webgl","moz-webgl","webkit-3d"],n=!1,r=0;r<4;r++)try{if(n=e.getContext(t[r]),n&&"function"==typeof n.getParameter)return!0}catch(o){}return!1}return!1}function G(e){return e.indexOf(".mp4")!==-1?"video/mp4":e.indexOf(".webm")!==-1?"video/webm":e.indexOf(".ogg")!==-1?"video/ogg":void 0}function q(e,t){t=t||null;var n=void 0;N()?(n=document.createEvent("CustomEvent"),n.initCustomEvent(e,!0,!1,t),document.dispatchEvent(n)):(n=new CustomEvent(e,{detail:t}),document.dispatchEvent(n))}function J(e,t){t=t||document.body,t.style.cursor!==e&&(t.style.cursor=e)}function Y(e){e=e.replace(/[\[]/,"\\[").replace(/[\]]/,"\\]");var t=new RegExp("[\\?&]"+e+"=([^&#]*)"),n=t.exec(location.search);return null===n?"":decodeURIComponent(n[1].replace(/\+/g," "))}Object.defineProperty(n,"__esModule",{value:!0}),n.createElement=r,n.normalize=o,n.lerp=i,n.map=a,n.clamp=s,n.distance=c,n.distanceXY=u,n.circleCollision=l,n.circlePointCollision=d,n.pointInRect=f,n.inRange=v,n.rangeIntersect=p,n.rectIntersect=h,n.degreesToRads=m,n.radsToDegrees=x,n.angleBetweenPoints=y,n.randomRange=E,n.randomInt=g,n.roundToPlaces=T,n.roundNearest=w,n.quadraticBezier=M,n.cubicBezier=R,n.multicurve=z,n.pointOnSphere=P,n.getPointsOnSphere=b,n.getPointsOnSphereEvenly=S,n.clone=H,n.isArray=C,n.shuffleArray=O,n.thinOutArray=_,n.randomItemFromArray=A,n.arrayRestrictedToRangeZ=L,n.extractKeyFromArray=F,n.repeat=I,n.isOpera=D,n.isFirefox=k,n.isSafari=j,n.isChrome=V,n.isIE=N,n.isMac=B,n.isWindows=U,n.hasWebGL=W,n.getVideoType=G,n.dispatchEvent=q,n.setCursor=J,n.getParameterByName=Y},{}]},{},[4]);
//# sourceMappingURL=app.js.map
