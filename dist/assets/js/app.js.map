{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","src/assets/js/app/app.js","app.js","src/assets/js/app/gpgpu.js","src/assets/js/libs/stats.min.js","src/assets/js/main.js","src/assets/js/post/CopyShader.js","src/assets/js/post/EffectComposer.js","src/assets/js/post/MaskPass.js","src/assets/js/post/RenderPass.js","src/assets/js/post/ShaderPass.js","src/assets/js/post/effects-manager.js","src/assets/js/utils/loader.js","src/assets/js/utils/three-utils.js","src/assets/js/utils/utils.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","Constructor","TypeError","Object","defineProperty","value","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","_utils","_threeUtils","_loader","_loader2","_effectsManager","_effectsManager2","_gpgpu","_gpgpu2","Stats","scope","scene","camera","renderer","effectsManager","mousePos","gpgpu","mesh","tOriginalPositions","tPositions","tData","simulationMaterial","renderMaterial","stats","App","this","THREE","Vector3","createBaseElements","addListeners","manifest","file","id","loadAssets","assets","createScene","handleResize","update","callback","loader","load","width","window","innerWidth","height","innerHeight","Scene","PerspectiveCamera","position","z","WebGLRenderer","setClearColor","setSize","document","body","appendChild","domElement","texSize","format","RGBAFormat","channels","RGBFormat","len","data1","Float32Array","data2","size","randomRange","randomInt","getDataTexture","ShaderMaterial","uniforms","type","curlScale","amplitude","time","mousePosition","forceStrength","rotation","vertexShader","fragmentShader","map","textures","particle","pointSize","transparent","blending","AdditiveBlending","depthTest","depthWrite","vertices","_i","Math","floor","geo","BufferGeometry","addAttribute","BufferAttribute","Points","add","addEventListener","handleMouseMove","removeEventListener","style","left","bottom","aspect","updateProjectionMatrix","resize","x","clientX","y","clientY","getMouseWorldPos","render","requestAnimationFrame","removeListeners","../libs/stats.min","../post/effects-manager","../utils/loader","../utils/three-utils","../utils/utils","./gpgpu","2","rtt1","rtt2","flip","GPGPU","_ref","_ref$size","undefined","_ref$format","gl","getContext","getExtension","alert","getParameter","MAX_VERTEX_TEXTURE_IMAGE_UNITS","OrthographicCamera","Mesh","PlaneBufferGeometry","options","minFilter","NearestFilter","magFilter","FloatType","stencil","WebGLRenderTarget","clone","propertyName","texture","3","_typeof","Symbol","iterator","constructor","b","createElement","cssText","c","d","innerHTML","toUpperCase","m","children","display","p","firstChild","min","q","self","performance","now","bind","Date","k","preventDefault","Infinity","v","A","B","g","w","C","D","memory","h","E","F","REVISION","setMode","begin","end","max","textContent","round","usedJSHeapSize","jsHeapSizeLimit","4","_app","_app2","./app/app","5","CopyShader","tDiffuse","opacity","join","6","EffectComposer","renderTarget","parameters","LinearFilter","stencilBuffer","getSize","renderTarget1","renderTarget2","writeBuffer","readBuffer","passes","console","error","copyPass","ShaderPass","assign","swapBuffers","tmp","addPass","pass","push","insertPass","index","splice","delta","maskActive","il","enabled","needsSwap","context","stencilFunc","NOTEQUAL","EQUAL","MaskPass","ClearMaskPass","reset","dispose","Pass","clear","renderToScreen","7","inverse","create","state","buffers","color","setMask","depth","setLocked","writeValue","clearValue","setTest","setOp","REPLACE","setFunc","ALWAYS","setClear","KEEP","8","RenderPass","overrideMaterial","clearColor","clearAlpha","oldAutoClear","autoClear","oldClearColor","oldClearAlpha","getClearColor","getHex","getClearAlpha","9","shader","textureID","material","UniformsUtils","defines","quad","10","composer","renderPass","EffectsManager","get","./CopyShader","./EffectComposer","./MaskPass","./RenderPass","./ShaderPass","11","interval","loadInfo","files","numFiles","numLoaded","progressCallback","loadCallback","loadCheck","done","Loader","geometry","fonts","data","checkLoaded","onLoadCallback","onProgressCallback","forEach","fileObj","toString","indexOf","loadTexture","isData","loadDataJSON","isFont","loadFontJSON","loadGeometryJSON","loadCollada","loadCubemap","setInterval","xhr","XMLHttpRequest","overrideMimeType","open","onreadystatechange","readyState","status","JSON","parse","responseText","send","JSONLoader","loaded","total","FontLoader","font","ColladaLoader","collada","TextureLoader","CubeTextureLoader","clearInterval","info","parseInt","12","degreesToRads","degrees","PI","radsToDegrees","radians","tex","DataTexture","generateMipmaps","needsUpdate","createPlane","PlaneGeometry","MeshBasicMaterial","random","rotateAroundWorldAxisX","object","matrix","Matrix4","makeRotationX","multiply","setFromRotationMatrix","rotateAroundWorldAxisY","makeRotationY","rotateAroundWorldAxisZ","makeRotationZ","rotateAroundWorldAxis","axis","rotWorldMatrix","makeRotationAxis","normalize","setScale","scale","set","disposeOfMesh","parent","remove","disposeOfChildren","removeAllChildren","object3d","moveTowards","easing","moveVectorTowards","v1","v2","rotateTowards","updateCameraMatrices","updateMatrix","updateMatrixWorld","matrixWorldInverse","getInverse","matrixWorld","meshIsInView","frustum","Frustum","setFromMatrix","multiplyMatrices","projectionMatrix","intersectsObject","getMouseIntersection","mouse","objects","raycaster","Raycaster","setFromCamera","intersections","intersectObjects","objectWorldPositionToScreen","widthHalf","heightHalf","vector","setFromMatrixPosition","project","objectWorldPositionToScreenAlt","pos","projScreenMat","applyMatrix4","worldToScreen","copy","screenToWorld","unproject","dir","sub","distance","multiplyScalar","screenToWorldAtZ","planeZ","Plane","ray","intersectPlane","mouseScreenPos","vec","getMouseWorldPosAtZ","pickingRay","getEdges","edge","hash","keys","geometry2","thresholdDot","cos","degToRad","sortFunction","Geometry","fromBufferGeometry","mergeVertices","computeFaceNormals","faces","facesOriginal","face","j","sort","vert1","vert2","face1","face2","edges","normal","dot","vertex1","vertex2","faceIndex1","faceIndex2","addFragmentFogInjections","lines","split","_i2","ShaderChunk","pointOnSphere","a1","a2","sin","getPointsOnSphere","pts","pt","_i3","getPointsWithinSphere","maxRadius","_i4","getPointsOnSphereEvenly","inc","sqrt","off","phi","getRandomVector3","addRandomVector3","rotationInDegrees","Euler","order","loadJSONGeometry","geometriesById","geometries","loadTextures","texturesById","crossOrigin","setTextureWrapping","wrapping","_i5","wrapS","wrapT","setTextureMipmapping","mipmapping","_i6","setTextureMinMagFilters","_i7","injectShaderCode","original","injection","replacement","_i8","replace","logVector","log","logProgramInfo","program","result","attributes","attributeCount","uniformCount","activeUniforms","getProgramParameter","ACTIVE_UNIFORMS","activeAttributes","ACTIVE_ATTRIBUTES","enums","35664","35665","35666","35667","35668","35669","35670","35671","35672","35673","35674","35675","35676","35678","35680","5120","5121","5122","5123","5124","5125","5126","_i9","uniform","getActiveUniform","typeName","attribute","getActiveAttrib","axisUp","axisDown","axisLeft","axisRight","axisForward","axisBackward","13","classNames","content","el","name","classList","lerp","norm","sourceMin","sourceMax","destMin","destMax","clamp","p0","p1","dx","dy","distanceXY","x0","y0","x1","y1","circleCollision","c0","c1","radius","circlePointCollision","circle","pointInRect","rect","inRange","rangeIntersect","min0","max0","min1","max1","rectIntersect","r0","r1","angleBetweenPoints","p2","atan2","roundToPlaces","places","mult","pow","roundNearest","nearest","quadraticBezier","pFinal","cubicBezier","p3","multicurve","points","midx","midy","moveTo","quadraticCurveTo","stringify","isArray","arg","shuffleArray","array","currentIndex","temporaryValue","randomIndex","thinOutArray","newArray","randomItemFromArray","arrayRestrictedToRangeZ","minZ","maxZ","extractKeyFromArray","repeat","params","intervals","delay","startDelay","doStuff","setTimeout","isOpera","opera","navigator","userAgent","isFirefox","InstallTrigger","isSafari","HTMLElement","isChrome","chrome","isIE","documentMode","isMac","platform","toLowerCase","isWindows","hasWebGL","WebGLRenderingContext","canvas","names","getVideoType","dispatchEvent","eventName","config","event","createEvent","initCustomEvent","CustomEvent","detail","setCursor","cursor","element","getParameterByName","regex","RegExp","results","exec","location","search","decodeURIComponent"],"mappings":"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AOE,gBAAkBkC,EAAU5e,KAGvCyJ,QAAQ4S,IAAIG,GXhhBHxhB,OAAOC,eAAed,EAAQ,cAAce,OAAM,IAAOf,EWvHtDwX,cAAAA,EXuH0FxX,EWlH1F2X,cAAAA,EXkH8H3X,EW7G9HgG,eAAAA,EX6GoKhG,EWnGpKiY,YAAAA,EXmGoMjY,EWjFpM8F,YAAAA,EXiFoO9F,EW5EpOqY,uBAAAA,EX4E0RrY,EWnE1R4Y,uBAAAA,EXmEgV5Y,EW1DhV8Y,uBAAAA,EX0DsY9Y,EWjDtYgZ,sBAAAA,EXiD0bhZ,EWxC1bqZ,SAAAA,EXwCodrZ,EWnCpdwZ,cAAAA,EXmCwfxZ,EWnBxf2Z,kBAAAA,EXmBoiB3Z,EWPpiB4Z,kBAAAA,EXOglB5Z,EWChlB8Z,YAAAA,EXDgnB9Z,EWQhnBga,kBAAAA,EXR4pBha,EWe5pBma,cAAAA,EXfgsBna,EWsBhsBoa,qBAAAA,EXtBkvBpa,EW6BlvB0a,aAAAA,EX7BoxB1a,EWyCpxBib,qBAAAA,EXzCs0Bjb,EWkDt0Byb,4BAAAA,EXlDs4Bzb,EWkEt4B+b,+BAAAA,EXlE48B/b,EWsF58Bmc,cAAAA,EXtFg/Bnc,EWyGh/Bqc,cAAAA,EXzGohCrc,EWyHphC2c,iBAAAA,EXzH8jC3c,EWiJ9jC4I,iBAAAA,EXjJwmC5I,EW0JxmCkd,oBAAAA,EX1JwpCld,EWqKxpCod,SAAAA,EXrKkrCpd,EWuOlrCif,yBAAAA,EXvO4uCjf,EWuP5uCsf,cAAAA,EXvPgxCtf,EWgQhxC0f,kBAAAA,EXhQ4zC1f,EW8Q5zC8f,sBAAAA,EX9Qg3C9f,EW4Rh3CigB,wBAAAA,EX5Rw6CjgB,EWgTx6CsgB,iBAAAA,EXhTk9CtgB,EWqTl9CugB,iBAAAA,EXrT4/CvgB,EW0T5/CwgB,kBAAAA,EX1TwiDxgB,EWgUxiD2gB,iBAAAA,EXhUklD3gB,EWsWllD8gB,aAAAA,EXtWonD9gB,EWmapnDihB,mBAAAA,EXnakqDjhB,EW4alqDshB,qBAAAA,EX5aotDthB,EWqbptDyhB,wBAAAA,EXrb4wDzhB,EWmc5wD2hB,iBAAAA,EXncszD3hB,EWqdtzDiiB,UAAAA,EXrdk1DjiB,EW2dl1DmiB,eAAAA,CAzlBHniB,GAAA2kB,OAAS,GAAIthB,OAAMC,QAAQ,EAAG,EAAG,GACjCtD,EAAA4kB,SAAW,GAAIvhB,OAAMC,QAAQ,OAAO,GACpCtD,EAAA6kB,SAAW,GAAIxhB,OAAMC,aAAY,EAAG,GACpCtD,EAAA8kB,UAAY,GAAIzhB,OAAMC,QAAQ,EAAG,EAAG,GACpCtD,EAAA+kB,YAAc,GAAI1hB,OAAMC,QAAQ,EAAG,EAAG,GACtCtD,EAAAglB,aAAe,GAAI3hB,OAAMC,QAAQ,EAAG,aX4K3C2hB,IAAI,SAASvlB,EAAQU,EAAOJ,GYnLlC,YAEO,SAASwL,GAAcrF,EAAM+e,EAAYC,GAC5Chf,EAAOA,GAAQ,KACf,IAAIif,GAAKpgB,SAASwG,cAAcrF,EAOhC,OANG+e,IACCA,EAAW/P,QAAQ,SAASkQ,GACxBD,EAAGE,UAAUxd,IAAIud,KAGtBF,IAASC,EAAGxZ,UAAYuZ,GACpBC,EAGJ,QAAShM,GAAUrY,EAAOoL,EAAKyB,GAClC,OAAQ7M,EAAQoL,IAAQyB,EAAMzB,GAG3B,QAASoZ,GAAKC,EAAMrZ,EAAKyB,GAC5B,OAAQA,EAAMzB,GAAOqZ,EAAOrZ,EAGzB,QAASvF,GAAI7F,EAAO0kB,EAAWC,EAAWC,EAASC,GACtD,MAAOL,GAAKnM,EAAUrY,EAAO0kB,EAAWC,GAAYC,EAASC,GAG1D,QAASC,GAAM9kB,EAAOoL,EAAKyB,GAC9B,MAAOrG,MAAK4E,IAAI5E,KAAKqG,IAAI7M,EAAOwG,KAAK4E,IAAIA,EAAKyB,IAAOrG,KAAKqG,IAAIzB,EAAKyB,IAGhE,QAAS6O,GAASqJ,EAAIC,GACzB,GAAIC,GAAKD,EAAGvd,EAAIsd,EAAGtd,EACfyd,EAAKF,EAAGrd,EAAIod,EAAGpd,CACnB,OAAOnB,MAAK4Y,KAAK6F,EAAKA,EAAKC,EAAKA,GAG7B,QAASC,GAAWC,EAAIC,EAAIC,EAAIC,GACnC,GAAIN,GAAKK,EAAKF,EACVF,EAAKK,EAAKF,CACd,OAAO7e,MAAK4Y,KAAK6F,EAAKA,EAAKC,EAAKA,GAG7B,QAASM,GAAgBC,EAAIC,GAChC,MAAOhK,GAAS+J,EAAIC,IAAOD,EAAGE,OAASD,EAAGC,OAGvC,QAASC,GAAqBne,EAAGE,EAAGke,GACvC,MAAOV,GAAW1d,EAAGE,EAAGke,EAAOpe,EAAGoe,EAAOle,GAAKke,EAAOF,OAGlD,QAASG,GAAYre,EAAGE,EAAGoe,GAC9B,MAAOC,GAAQve,EAAGse,EAAKte,EAAGse,EAAKte,EAAIse,EAAK1iB,QACjC2iB,EAAQre,EAAGoe,EAAKpe,EAAGoe,EAAKpe,EAAIoe,EAAKviB,QAGrC,QAASwiB,GAAQhmB,EAAOoL,EAAKyB,GAChC,MAAO7M,IAASwG,KAAK4E,IAAIA,EAAKyB,IAAQ7M,GAASwG,KAAKqG,IAAIzB,EAAKyB,GAG1D,QAASoZ,GAAeC,EAAMC,EAAMC,EAAMC,GAC7C,MAAO7f,MAAKqG,IAAIqZ,EAAMC,IAAS3f,KAAK4E,IAAIgb,EAAMC,IACvC7f,KAAK4E,IAAI8a,EAAMC,IAAS3f,KAAKqG,IAAIuZ,EAAMC,GAG3C,QAASC,GAAcC,EAAIC,GAC9B,MAAOP,GAAeM,EAAG9e,EAAG8e,EAAG9e,EAAI8e,EAAGljB,MAAOmjB,EAAG/e,EAAG+e,EAAG/e,EAAI+e,EAAGnjB,QACtD4iB,EAAeM,EAAG5e,EAAG4e,EAAG5e,EAAI4e,EAAG/iB,OAAQgjB,EAAG7e,EAAG6e,EAAG7e,EAAI6e,EAAGhjB,QAG3D,QAASiT,GAAcC,GAC1B,MAAOA,GAAU,IAAMlQ,KAAKmQ,GAGzB,QAASC,GAAcC,GAC1B,MAAiB,KAAVA,EAAgBrQ,KAAKmQ,GAGzB,QAAS8P,GAAmBzB,EAAI0B,GACnC,MAAOlgB,MAAKmgB,MAAMD,EAAG/e,EAAIqd,EAAGrd,EAAG+e,EAAGjf,EAAIud,EAAGvd,GAGtC,QAAS1C,GAAYqG,EAAKyB,GAC7B,MAAOzB,GAAM5E,KAAK6Q,UAAYxK,EAAMzB,GAGjC,QAASpG,GAAUoG,EAAKyB,GAC3B,MAAOrG,MAAKC,MAAM2E,EAAM5E,KAAK6Q,UAAYxK,EAAMzB,EAAM,IAGlD,QAASwb,GAAc5mB,EAAO6mB,GACjC,GAAIC,GAAOtgB,KAAKugB,IAAI,GAAIF,EACxB,OAAOrgB,MAAKuG,MAAM/M,EAAQ8mB,GAAQA,EAG/B,QAASE,GAAahnB,EAAOinB,GAChC,MAAOzgB,MAAKuG,MAAM/M,EAAQinB,GAAWA,EAGlC,QAASC,GAAgBnC,EAAIC,EAAI0B,EAAItoB,EAAG+oB,GAQ3C,MAPAA,GAASA,MACTA,EAAO1f,EAAIjB,KAAKugB,IAAI,EAAI3oB,EAAG,GAAK2mB,EAAGtd,EACd,GAAT,EAAIrJ,GAASA,EAAI4mB,EAAGvd,EACrBrJ,EAAIA,EAAIsoB,EAAGjf,EACtB0f,EAAOxf,EAAInB,KAAKugB,IAAI,EAAI3oB,EAAG,GAAK2mB,EAAGpd,EACd,GAAT,EAAIvJ,GAASA,EAAI4mB,EAAGrd,EACrBvJ,EAAIA,EAAIsoB,EAAG/e,EACfwf,EAGJ,QAASC,GAAYrC,EAAIC,EAAI0B,EAAIW,EAAIjpB,EAAG+oB,GAU3C,MATAA,GAASA,MACTA,EAAO1f,EAAIjB,KAAKugB,IAAI,EAAI3oB,EAAG,GAAK2mB,EAAGtd,EACH,EAArBjB,KAAKugB,IAAI,EAAI3oB,EAAG,GAASA,EAAI4mB,EAAGvd,EACtB,GAAT,EAAIrJ,GAASA,EAAIA,EAAIsoB,EAAGjf,EACzBrJ,EAAIA,EAAIA,EAAIipB,EAAG5f,EAC1B0f,EAAOxf,EAAInB,KAAKugB,IAAI,EAAI3oB,EAAG,GAAK2mB,EAAGpd,EACH,EAArBnB,KAAKugB,IAAI,EAAI3oB,EAAG,GAASA,EAAI4mB,EAAGrd,EACtB,GAAT,EAAIvJ,GAASA,EAAIA,EAAIsoB,EAAG/e,EACzBvJ,EAAIA,EAAIA,EAAIipB,EAAG1f,EACnBwf,EAGJ,QAASG,GAAWC,EAAQ9X,GAC/B,GAAIsV,GAAA,OAAIC,EAAA,OAAIwC,EAAA,OAAMC,EAAA,MAElBhY,GAAQiY,OAAOH,EAAO,GAAG9f,EAAG8f,EAAO,GAAG5f,EAEtC,KAAI,GAAI/I,GAAI,EAAGA,EAAI2oB,EAAOpoB,OAAS,EAAGP,GAAK,EACvCmmB,EAAKwC,EAAO3oB,GACZomB,EAAKuC,EAAO3oB,EAAI,GAChB4oB,GAAQzC,EAAGtd,EAAIud,EAAGvd,GAAK,EACvBggB,GAAQ1C,EAAGpd,EAAIqd,EAAGrd,GAAK,EACvB8H,EAAQkY,iBAAiB5C,EAAGtd,EAAGsd,EAAGpd,EAAG6f,EAAMC,EAG/C1C,GAAKwC,EAAOA,EAAOpoB,OAAS,GAC5B6lB,EAAKuC,EAAOA,EAAOpoB,OAAS,GAC5BsQ,EAAQkY,iBAAiB5C,EAAGtd,EAAGsd,EAAGpd,EAAGqd,EAAGvd,EAAGud,EAAGrd,GAG3C,QAAS4W,GAAcjgB,EAAGkgB,EAAIC,GACjC,OACIhX,EAAGnJ,EAAIkI,KAAKmW,IAAI6B,GAAMhY,KAAKkY,IAAID,GAC/B9W,EAAGrJ,EAAIkI,KAAKkY,IAAIF,GAAMhY,KAAKkY,IAAID,GAC/B5a,EAAGvF,EAAIkI,KAAKmW,IAAI8B,IAIjB,QAASE,GAAkBtgB,GAI9B,IAAI,GAHAugB,MACAC,EAAA,OAEIjgB,EAAI,EAAGA,EAAIP,EAAGO,IAElBigB,EAAKN,EAAc,EAAG/X,KAAK6Q,SAAW7Q,KAAKmQ,GAAK,EAAGnQ,KAAK6Q,SAAW7Q,KAAKmQ,GAAK,GAC7EiI,EAAI5P,MAAMvH,EAAEoX,EAAGpX,EAAGE,EAAEkX,EAAGlX,EAAG9D,EAAEgb,EAAGhb,GAGnC,OAAO+a,GAGJ,QAASM,GAAwB7gB,GAOpC,IAAK,GANDugB,MACAO,EAAM3Y,KAAKmQ,IAAM,EAAInQ,KAAK4Y,KAAK,IAC/BC,EAAM,EAAMhhB,EACZoJ,EAAA,OAAGE,EAAA,OAAG9D,EAAA,OAAGvF,EAAA,OACTghB,EAAA,OAEK3T,EAAI,EAAGA,EAAItN,EAAGsN,IACnBhE,EAAIgE,EAAI0T,EAAM,EAAKA,EAAK,EACxB/gB,EAAIkI,KAAK4Y,KAAK,EAAIzX,EAAIA,GACtB2X,EAAM3T,EAAIwT,EACV1X,EAAIjB,KAAKmW,IAAI2C,GAAOhhB,EACpBuF,EAAI2C,KAAKkY,IAAIY,GAAOhhB,EAEpBsgB,EAAI5P,MAAMvH,EAAEA,EAAGE,EAAEA,EAAG9D,EAAEA,GAE1B,OAAO+a,GAGJ,QAAS5U,GAAMzK,GAClB,MAAOiW,MAAKC,MAAMD,KAAKoS,UAAUroB,IAG9B,QAASsoB,GAAQC,GACpB,MAA+C,mBAAxChoB,OAAOc,UAAU0T,SAASpV,KAAK4oB,GAGnC,QAASC,GAAaC,GAKzB,IAJA,GAAIC,GAAeD,EAAM7oB,OACrB+oB,EAAA,OACAC,EAAA,OAEG,IAAMF,GAETE,EAAc3hB,KAAKC,MAAMD,KAAK6Q,SAAW4Q,GACzCA,GAAgB,EAChBC,EAAiBF,EAAMC,GACvBD,EAAMC,GAAgBD,EAAMG,GAC5BH,EAAMG,GAAeD,CAGzB,OAAOF,GAGJ,QAASI,GAAaJ,EAAO3pB,GAIhC,IAAI,GAHAgqB,MACA3jB,EAAMsjB,EAAM7oB,OAERP,EAAI,EAAGA,EAAI8F,EAAK9F,GAAKP,EAEzBgqB,EAASrZ,KAAKgZ,EAAMppB,GAGxB,OAAOypB,GAGJ,QAASC,GAAoBN,GAChC,MAAOA,GAAMxhB,KAAK6Q,SAAW2Q,EAAM7oB,OAAS,GAGzC,QAASopB,GAAwBP,EAAOQ,EAAMC,GAIjD,IAAI,GAHAJ,MACA3jB,EAAMsjB,EAAM7oB,OAERP,EAAI,EAAGA,EAAI8F,EAAK9F,IAEjBonB,EAAQgC,EAAMppB,GAAGiF,EAAG2kB,EAAMC,IACzBJ,EAASrZ,KAAKgZ,EAAMppB,GAG5B,OAAOypB,GAGJ,QAASK,GAAoBV,EAAOvnB,GAGvC,IAAI,GADA/B,MACIE,EAAI,EAAGA,EAAIopB,EAAM7oB,OAAQP,IAE7BF,EAAEsQ,KAAKgZ,EAAMppB,GAAG6B,GAEpB,OAAO/B,GAGJ,QAASiqB,GAAOzlB,EAAU0lB,EAAQC,EAAWC,EAAOC,GACvDA,EAAaA,GAAc,CAC3B,IAAInqB,GAAI,EACJoqB,EAAU,QAAVA,KACAC,WAAW,WACP/lB,EAAS0lB,GACThqB,IACGA,EAAIiqB,GACHG,KACLF,GAEPG,YAAW,WACPD,KACDD,GAGA,QAASG,KAEZ,QAAS5lB,OAAO6lB,OAASC,UAAUC,UAAU9U,QAAQ,UAAY,EAG9D,QAAS+U,KAEZ,MAAiC,mBAAnBC,gBAGX,QAASC,KAEZ,MAAO1pB,QAAOc,UAAU0T,SAASpV,KAAKoE,OAAOmmB,aAAalV,QAAQ,eAAiB,EAGhF,QAASmV,KAEZ,QAASpmB,OAAOqmB,SAAWT,IAGxB,QAASU,KAEZ,QAAkB3lB,SAAS4lB,aAGxB,QAASC,KACZ,MAAOV,WAAUW,SAASC,cAAczV,QAAQ,UAG7C,QAAS0V,KACZ,MAAOb,WAAUW,SAASC,cAAczV,QAAQ,UAG7C,QAAS2V,KACZ,GAAM5mB,OAAO6mB,sBAAuB,CAKhC,IAAI,GAJAC,GAASnmB,SAASwG,cAAc,UAChC4f,GAAS,QAAS,qBAAsB,YAAa,aACrD5a,GAAU,EAEN7Q,EAAE,EAAEA,EAAE,EAAEA,IACZ,IAEI,GADA6Q,EAAU2a,EAAOnhB,WAAWohB,EAAMzrB,IAC9B6Q,GAA2C,kBAAzBA,GAAQrG,aAE1B,OAAO,EAEb,MAAMjL,IAGZ,OAAO,EAGX,OAAO,EAGJ,QAASmsB,GAAa3nB,GAEzB,MAAGA,GAAK4R,QAAQ,aACL,YACH5R,EAAK4R,QAAQ,cACV,aACH5R,EAAK4R,QAAQ,aACV,YADN,OAIF,QAASgW,GAAcC,EAAWC,GAErCA,EAASA,GAAU,IAEnB,IAAIC,GAAA,MAEAd,MASAc,EAAQzmB,SAAS0mB,YAAY,eAC7BD,EAAME,gBAAgBJ,GAAW,GAAM,EAAOC,GAC9CxmB,SAASsmB,cAAcG,KATvBA,EAAQ,GAAIG,aAAYL,GACpBM,OAAQL,IAEZxmB,SAASsmB,cAAcG,IAUxB,QAASK,GAAUC,EAAQC,GAE9BA,EAAUA,GAAWhnB,SAASC,KAE3B+mB,EAAQ9jB,MAAM6jB,SAAWA,IAExBC,EAAQ9jB,MAAM6jB,OAASA,GAIxB,QAASE,GAAmB5G,GAE/BA,EAAOA,EAAKrD,QAAQ,OAAQ,OAAOA,QAAQ,OAAQ,MACnD,IAAIkK,GAAQ,GAAIC,QAAO,SAAW9G,EAAO,aACrC+G,EAAUF,EAAMG,KAAKC,SAASC,OAClC,OAAmB,QAAZH,EAAmB,GAAKI,mBAAmBJ,EAAQ,GAAGpK,QAAQ,MAAO,MZrLnEnhB,OAAOC,eAAed,EAAQ,cAAce,OAAM,IAAOf,EYlLtDwL,cAAAA,EZkL0FxL,EYtK1FoZ,UAAAA,EZsKsHpZ,EYlKtHulB,KAAAA,EZkKwIvlB,EY9JxI4G,IAAAA,EZ8JwJ5G,EY1JxJ6lB,MAAAA,EZ0J4K7lB,EYtJ5Kyc,SAAAA,EZsJsMzc,EYhJtMkmB,WAAAA,EZgJoOlmB,EY1IpOumB,gBAAAA,EZ0I4QvmB,EYtI5Q2mB,qBAAAA,EZsI8T3mB,EYlI9T6mB,YAAAA,EZkI8V7mB,EY7H9V+mB,QAAAA,EZ6HsX/mB,EYzHtXgnB,eAAAA,EZyH4ZhnB,EYpH5ZqnB,cAAAA,EZoHgcrnB,EY/GhcwX,cAAAA,EZ+GoexX,EY3Gpe2X,cAAAA,EZ2GwgB3X,EYvGxgBwnB,mBAAAA,EZuGsjBxnB,EYnGtjB8F,YAAAA,EZmGslB9F,EY/FtlB+F,UAAAA,EZ+FknB/F,EY3FlnB2nB,cAAAA,EZ2FspB3nB,EYtFtpB+nB,aAAAA,EZsFwrB/nB,EYlFxrBioB,gBAAAA,EZkFguBjoB,EYvEhuBmoB,YAAAA,EZuEgwBnoB,EY1DhwBqoB,WAAAA,EZ0D8xBroB,EYxC9xBsf,cAAAA,EZwCk0Btf,EYhCl0B0f,kBAAAA,EZgC82B1f,EYnB92BigB,wBAAAA,EZmBs6BjgB,EYAt6B+K,MAAAA,EZA07B/K,EYI17B4oB,QAAAA,EZJk9B5oB,EYQl9B8oB,aAAAA,EZRo/B9oB,EYyBp/BmpB,aAAAA,EZzBshCnpB,EYqCthCqpB,oBAAAA,EZrCskCrpB,EYyCtkCspB,wBAAAA,EZzC8nCtpB,EYsD9nCypB,oBAAAA,EZtD8qCzpB,EYgE9qC0pB,OAAAA,EZhEosC1pB,EYgFpsCiqB,QAAAA,EZhF4tCjqB,EYqF5tCqqB,UAAAA,EZrFwvCrqB,EY0FxvCuqB,SAAAA,EZ1FkxCvqB,EY+FlxCyqB,SAAAA,EZ/F4yCzqB,EYoG5yC2qB,KAAAA,EZpG8zC3qB,EYyG9zC6qB,MAAAA,EZzGk1C7qB,EY6Gl1CgrB,UAAAA,EZ7G82ChrB,EYiH92CirB,SAAAA,EZjHw4CjrB,EYuIx4CqrB,aAAAA,EZvI06CrrB,EYiJ16CsrB,cAAAA,EZjJ88CtrB,EYsK98C8rB,UAAAA,EZtK0+C9rB,EYgL1+CisB,mBAAAA,YZtKL","file":"app.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\n\n// import * as utils from '../utils/utils';\n// import * as threeUtils from '../utils/three-utils';\nimport {randomRange, randomInt} from '../utils/utils';\nimport {getDataTexture, getMouseWorldPos} from '../utils/three-utils';\nimport Loader from '../utils/loader';\nimport EffectsManager from '../post/effects-manager';\nimport GPGPU from './gpgpu';\n// import FBO from './fbo';\n\nconst glslify = require('glslify');\nconst Stats = require('../libs/stats.min');\n\nlet scope,\n    scene,\n    camera,\n    renderer,\n    container,\n    effectsManager,\n    mousePos,\n    gpgpu,\n    mesh,\n    tOriginalPositions,\n    tPositions,\n    tData,\n    simulationMaterial,\n    renderMaterial,\n    stats;\n\nexport default class App\n{\n    constructor()\n    {\n        scope = this;\n\n        mousePos = new THREE.Vector3(0, 0, 0.5);\n\n        this.createBaseElements();\n        // this.createEffects();\n        this.addListeners();\n        // this.addStats();\n\n        const manifest = [\n            {file:'assets/img/particle.png', id:'particle'}\n        ];\n        this.loadAssets(manifest, function(assets){\n            // console.log('assets:', assets);\n            scope.createScene(assets);\n            scope.handleResize();\n            scope.update();\n        });\n\n        // this.createScene();\n        // this.handleResize();\n        // this.update();\n    }\n\n    loadAssets(manifest, callback)\n    {\n        const loader = new Loader();\n\n        loader.load(manifest, assets => {\n            if(typeof callback === 'function')\n            {\n                callback(assets);\n            }\n        });\n    }\n\n    createBaseElements()\n    {\n        let width = window.innerWidth,\n            height = window.innerHeight;\n\n        scene = new THREE.Scene();\n        // camera = new THREE.OrthographicCamera(width / - 2, width / 2, height / 2, height / - 2, 0.1, 10000);\n        camera = new THREE.PerspectiveCamera(50, width / height, 0.1, 1000);\n        camera.position.z = 350;\n\n        renderer = new THREE.WebGLRenderer();\n        renderer.setClearColor(0x121212, 1);\n        renderer.setSize(width, height);\n        document.body.appendChild(renderer.domElement);\n    }\n\n    createScene(assets)\n    {\n        let texSize = 512,\n            format = THREE.RGBAFormat,\n            channels = format === THREE.RGBFormat ? 3 : 4,\n            len = texSize * texSize * channels,\n            data1 = new Float32Array(len),\n            data2 = new Float32Array(len),\n            size = 50;\n\n        for (var i = 0; i < len; i += channels)\n        {\n            data1[i + 0] = randomRange(-size, size);\n            data1[i + 1] = randomRange(-size, size);\n            data1[i + 2] = randomRange(-size, size);\n            data1[i + 3] = 0;\n\n            data2[i + 0] = randomRange(0.1, 0.9);\n            data2[i + 1] = randomInt(1, 6);//randomInt(1, 3);\n            data2[i + 2] = 0;\n            data2[i + 3] = 0;\n        }\n\n        tOriginalPositions = getDataTexture(data1, texSize, texSize, format);\n        tPositions = getDataTexture(data1, texSize, texSize, format);\n        tData = getDataTexture(data2, texSize, texSize, format);\n\n        simulationMaterial = new THREE.ShaderMaterial({\n            uniforms: {\n                tOriginalPositions: {type:'t', value:tOriginalPositions},\n                tPositions: {type:'t', value:tPositions},\n                tData: {type:'t', value:tData},\n                curlScale: {type:'f', value:1.5},\n                amplitude: {type:'f', value:125},\n                time: {type:'f', value:0},\n                mousePosition: {type:'v3', value:mousePos},\n                forceStrength: {type:'f', value:10000},\n                rotation: {type:'f', value:0.05}\n            },\n            vertexShader: glslify('../../glsl/sim-vertex.glsl'),\n            fragmentShader: glslify('../../glsl/sim-fragment.glsl')\n        });\n\n        renderMaterial = new THREE.ShaderMaterial({\n            uniforms: {\n                tOriginalPositions: {type:'t', value:tOriginalPositions},\n                tPositions: {type:'t', value:tPositions},\n                tData: {type:'t', value:tData},\n                map: {type:'t', value:assets.textures.particle},\n                pointSize: {type:'f', value:1},\n                texSize: {type:'f', value:texSize}\n            },\n            vertexShader: glslify('../../glsl/render-vertex.glsl'),\n            fragmentShader: glslify('../../glsl/render-fragment.glsl'),\n            transparent: true,\n            blending: THREE.AdditiveBlending,\n            depthTest: false,\n            depthWrite: false,\n        });\n\n        // particles\n        len = texSize * texSize;\n        const vertices = new Float32Array(len * 3);\n        for(let i = 0; i < len; i++)\n        {\n            vertices[i * 3 + 0] = (i % texSize) / texSize;\n            vertices[i * 3 + 1] = Math.floor(i / texSize) / texSize;\n        }\n\n        let geo = new THREE.BufferGeometry();\n        geo.addAttribute('position', new THREE.BufferAttribute(vertices, 3));\n\n        mesh = new THREE.Points(geo, renderMaterial);\n        scene.add(mesh);\n\n        gpgpu = new GPGPU({\n            renderer: renderer,\n            simulationMaterial: simulationMaterial,\n            renderMaterial: renderMaterial,\n            size: texSize,\n            format: format\n        });\n\n        // fbo = new FBO({\n        //     renderer: renderer,\n        //     simulationMaterial: simulationMaterial,\n        //     renderMaterial: renderMaterial,\n        //     size: texSize,\n        //     format: format\n        // });\n        // scene.add(fbo.mesh);\n    }\n\n    addListeners()\n    {\n        window.addEventListener('resize', this.handleResize, false);\n        window.addEventListener('orientationchange', this.handleResize, false);\n        window.addEventListener('mousemove', this.handleMouseMove, false);\n        // window.addEventListener('mousedown', this.handleMouseDown, false);\n        // window.addEventListener('mouseup', this.handleMouseUp, false);\n        // window.addEventListener('touchmove', this.handleTouchMove, false);\n        // window.addEventListener('touchstart', this.handleTouchStart, false);\n        // window.addEventListener('touchend', this.handleTouchEnd, false);\n    }\n\n    removeListeners()\n    {\n        window.removeEventListener('resize', this.handleResize);\n        window.removeEventListener('orientationchange', this.handleResize);\n        window.removeEventListener('mousemove', this.handleMouseMove);\n        // window.removeEventListener('mousedown', this.handleMouseDown);\n        // window.removeEventListener('mouseup', this.handleMouseUp);\n        // window.removeEventListener('touchmove', this.handleTouchMove);\n        // window.removeEventListener('touchstart', this.handleTouchStart);\n        // window.removeEventListener('touchend', this.handleTouchEnd);\n    }\n\n    addStats()\n    {\n        stats = new Stats();\n        stats.domElement.style.position = 'absolute';\n        stats.domElement.style.left = '0px';\n        stats.domElement.style.bottom = '0px';\n        document.body.appendChild(stats.domElement);\n    }\n\n    createEffects()\n    {\n        effectsManager = new EffectsManager({\n            renderer: renderer,\n            camera: camera,\n            scene: scene\n        });\n    }\n\n    handleResize(e)\n    {\n        let width = window.innerWidth,\n            height = window.innerHeight;\n\n        camera.aspect = width / height;\n\n        camera.updateProjectionMatrix();\n        renderer.setSize(width, height);\n\n        if(effectsManager)\n        {\n            effectsManager.resize(width, height);\n        }\n    }\n\n    handleMouseMove(e)\n    {\n        mousePos.x = ( e.clientX / window.innerWidth ) * 2 - 1;\n        mousePos.y = - ( e.clientY / window.innerHeight ) * 2 + 1;\n    }\n\n    // handleMouseDown(e)\n    // {\n\n    // }\n\n    // handleMouseUp(e)\n    // {\n\n    // }\n\n    // handleTouchMove(e)\n    // {\n    //     let touchObj = e.changedTouches[0];\n    //     scope.handleMouseMove(touchObj);\n    // }\n\n    // handleTouchStart(e)\n    // {\n    //     let touchObj = e.changedTouches[0];\n    //     scope.handleMouseDown(touchObj);\n    // }\n\n    // handleTouchEnd(e)\n    // {\n    //     let touchObj = e.changedTouches[0];\n    //     scope.handleMouseUp(touchObj);\n    // }\n\n    update()\n    {\n        simulationMaterial.uniforms.time.value += 0.001;\n\n        simulationMaterial.uniforms.mousePosition.value = getMouseWorldPos(mousePos, camera);\n        // console.log(simulationMaterial.uniforms.mousePosition.value);\n        // simulationMaterial.uniforms.rotation.value = 0.05;\n        // console.log(mouseWorldPos.x, mouseWorldPos.y);\n\n        // simulationMaterial.uniforms.curlScale.value += (1 - simulationMaterial.uniforms.curlScale.value) * 0.01;\n\n        gpgpu.update('tPositions');\n        // mesh.rotation.x += 0.01;\n        // mesh.rotation.y += 0.01;\n\n        // fbo.update();\n        // fbo.mesh.rotation.x += 0.01;\n        // fbo.mesh.rotation.y -= 0.01;\n\n        if(effectsManager)\n        {\n            effectsManager.update();\n        }\n        else\n        {\n            renderer.render(scene, camera);\n        }\n\n        if(stats)\n        {\n            stats.update();\n        }\n\n        requestAnimationFrame(scope.update);\n    }\n\n    dispose()\n    {\n        // TODO - clean up geometry\n        removeListeners();\n    }\n}","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';// import * as utils from '../utils/utils';\n// import * as threeUtils from '../utils/three-utils';\nObject.defineProperty(exports,\"__esModule\",{value:true});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _utils=require('../utils/utils');var _threeUtils=require('../utils/three-utils');var _loader=require('../utils/loader');var _loader2=_interopRequireDefault(_loader);var _effectsManager=require('../post/effects-manager');var _effectsManager2=_interopRequireDefault(_effectsManager);var _gpgpu=require('./gpgpu');var _gpgpu2=_interopRequireDefault(_gpgpu);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}// import FBO from './fbo';\nvar Stats=require('../libs/stats.min');var scope=void 0,scene=void 0,camera=void 0,renderer=void 0,container=void 0,effectsManager=void 0,mousePos=void 0,gpgpu=void 0,mesh=void 0,tOriginalPositions=void 0,tPositions=void 0,tData=void 0,simulationMaterial=void 0,renderMaterial=void 0,stats=void 0;var App=function(){function App(){_classCallCheck(this,App);scope=this;mousePos=new THREE.Vector3(0,0,0.5);this.createBaseElements();// this.createEffects();\nthis.addListeners();// this.addStats();\nvar manifest=[{file:'assets/img/particle.png',id:'particle'}];this.loadAssets(manifest,function(assets){// console.log('assets:', assets);\nscope.createScene(assets);scope.handleResize();scope.update();});// this.createScene();\n// this.handleResize();\n// this.update();\n}_createClass(App,[{key:'loadAssets',value:function loadAssets(manifest,callback){var loader=new _loader2.default();loader.load(manifest,function(assets){if(typeof callback==='function'){callback(assets);}});}},{key:'createBaseElements',value:function createBaseElements(){var width=window.innerWidth,height=window.innerHeight;scene=new THREE.Scene();// camera = new THREE.OrthographicCamera(width / - 2, width / 2, height / 2, height / - 2, 0.1, 10000);\ncamera=new THREE.PerspectiveCamera(50,width/height,0.1,1000);camera.position.z=350;renderer=new THREE.WebGLRenderer();renderer.setClearColor(0x121212,1);renderer.setSize(width,height);document.body.appendChild(renderer.domElement);}},{key:'createScene',value:function createScene(assets){var texSize=512,format=THREE.RGBAFormat,channels=format===THREE.RGBFormat?3:4,len=texSize*texSize*channels,data1=new Float32Array(len),data2=new Float32Array(len),size=50;for(var i=0;i<len;i+=channels){data1[i+0]=(0,_utils.randomRange)(-size,size);data1[i+1]=(0,_utils.randomRange)(-size,size);data1[i+2]=(0,_utils.randomRange)(-size,size);data1[i+3]=0;data2[i+0]=(0,_utils.randomRange)(0.1,0.9);data2[i+1]=(0,_utils.randomInt)(1,6);//randomInt(1, 3);\ndata2[i+2]=0;data2[i+3]=0;}tOriginalPositions=(0,_threeUtils.getDataTexture)(data1,texSize,texSize,format);tPositions=(0,_threeUtils.getDataTexture)(data1,texSize,texSize,format);tData=(0,_threeUtils.getDataTexture)(data2,texSize,texSize,format);simulationMaterial=new THREE.ShaderMaterial({uniforms:{tOriginalPositions:{type:'t',value:tOriginalPositions},tPositions:{type:'t',value:tPositions},tData:{type:'t',value:tData},curlScale:{type:'f',value:1.5},amplitude:{type:'f',value:125},time:{type:'f',value:0},mousePosition:{type:'v3',value:mousePos},forceStrength:{type:'f',value:10000},rotation:{type:'f',value:0.05}},vertexShader:\"#define GLSLIFY 1\\nvarying vec2 vUv;\\n\\nvoid main() {\\n    // vUv = uv;\\n    vUv = vec2(uv.x, 1.0 - uv.y);\\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\\n}\",fragmentShader:\"#define GLSLIFY 1\\n//\\n// Description : Array and textureless GLSL 2D/3D/4D simplex\\n//               noise functions.\\n//      Author : Ian McEwan, Ashima Arts.\\n//  Maintainer : ijm\\n//     Lastmod : 20110822 (ijm)\\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\\n//               Distributed under the MIT License. See LICENSE file.\\n//               https://github.com/ashima/webgl-noise\\n//\\n\\nvec3 mod289(vec3 x) {\\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\n\\nvec4 mod289(vec4 x) {\\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\n\\nvec4 permute(vec4 x) {\\n     return mod289(((x*34.0)+1.0)*x);\\n}\\n\\nvec4 taylorInvSqrt(vec4 r)\\n{\\n  return 1.79284291400159 - 0.85373472095314 * r;\\n}\\n\\nfloat snoise(vec3 v)\\n  {\\n  const vec2  C = vec2(1.0/6.0, 1.0/3.0) ;\\n  const vec4  D = vec4(0.0, 0.5, 1.0, 2.0);\\n\\n// First corner\\n  vec3 i  = floor(v + dot(v, C.yyy) );\\n  vec3 x0 =   v - i + dot(i, C.xxx) ;\\n\\n// Other corners\\n  vec3 g = step(x0.yzx, x0.xyz);\\n  vec3 l = 1.0 - g;\\n  vec3 i1 = min( g.xyz, l.zxy );\\n  vec3 i2 = max( g.xyz, l.zxy );\\n\\n  //   x0 = x0 - 0.0 + 0.0 * C.xxx;\\n  //   x1 = x0 - i1  + 1.0 * C.xxx;\\n  //   x2 = x0 - i2  + 2.0 * C.xxx;\\n  //   x3 = x0 - 1.0 + 3.0 * C.xxx;\\n  vec3 x1 = x0 - i1 + C.xxx;\\n  vec3 x2 = x0 - i2 + C.yyy; // 2.0*C.x = 1/3 = C.y\\n  vec3 x3 = x0 - D.yyy;      // -1.0+3.0*C.x = -0.5 = -D.y\\n\\n// Permutations\\n  i = mod289(i);\\n  vec4 p = permute( permute( permute(\\n             i.z + vec4(0.0, i1.z, i2.z, 1.0 ))\\n           + i.y + vec4(0.0, i1.y, i2.y, 1.0 ))\\n           + i.x + vec4(0.0, i1.x, i2.x, 1.0 ));\\n\\n// Gradients: 7x7 points over a square, mapped onto an octahedron.\\n// The ring size 17*17 = 289 is close to a multiple of 49 (49*6 = 294)\\n  float n_ = 0.142857142857; // 1.0/7.0\\n  vec3  ns = n_ * D.wyz - D.xzx;\\n\\n  vec4 j = p - 49.0 * floor(p * ns.z * ns.z);  //  mod(p,7*7)\\n\\n  vec4 x_ = floor(j * ns.z);\\n  vec4 y_ = floor(j - 7.0 * x_ );    // mod(j,N)\\n\\n  vec4 x = x_ *ns.x + ns.yyyy;\\n  vec4 y = y_ *ns.x + ns.yyyy;\\n  vec4 h = 1.0 - abs(x) - abs(y);\\n\\n  vec4 b0 = vec4( x.xy, y.xy );\\n  vec4 b1 = vec4( x.zw, y.zw );\\n\\n  //vec4 s0 = vec4(lessThan(b0,0.0))*2.0 - 1.0;\\n  //vec4 s1 = vec4(lessThan(b1,0.0))*2.0 - 1.0;\\n  vec4 s0 = floor(b0)*2.0 + 1.0;\\n  vec4 s1 = floor(b1)*2.0 + 1.0;\\n  vec4 sh = -step(h, vec4(0.0));\\n\\n  vec4 a0 = b0.xzyw + s0.xzyw*sh.xxyy ;\\n  vec4 a1 = b1.xzyw + s1.xzyw*sh.zzww ;\\n\\n  vec3 p0 = vec3(a0.xy,h.x);\\n  vec3 p1 = vec3(a0.zw,h.y);\\n  vec3 p2 = vec3(a1.xy,h.z);\\n  vec3 p3 = vec3(a1.zw,h.w);\\n\\n//Normalise gradients\\n  vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\\n  p0 *= norm.x;\\n  p1 *= norm.y;\\n  p2 *= norm.z;\\n  p3 *= norm.w;\\n\\n// Mix final noise value\\n  vec4 m = max(0.6 - vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3)), 0.0);\\n  m = m * m;\\n  return 42.0 * dot( m*m, vec4( dot(p0,x0), dot(p1,x1),\\n                                dot(p2,x2), dot(p3,x3) ) );\\n  }\\n\\nvec3 snoiseVec3( vec3 x ){\\n\\n  float s  = snoise(vec3( x ));\\n  float s1 = snoise(vec3( x.y - 19.1 , x.z + 33.4 , x.x + 47.2 ));\\n  float s2 = snoise(vec3( x.z + 74.2 , x.x - 124.5 , x.y + 99.4 ));\\n  vec3 c = vec3( s , s1 , s2 );\\n  return c;\\n\\n}\\n\\nvec3 curlNoise( vec3 p ){\\n  \\n  const float e = .1;\\n  vec3 dx = vec3( e   , 0.0 , 0.0 );\\n  vec3 dy = vec3( 0.0 , e   , 0.0 );\\n  vec3 dz = vec3( 0.0 , 0.0 , e   );\\n\\n  vec3 p_x0 = snoiseVec3( p - dx );\\n  vec3 p_x1 = snoiseVec3( p + dx );\\n  vec3 p_y0 = snoiseVec3( p - dy );\\n  vec3 p_y1 = snoiseVec3( p + dy );\\n  vec3 p_z0 = snoiseVec3( p - dz );\\n  vec3 p_z1 = snoiseVec3( p + dz );\\n\\n  float x = p_y1.z - p_y0.z - p_z1.y + p_z0.y;\\n  float y = p_z1.x - p_z0.x - p_x1.z + p_x0.z;\\n  float z = p_x1.y - p_x0.y - p_y1.x + p_y0.x;\\n\\n  const float divisor = 1.0 / ( 2.0 * e );\\n  return normalize( vec3( x , y , z ) * divisor );\\n\\n}\\n\\nmat3 rotateAngleAxisMatrix(float angle, vec3 axis)\\n{\\n    float c = cos(angle);\\n    float s = sin(angle);\\n    float t = 1.0 - c;\\n    axis = normalize(axis);\\n    float x = axis.x, y = axis.y, z = axis.z;\\n    return mat3(\\n        t*x*x + c,    t*x*y + s*z,  t*x*z - s*y,\\n        t*x*y - s*z,  t*y*y + c,    t*y*z + s*x,\\n        t*x*z + s*y,  t*y*z - s*x,  t*z*z + c\\n    );\\n}\\n\\nvec3 rotateAngleAxis(float angle, vec3 axis, vec3 v)\\n{\\n    return rotateAngleAxisMatrix(angle, axis) * v;\\n}\\n\\nuniform sampler2D tOriginalPositions;//DATA Texture containing original positions\\nuniform sampler2D tPositions;//DATA Texture containing original positions\\nuniform sampler2D tData;\\nuniform float curlScale;\\nuniform float amplitude;\\nuniform float time;\\nuniform vec3 mousePosition;\\nuniform float forceStrength;\\nuniform float rotation;\\n\\nvarying vec2 vUv;\\n\\nconst vec3 yAxis = vec3(0.0, 1.0, 0.0);\\n\\nvoid main() {\\n\\n    //basic simulation: displays the particles in place.\\n    vec4 oPos = texture2D(tOriginalPositions, vUv);\\n    vec4 pos = texture2D(tPositions, vUv);\\n    // // vec3 pos = texture2D(tPositions, vUv).xyz + (vUv.xyx * 2.0);\\n    // vec3 otherVals = texture2D(tData, vUv).xyz;\\n    // vec3 c = curl(pos + vUv.x + vUv.y + time) * curlScale;\\n    // pos += (c - pos) * otherVals.x;\\n    // pos.x += 0.1;\\n    // pos.a = 1.0;\\n\\n    // pos.xyz += curl(pos.xyz / amplitude + time) * curlScale;// * 0.1;\\n    // pos.xyz = mix(oPos.xyz, curl((pos.xyz) / amplitude) * curlScale, 0.1);// * 0.1;\\n\\n    float dist = distance(oPos.xyz, pos.xyz);\\n\\n    if(dist > 150.0)\\n    {\\n        pos = oPos;\\n        pos.a = 0.0;\\n    }\\n    else\\n    {\\n        pos.xyz += curlNoise(pos.xyz / amplitude) * curlScale;// * 0.1;\\n        // pos.xyz += ((pos.xyz + (curl(pos.xyz / amplitude) * curlScale)) - pos.xyz) * 0.5;\\n\\n        if(pos.a < 0.1)\\n        {\\n            pos.a += 0.001;\\n        }\\n\\n        float mid = 0.5;\\n        pos.xyz = rotateAngleAxis(rotation, yAxis, pos.xyz - mid) + mid;\\n\\n        vec3 force = mousePosition - pos.xyz;\\n        dist = length(force);\\n        float strength = forceStrength / (dist * dist);\\n        force = normalize(force) * strength;\\n\\n        pos.x -= force.x;\\n        pos.y -= force.y;\\n        pos.z -= force.z;\\n    }\\n\\n    // pos.a = cos(pos.y) * 3.0;\\n    // pos.a = 1.0 + abs(cos(pos.x) * 2.0);\\n\\n    // pos.x += cos(pos.y) * 2.0;\\n\\n    gl_FragColor = pos;\\n}\"});renderMaterial=new THREE.ShaderMaterial({uniforms:{tOriginalPositions:{type:'t',value:tOriginalPositions},tPositions:{type:'t',value:tPositions},tData:{type:'t',value:tData},map:{type:'t',value:assets.textures.particle},pointSize:{type:'f',value:1},texSize:{type:'f',value:texSize}},vertexShader:\"#define GLSLIFY 1\\nuniform sampler2D tOriginalPositions;\\nuniform sampler2D tPositions;//RenderTarget containing the transformed positions\\nuniform sampler2D tData;\\nuniform float pointSize;\\nuniform float texSize;\\n\\nvarying vec4 vPos;\\n// varying vec4 vOriginalPos;\\n\\nvoid main() {\\n\\n    vec2 uv = position.xy + vec2(0.5 / texSize, 0.5 / texSize);\\n    vec4 pos = texture2D(tPositions, uv);\\n    vPos = pos;\\n\\n    // vec4 oPos = texture2D(tOriginalPositions, uv);\\n    // vOriginalPos = oPos;\\n\\n    // vec4 pos = texture2D(tPositions, position.xy);\\n\\n    vec4 data = texture2D(tData, uv);\\n    // vec3 otherVals = texture2D(tData, position.xy).xyz;\\n\\n    //regular projection of our position\\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(pos.xyz, 1.0);\\n\\n    //sets the point size\\n    // gl_PointSize = pointSize;\\n    // gl_PointSize = pos.a;\\n    gl_PointSize = data.y;\\n    // gl_PointSize = sin(pos.x) * data.y;\\n    // gl_PointSize = length(pos) * 0.025;\\n}\",fragmentShader:\"#define GLSLIFY 1\\nfloat hue2rgb(float f1, float f2, float hue) {\\n    if (hue < 0.0)\\n        hue += 1.0;\\n    else if (hue > 1.0)\\n        hue -= 1.0;\\n    float res;\\n    if ((6.0 * hue) < 1.0)\\n        res = f1 + (f2 - f1) * 6.0 * hue;\\n    else if ((2.0 * hue) < 1.0)\\n        res = f2;\\n    else if ((3.0 * hue) < 2.0)\\n        res = f1 + (f2 - f1) * ((2.0 / 3.0) - hue) * 6.0;\\n    else\\n        res = f1;\\n    return res;\\n}\\n\\nvec3 hsl2rgb(vec3 hsl) {\\n    vec3 rgb;\\n    \\n    if (hsl.y == 0.0) {\\n        rgb = vec3(hsl.z); // Luminance\\n    } else {\\n        float f2;\\n        \\n        if (hsl.z < 0.5)\\n            f2 = hsl.z * (1.0 + hsl.y);\\n        else\\n            f2 = hsl.z + hsl.y - hsl.y * hsl.z;\\n            \\n        float f1 = 2.0 * hsl.z - f2;\\n        \\n        rgb.r = hue2rgb(f1, f2, hsl.x + (1.0/3.0));\\n        rgb.g = hue2rgb(f1, f2, hsl.x);\\n        rgb.b = hue2rgb(f1, f2, hsl.x - (1.0/3.0));\\n    }   \\n    return rgb;\\n}\\n\\nvec3 hsl2rgb(float h, float s, float l) {\\n    return hsl2rgb(vec3(h, s, l));\\n}\\n\\nuniform sampler2D map;\\nvarying vec4 vPos;\\n// varying vec4 vOriginalPos;\\n\\nvoid main()\\n{\\n    // vec3 rgb = hsl2rgb((vPos.x + vPos.y)/360.0, 1.0, 0.5);\\n    // float dist = distance(vOriginalPos.xyz, vPos.xyz) * 0.005;\\n    // float opacity = smoothstep(0.0, 0.5, dist) * 0.5;\\n    vec3 rgb = hsl2rgb(length(vPos)/150.0, 1.0, 0.65);\\n    // vec3 rgb = hsl2rgb(1.0 - (length(vPos)/180.0), 1.0, 0.5);\\n    gl_FragColor = vec4(rgb, vPos.a) * texture2D(map, gl_PointCoord);\\n    // gl_FragColor = vec4(rgb, vPos.a * sin(gl_FragCoord.x / 2.0)) * texture2D(map, gl_PointCoord);\\n\\n    if(vPos.a < 0.05)\\n    {\\n        discard;\\n    }\\n}\",transparent:true,blending:THREE.AdditiveBlending,depthTest:false,depthWrite:false});// particles\nlen=texSize*texSize;var vertices=new Float32Array(len*3);for(var _i=0;_i<len;_i++){vertices[_i*3+0]=_i%texSize/texSize;vertices[_i*3+1]=Math.floor(_i/texSize)/texSize;}var geo=new THREE.BufferGeometry();geo.addAttribute('position',new THREE.BufferAttribute(vertices,3));mesh=new THREE.Points(geo,renderMaterial);scene.add(mesh);gpgpu=new _gpgpu2.default({renderer:renderer,simulationMaterial:simulationMaterial,renderMaterial:renderMaterial,size:texSize,format:format});// fbo = new FBO({\n//     renderer: renderer,\n//     simulationMaterial: simulationMaterial,\n//     renderMaterial: renderMaterial,\n//     size: texSize,\n//     format: format\n// });\n// scene.add(fbo.mesh);\n}},{key:'addListeners',value:function addListeners(){window.addEventListener('resize',this.handleResize,false);window.addEventListener('orientationchange',this.handleResize,false);window.addEventListener('mousemove',this.handleMouseMove,false);// window.addEventListener('mousedown', this.handleMouseDown, false);\n// window.addEventListener('mouseup', this.handleMouseUp, false);\n// window.addEventListener('touchmove', this.handleTouchMove, false);\n// window.addEventListener('touchstart', this.handleTouchStart, false);\n// window.addEventListener('touchend', this.handleTouchEnd, false);\n}},{key:'removeListeners',value:function removeListeners(){window.removeEventListener('resize',this.handleResize);window.removeEventListener('orientationchange',this.handleResize);window.removeEventListener('mousemove',this.handleMouseMove);// window.removeEventListener('mousedown', this.handleMouseDown);\n// window.removeEventListener('mouseup', this.handleMouseUp);\n// window.removeEventListener('touchmove', this.handleTouchMove);\n// window.removeEventListener('touchstart', this.handleTouchStart);\n// window.removeEventListener('touchend', this.handleTouchEnd);\n}},{key:'addStats',value:function addStats(){stats=new Stats();stats.domElement.style.position='absolute';stats.domElement.style.left='0px';stats.domElement.style.bottom='0px';document.body.appendChild(stats.domElement);}},{key:'createEffects',value:function createEffects(){effectsManager=new _effectsManager2.default({renderer:renderer,camera:camera,scene:scene});}},{key:'handleResize',value:function handleResize(e){var width=window.innerWidth,height=window.innerHeight;camera.aspect=width/height;camera.updateProjectionMatrix();renderer.setSize(width,height);if(effectsManager){effectsManager.resize(width,height);}}},{key:'handleMouseMove',value:function handleMouseMove(e){mousePos.x=e.clientX/window.innerWidth*2-1;mousePos.y=-(e.clientY/window.innerHeight)*2+1;}// handleMouseDown(e)\n// {\n// }\n// handleMouseUp(e)\n// {\n// }\n// handleTouchMove(e)\n// {\n//     let touchObj = e.changedTouches[0];\n//     scope.handleMouseMove(touchObj);\n// }\n// handleTouchStart(e)\n// {\n//     let touchObj = e.changedTouches[0];\n//     scope.handleMouseDown(touchObj);\n// }\n// handleTouchEnd(e)\n// {\n//     let touchObj = e.changedTouches[0];\n//     scope.handleMouseUp(touchObj);\n// }\n},{key:'update',value:function update(){simulationMaterial.uniforms.time.value+=0.001;simulationMaterial.uniforms.mousePosition.value=(0,_threeUtils.getMouseWorldPos)(mousePos,camera);// console.log(simulationMaterial.uniforms.mousePosition.value);\n// simulationMaterial.uniforms.rotation.value = 0.05;\n// console.log(mouseWorldPos.x, mouseWorldPos.y);\n// simulationMaterial.uniforms.curlScale.value += (1 - simulationMaterial.uniforms.curlScale.value) * 0.01;\ngpgpu.update('tPositions');// mesh.rotation.x += 0.01;\n// mesh.rotation.y += 0.01;\n// fbo.update();\n// fbo.mesh.rotation.x += 0.01;\n// fbo.mesh.rotation.y -= 0.01;\nif(effectsManager){effectsManager.update();}else{renderer.render(scene,camera);}if(stats){stats.update();}requestAnimationFrame(scope.update);}},{key:'dispose',value:function dispose(){// TODO - clean up geometry\nremoveListeners();}}]);return App;}();exports.default=App;\n\n},{\"../libs/stats.min\":3,\"../post/effects-manager\":10,\"../utils/loader\":11,\"../utils/three-utils\":12,\"../utils/utils\":13,\"./gpgpu\":2}],2:[function(require,module,exports){\n'use strict';Object.defineProperty(exports,\"__esModule\",{value:true});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}var scene=void 0,camera=void 0,mesh=void 0,rtt1=void 0,rtt2=void 0,flip=false;var GPGPU=function(){function GPGPU(_ref){var renderer=_ref.renderer;var simulationMaterial=_ref.simulationMaterial;var renderMaterial=_ref.renderMaterial;var _ref$size=_ref.size;var size=_ref$size===undefined?128:_ref$size;var _ref$format=_ref.format;var format=_ref$format===undefined?THREE.RGBFormat:_ref$format;_classCallCheck(this,GPGPU);var gl=renderer.getContext();if(!gl.getExtension('OES_texture_float')){alert('No OES_texture_float support for float textures!');return;}if(gl.getParameter(gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS)===0){alert('No support for vertex shader textures!');return;}camera=new THREE.OrthographicCamera(-0.5,0.5,0.5,-0.5,0,1);scene=new THREE.Scene();mesh=new THREE.Mesh(new THREE.PlaneBufferGeometry(1,1),simulationMaterial);scene.add(mesh);var options={minFilter:THREE.NearestFilter,magFilter:THREE.NearestFilter,type:THREE.FloatType,format:format,// depth: false,\nstencil:false};rtt1=new THREE.WebGLRenderTarget(size,size,options);rtt2=rtt1.clone();this.renderer=renderer;this.simulationMaterial=simulationMaterial;this.renderMaterial=renderMaterial;}_createClass(GPGPU,[{key:'update',value:function update(propertyName){propertyName=propertyName||'tPositions';if(flip){this.renderer.render(scene,camera,rtt2,false);this.renderMaterial.uniforms[propertyName].value=rtt2.texture;this.simulationMaterial.uniforms[propertyName].value=rtt2.texture;}else{this.renderer.render(scene,camera,rtt1,false);this.renderMaterial.uniforms[propertyName].value=rtt1.texture;this.simulationMaterial.uniforms[propertyName].value=rtt1.texture;}flip=!flip;}}]);return GPGPU;}();exports.default=GPGPU;\n\n},{}],3:[function(require,module,exports){\n\"use strict\";var _typeof=typeof Symbol===\"function\"&&typeof Symbol.iterator===\"symbol\"?function(obj){return typeof obj;}:function(obj){return obj&&typeof Symbol===\"function\"&&obj.constructor===Symbol?\"symbol\":typeof obj;};// stats.js - http://github.com/mrdoob/stats.js\nvar Stats=function Stats(){function f(a,e,b){a=document.createElement(a);a.id=e;a.style.cssText=b;return a;}function l(a,e,b){var c=f(\"div\",a,\"padding:0 0 3px 3px;text-align:left;background:\"+b),d=f(\"div\",a+\"Text\",\"font-family:Helvetica,Arial,sans-serif;font-size:9px;font-weight:bold;line-height:15px;color:\"+e);d.innerHTML=a.toUpperCase();c.appendChild(d);a=f(\"div\",a+\"Graph\",\"width:74px;height:30px;background:\"+e);c.appendChild(a);for(e=0;74>e;e++){a.appendChild(f(\"span\",\"\",\"width:1px;height:30px;float:left;opacity:0.9;background:\"+b));}return c;}function m(a){for(var b=c.children,d=0;d<b.length;d++){b[d].style.display=d===a?\"block\":\"none\";}n=a;}function p(a,b){a.appendChild(a.firstChild).style.height=Math.min(30,30-30*b)+\"px\";}var q=self.performance&&self.performance.now?self.performance.now.bind(performance):Date.now,k=q(),r=k,t=0,n=0,c=f(\"div\",\"stats\",\"width:80px;opacity:0.9;cursor:pointer\");c.addEventListener(\"mousedown\",function(a){a.preventDefault();m(++n%c.children.length);},!1);var d=0,u=Infinity,v=0,b=l(\"fps\",\"#0ff\",\"#002\"),A=b.children[0],B=b.children[1];c.appendChild(b);var g=0,w=Infinity,x=0,b=l(\"ms\",\"#0f0\",\"#020\"),C=b.children[0],D=b.children[1];c.appendChild(b);if(self.performance&&self.performance.memory){var h=0,y=Infinity,z=0,b=l(\"mb\",\"#f08\",\"#201\"),E=b.children[0],F=b.children[1];c.appendChild(b);}m(n);return{REVISION:14,domElement:c,setMode:m,begin:function begin(){k=q();},end:function end(){var a=q();g=a-k;w=Math.min(w,g);x=Math.max(x,g);C.textContent=(g|0)+\" MS (\"+(w|0)+\"-\"+(x|0)+\")\";p(D,g/200);t++;if(a>r+1E3&&(d=Math.round(1E3*t/(a-r)),u=Math.min(u,d),v=Math.max(v,d),A.textContent=d+\" FPS (\"+u+\"-\"+v+\")\",p(B,d/100),r=a,t=0,void 0!==h)){var b=performance.memory.usedJSHeapSize,c=performance.memory.jsHeapSizeLimit;h=Math.round(9.54E-7*b);y=Math.min(y,h);z=Math.max(z,h);E.textContent=h+\" MB (\"+y+\"-\"+z+\")\";p(F,b/c);}return a;},update:function update(){k=this.end();}};};\"object\"===(typeof module===\"undefined\"?\"undefined\":_typeof(module))&&(module.exports=Stats);\n\n},{}],4:[function(require,module,exports){\n'use strict';var _app=require('./app/app');var _app2=_interopRequireDefault(_app);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}document.addEventListener('DOMContentLoaded',function(){var app=new _app2.default();},false);\n\n},{\"./app/app\":1}],5:[function(require,module,exports){\n\"use strict\";/**\n * @author alteredq / http://alteredqualia.com/\n *\n * Full-screen textured quad shader\n */THREE.CopyShader={uniforms:{\"tDiffuse\":{value:null},\"opacity\":{value:1.0}},vertexShader:[\"varying vec2 vUv;\",\"void main() {\",\"vUv = uv;\",\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\"}\"].join(\"\\n\"),fragmentShader:[\"uniform float opacity;\",\"uniform sampler2D tDiffuse;\",\"varying vec2 vUv;\",\"void main() {\",\"vec4 texel = texture2D( tDiffuse, vUv );\",\"gl_FragColor = opacity * texel;\",\"}\"].join(\"\\n\")};\n\n},{}],6:[function(require,module,exports){\n\"use strict\";/**\n * @author alteredq / http://alteredqualia.com/\n */THREE.EffectComposer=function(renderer,renderTarget){this.renderer=renderer;if(renderTarget===undefined){var parameters={minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBAFormat,stencilBuffer:false};var size=renderer.getSize();renderTarget=new THREE.WebGLRenderTarget(size.width,size.height,parameters);}this.renderTarget1=renderTarget;this.renderTarget2=renderTarget.clone();this.writeBuffer=this.renderTarget1;this.readBuffer=this.renderTarget2;this.passes=[];if(THREE.CopyShader===undefined)console.error(\"THREE.EffectComposer relies on THREE.CopyShader\");this.copyPass=new THREE.ShaderPass(THREE.CopyShader);};Object.assign(THREE.EffectComposer.prototype,{swapBuffers:function swapBuffers(){var tmp=this.readBuffer;this.readBuffer=this.writeBuffer;this.writeBuffer=tmp;},addPass:function addPass(pass){this.passes.push(pass);var size=this.renderer.getSize();pass.setSize(size.width,size.height);},insertPass:function insertPass(pass,index){this.passes.splice(index,0,pass);},render:function render(delta){var maskActive=false;var pass,i,il=this.passes.length;for(i=0;i<il;i++){pass=this.passes[i];if(pass.enabled===false)continue;pass.render(this.renderer,this.writeBuffer,this.readBuffer,delta,maskActive);if(pass.needsSwap){if(maskActive){var context=this.renderer.context;context.stencilFunc(context.NOTEQUAL,1,0xffffffff);this.copyPass.render(this.renderer,this.writeBuffer,this.readBuffer,delta);context.stencilFunc(context.EQUAL,1,0xffffffff);}this.swapBuffers();}if(THREE.MaskPass!==undefined){if(pass instanceof THREE.MaskPass){maskActive=true;}else if(pass instanceof THREE.ClearMaskPass){maskActive=false;}}}},reset:function reset(renderTarget){if(renderTarget===undefined){var size=this.renderer.getSize();renderTarget=this.renderTarget1.clone();renderTarget.setSize(size.width,size.height);}this.renderTarget1.dispose();this.renderTarget2.dispose();this.renderTarget1=renderTarget;this.renderTarget2=renderTarget.clone();this.writeBuffer=this.renderTarget1;this.readBuffer=this.renderTarget2;},setSize:function setSize(width,height){this.renderTarget1.setSize(width,height);this.renderTarget2.setSize(width,height);for(var i=0;i<this.passes.length;i++){this.passes[i].setSize(width,height);}}});THREE.Pass=function(){// if set to true, the pass is processed by the composer\nthis.enabled=true;// if set to true, the pass indicates to swap read and write buffer after rendering\nthis.needsSwap=true;// if set to true, the pass clears its buffer before rendering\nthis.clear=false;// if set to true, the result of the pass is rendered to screen\nthis.renderToScreen=false;};Object.assign(THREE.Pass.prototype,{setSize:function setSize(width,height){},render:function render(renderer,writeBuffer,readBuffer,delta,maskActive){console.error(\"THREE.Pass: .render() must be implemented in derived pass.\");}});\n\n},{}],7:[function(require,module,exports){\n\"use strict\";/**\n * @author alteredq / http://alteredqualia.com/\n */THREE.MaskPass=function(scene,camera){THREE.Pass.call(this);this.scene=scene;this.camera=camera;this.clear=true;this.needsSwap=false;this.inverse=false;};THREE.MaskPass.prototype=Object.assign(Object.create(THREE.Pass.prototype),{constructor:THREE.MaskPass,render:function render(renderer,writeBuffer,readBuffer,delta,maskActive){var context=renderer.context;var state=renderer.state;// don't update color or depth\nstate.buffers.color.setMask(false);state.buffers.depth.setMask(false);// lock buffers\nstate.buffers.color.setLocked(true);state.buffers.depth.setLocked(true);// set up stencil\nvar writeValue,clearValue;if(this.inverse){writeValue=0;clearValue=1;}else{writeValue=1;clearValue=0;}state.buffers.stencil.setTest(true);state.buffers.stencil.setOp(context.REPLACE,context.REPLACE,context.REPLACE);state.buffers.stencil.setFunc(context.ALWAYS,writeValue,0xffffffff);state.buffers.stencil.setClear(clearValue);// draw into the stencil buffer\nrenderer.render(this.scene,this.camera,readBuffer,this.clear);renderer.render(this.scene,this.camera,writeBuffer,this.clear);// unlock color and depth buffer for subsequent rendering\nstate.buffers.color.setLocked(false);state.buffers.depth.setLocked(false);// only render where stencil is set to 1\nstate.buffers.stencil.setFunc(context.EQUAL,1,0xffffffff);// draw if == 1\nstate.buffers.stencil.setOp(context.KEEP,context.KEEP,context.KEEP);}});THREE.ClearMaskPass=function(){THREE.Pass.call(this);this.needsSwap=false;};THREE.ClearMaskPass.prototype=Object.create(THREE.Pass.prototype);Object.assign(THREE.ClearMaskPass.prototype,{render:function render(renderer,writeBuffer,readBuffer,delta,maskActive){renderer.state.buffers.stencil.setTest(false);}});\n\n},{}],8:[function(require,module,exports){\n\"use strict\";/**\n * @author alteredq / http://alteredqualia.com/\n */THREE.RenderPass=function(scene,camera,overrideMaterial,clearColor,clearAlpha){THREE.Pass.call(this);this.scene=scene;this.camera=camera;this.overrideMaterial=overrideMaterial;this.clearColor=clearColor;this.clearAlpha=clearAlpha!==undefined?clearAlpha:0;this.clear=true;this.needsSwap=false;};THREE.RenderPass.prototype=Object.assign(Object.create(THREE.Pass.prototype),{constructor:THREE.RenderPass,render:function render(renderer,writeBuffer,readBuffer,delta,maskActive){var oldAutoClear=renderer.autoClear;renderer.autoClear=false;this.scene.overrideMaterial=this.overrideMaterial;var oldClearColor,oldClearAlpha;if(this.clearColor){oldClearColor=renderer.getClearColor().getHex();oldClearAlpha=renderer.getClearAlpha();renderer.setClearColor(this.clearColor,this.clearAlpha);}renderer.render(this.scene,this.camera,this.renderToScreen?null:readBuffer,this.clear);if(this.clearColor){renderer.setClearColor(oldClearColor,oldClearAlpha);}this.scene.overrideMaterial=null;renderer.autoClear=oldAutoClear;}});\n\n},{}],9:[function(require,module,exports){\n\"use strict\";/**\n * @author alteredq / http://alteredqualia.com/\n */THREE.ShaderPass=function(shader,textureID){THREE.Pass.call(this);this.textureID=textureID!==undefined?textureID:\"tDiffuse\";if(shader instanceof THREE.ShaderMaterial){this.uniforms=shader.uniforms;this.material=shader;}else if(shader){this.uniforms=THREE.UniformsUtils.clone(shader.uniforms);this.material=new THREE.ShaderMaterial({defines:shader.defines||{},uniforms:this.uniforms,vertexShader:shader.vertexShader,fragmentShader:shader.fragmentShader});}this.camera=new THREE.OrthographicCamera(-1,1,1,-1,0,1);this.scene=new THREE.Scene();this.quad=new THREE.Mesh(new THREE.PlaneBufferGeometry(2,2),null);this.scene.add(this.quad);};THREE.ShaderPass.prototype=Object.assign(Object.create(THREE.Pass.prototype),{constructor:THREE.ShaderPass,render:function render(renderer,writeBuffer,readBuffer,delta,maskActive){if(this.uniforms[this.textureID]){this.uniforms[this.textureID].value=readBuffer.texture;}this.quad.material=this.material;if(this.renderToScreen){renderer.render(this.scene,this.camera);}else{renderer.render(this.scene,this.camera,writeBuffer,this.clear);}}});\n\n},{}],10:[function(require,module,exports){\n'use strict';Object.defineProperty(exports,\"__esModule\",{value:true});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}require('./EffectComposer');require('./RenderPass');require('./ShaderPass');require('./MaskPass');require('./CopyShader');var passes=void 0,composer=void 0,renderPass=void 0,copyPass=void 0;var EffectsManager=function(){function EffectsManager(_ref){var renderer=_ref.renderer;var camera=_ref.camera;var scene=_ref.scene;_classCallCheck(this,EffectsManager);composer=new THREE.EffectComposer(renderer);renderPass=new THREE.RenderPass(scene,camera);copyPass=new THREE.ShaderPass(THREE.CopyShader);copyPass.renderToScreen=true;passes={};composer=new THREE.EffectComposer(renderer);composer.addPass(renderPass);composer.addPass(copyPass);}_createClass(EffectsManager,[{key:'update',value:function update(){composer.render(0.1);}},{key:'resize',value:function resize(width,height){if(composer){composer.setSize(width,height);}}},{key:'dispose',value:function dispose(){passes=null;composer=null;renderPass=null;copyPass=null;}},{key:'passes',get:function get(){return passes;}}]);return EffectsManager;}();exports.default=EffectsManager;\n\n},{\"./CopyShader\":5,\"./EffectComposer\":6,\"./MaskPass\":7,\"./RenderPass\":8,\"./ShaderPass\":9}],11:[function(require,module,exports){\n'use strict';Object.defineProperty(exports,\"__esModule\",{value:true});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}var interval=void 0,loadInfo=void 0,files=void 0,numFiles=void 0,numLoaded=void 0,progressCallback=void 0,loadCallback=void 0,loadCheck=void 0,scope=void 0,done=false;var Loader=function(){function Loader(){_classCallCheck(this,Loader);loadInfo={};files={textures:{},geometry:{},fonts:{},data:{}};loadCheck=this.checkLoaded;scope=this;}_createClass(Loader,[{key:'load',value:function load(manifest,onLoadCallback,onProgressCallback){progressCallback=onProgressCallback;loadCallback=onLoadCallback;numFiles=manifest.length;numLoaded=0;var scope=this;manifest.forEach(function(fileObj){if(!(Object.prototype.toString.call(fileObj.file)==='[object Array]')){if(fileObj.file.indexOf('.png')>0||fileObj.file.indexOf('.jpg')>0||fileObj.file.indexOf('.jpeg')>0||fileObj.file.indexOf('.gif')>0){scope.loadTexture(fileObj);}else if(fileObj.file.indexOf('.json')>0){if(fileObj.isData){scope.loadDataJSON(fileObj);}else if(fileObj.isFont){scope.loadFontJSON(fileObj);}else{scope.loadGeometryJSON(fileObj);}}else if(fileObj.file.indexOf('.dae')>0){scope.loadCollada(fileObj);}}else{scope.loadCubemap(fileObj);}});interval=setInterval(scope.update,1000/30);}},{key:'loadDataJSON',value:function loadDataJSON(fileObj){var xhr=new XMLHttpRequest();xhr.overrideMimeType(\"application/json\");xhr.open('GET',fileObj.file,true);xhr.onreadystatechange=function(){if(xhr.readyState===4&&xhr.status===200){files.data[fileObj.id]=JSON.parse(xhr.responseText);numLoaded++;loadCheck();}};xhr.send();}},{key:'loadGeometryJSON',value:function loadGeometryJSON(fileObj){// console.log('loadGeometryJSON:', fileObj.file);\nvar loader=new THREE.JSONLoader();loadInfo[fileObj.id]={loaded:0,total:0};loader.load(fileObj.file,function(geometry){loadInfo[fileObj.id].loaded=loadInfo[fileObj.id].total;files.geometry[fileObj.id]=geometry;numLoaded++;loadCheck();},function(xhr){loadInfo[fileObj.id].loaded=xhr.loaded;loadInfo[fileObj.id].total=xhr.total;});}},{key:'loadFontJSON',value:function loadFontJSON(fileObj){var loader=new THREE.FontLoader();loadInfo[fileObj.id]={loaded:0,total:0};loader.load(fileObj.file,function(font){loadInfo[fileObj.id].loaded=loadInfo[fileObj.id].total;files.fonts[fileObj.id]=font;numLoaded++;loadCheck();},function(xhr){loadInfo[fileObj.id].loaded=xhr.loaded;loadInfo[fileObj.id].total=xhr.total;});}},{key:'loadCollada',value:function loadCollada(fileObj){// console.log('loadCollada:', fileObj.file);\nvar loader=new THREE.ColladaLoader();loadInfo[fileObj.id]={loaded:0,total:0};loader.load(fileObj.file,function(collada){loadInfo[fileObj.id].loaded=loadInfo[fileObj.id].total;files.geometry[fileObj.id]=collada;numLoaded++;loadCheck();},function(xhr){loadInfo[fileObj.id].loaded=xhr.loaded;loadInfo[fileObj.id].total=xhr.total;});}},{key:'loadTexture',value:function loadTexture(fileObj){// console.log('loadTexture:', fileObj.id, fileObj.file);\nvar loader=new THREE.TextureLoader();loadInfo[fileObj.id]={loaded:0,total:0};loader.load(fileObj.file,function(texture){loadInfo[fileObj.id].loaded=loadInfo[fileObj.id].total;files.textures[fileObj.id]=texture;numLoaded++;loadCheck();},function(xhr){loadInfo[fileObj.id].loaded=xhr.loaded;loadInfo[fileObj.id].total=xhr.total;});}},{key:'loadCubemap',value:function loadCubemap(fileObj){// console.log('loadCubemap:', fileObj.file);\nvar loader=new THREE.CubeTextureLoader();loadInfo[fileObj.id]={loaded:0,total:0};loader.load(fileObj.file,function(texture){loadInfo[fileObj.id].loaded=loadInfo[fileObj.id].total;files.textures[fileObj.id]=texture;numLoaded++;loadCheck();},function(xhr){loadInfo[fileObj.id].loaded=xhr.loaded;loadInfo[fileObj.id].total=xhr.total;});}},{key:'checkLoaded',value:function checkLoaded(){if(done)return;// console.log('checkLoaded:', numLoaded, numFiles);\nif(numLoaded===numFiles)// || percent === 1)\n{done=true;clearInterval(interval);scope.update();if(typeof loadCallback==='function'){loadCallback(files);}// dispose();\n}}},{key:'update',value:function update(){if(typeof progressCallback==='function'){var loaded=0;var total=0;for(var info in loadInfo){loaded+=parseInt(loadInfo[info].loaded);total+=parseInt(loadInfo[info].total);}// checkLoaded(loaded/total);\nif(progressCallback)progressCallback(loaded,total);}}},{key:'dispose',value:function dispose(){clearInterval(interval);interval=null;loadInfo=null;files=null;numFiles=null;numLoaded=null;progressCallback=null;loadCallback=null;done=null;}}]);return Loader;}();exports.default=Loader;\n\n},{}],12:[function(require,module,exports){\n'use strict';Object.defineProperty(exports,\"__esModule\",{value:true});exports.degreesToRads=degreesToRads;exports.radsToDegrees=radsToDegrees;exports.getDataTexture=getDataTexture;exports.createPlane=createPlane;exports.randomRange=randomRange;exports.rotateAroundWorldAxisX=rotateAroundWorldAxisX;exports.rotateAroundWorldAxisY=rotateAroundWorldAxisY;exports.rotateAroundWorldAxisZ=rotateAroundWorldAxisZ;exports.rotateAroundWorldAxis=rotateAroundWorldAxis;exports.setScale=setScale;exports.disposeOfMesh=disposeOfMesh;exports.disposeOfChildren=disposeOfChildren;exports.removeAllChildren=removeAllChildren;exports.moveTowards=moveTowards;exports.moveVectorTowards=moveVectorTowards;exports.rotateTowards=rotateTowards;exports.updateCameraMatrices=updateCameraMatrices;exports.meshIsInView=meshIsInView;exports.getMouseIntersection=getMouseIntersection;exports.objectWorldPositionToScreen=objectWorldPositionToScreen;exports.objectWorldPositionToScreenAlt=objectWorldPositionToScreenAlt;exports.worldToScreen=worldToScreen;exports.screenToWorld=screenToWorld;exports.screenToWorldAtZ=screenToWorldAtZ;exports.getMouseWorldPos=getMouseWorldPos;exports.getMouseWorldPosAtZ=getMouseWorldPosAtZ;exports.getEdges=getEdges;exports.addFragmentFogInjections=addFragmentFogInjections;exports.pointOnSphere=pointOnSphere;exports.getPointsOnSphere=getPointsOnSphere;exports.getPointsWithinSphere=getPointsWithinSphere;exports.getPointsOnSphereEvenly=getPointsOnSphereEvenly;exports.getRandomVector3=getRandomVector3;exports.addRandomVector3=addRandomVector3;exports.rotationInDegrees=rotationInDegrees;exports.loadJSONGeometry=loadJSONGeometry;exports.loadTextures=loadTextures;exports.setTextureWrapping=setTextureWrapping;exports.setTextureMipmapping=setTextureMipmapping;exports.setTextureMinMagFilters=setTextureMinMagFilters;exports.injectShaderCode=injectShaderCode;exports.logVector=logVector;exports.logProgramInfo=logProgramInfo;var axisUp=exports.axisUp=new THREE.Vector3(0,1,0);var axisDown=exports.axisDown=new THREE.Vector3(0,-1,0);var axisLeft=exports.axisLeft=new THREE.Vector3(-1,0,0);var axisRight=exports.axisRight=new THREE.Vector3(1,0,0);var axisForward=exports.axisForward=new THREE.Vector3(0,0,1);var axisBackward=exports.axisBackward=new THREE.Vector3(0,0,-1);function degreesToRads(degrees){return degrees/180*Math.PI;}function radsToDegrees(radians){return radians*180/Math.PI;}function getDataTexture(data,width,height,format){var tex=new THREE.DataTexture(data,width,height,format,THREE.FloatType);tex.minFilter=THREE.NearestFilter;tex.magFilter=THREE.NearestFilter;tex.generateMipmaps=false;tex.needsUpdate=true;return tex;}function createPlane(width,height,color){return new THREE.Mesh(new THREE.PlaneGeometry(width||1,height||1),new THREE.MeshBasicMaterial({color:color||0xffffff}));}//export function createSphere(radius, color)\n// {\n//     // TODO\n// }\n//export function createCube(width, height, depth, color)\n// {\n//     // TODO\n// }\nfunction randomRange(min,max){return min+Math.random()*(max-min);}function rotateAroundWorldAxisX(object,radians){var matrix=new THREE.Matrix4();matrix.makeRotationX(radians);matrix.multiply(object.matrix);object.matrix=matrix;object.rotation.setFromRotationMatrix(object.matrix);}function rotateAroundWorldAxisY(object,radians){var matrix=new THREE.Matrix4();matrix.makeRotationY(radians);matrix.multiply(object.matrix);object.matrix=matrix;object.rotation.setFromRotationMatrix(object.matrix);}function rotateAroundWorldAxisZ(object,radians){var matrix=new THREE.Matrix4();matrix.makeRotationZ(radians);matrix.multiply(object.matrix);object.matrix=matrix;object.rotation.setFromRotationMatrix(object.matrix);}function rotateAroundWorldAxis(object,axis,radians){var rotWorldMatrix=new THREE.Matrix4();rotWorldMatrix.makeRotationAxis(axis.normalize(),radians);rotWorldMatrix.multiply(object.matrix);object.matrix=rotWorldMatrix;object.rotation.setFromRotationMatrix(object.matrix);}function setScale(object,scale){object.scale.set(scale,scale,scale);}function disposeOfMesh(mesh){if(!mesh)return;if(mesh.parent)mesh.parent.remove(mesh);if(mesh.geometry)mesh.geometry.dispose();if(mesh.material){if(mesh.material.map){mesh.material.map.dispose();}mesh.material.dispose();}}function disposeOfChildren(children){// console.log('disposeOfChildren:', children.length);\nif(!children)return;while(children.length>0){disposeOfMesh(children[0]);}}function removeAllChildren(object3d){while(object3d.children.length>0){object3d.remove(object3d.children[0]);}}function moveTowards(object,position,easing){object.position.x+=(position.x-object.position.x)*easing;object.position.y+=(position.y-object.position.y)*easing;object.position.z+=(position.z-object.position.z)*easing;}function moveVectorTowards(v1,v2,easing){v1.x+=(v2.x-v1.x)*easing;v1.y+=(v2.y-v1.y)*easing;v1.z+=(v2.z-v1.z)*easing;}function rotateTowards(object,rotation,easing){object.rotation.x+=(rotation.x-object.rotation.x)*easing;object.rotation.y+=(rotation.y-object.rotation.y)*easing;object.rotation.z+=(rotation.z-object.rotation.z)*easing;}function updateCameraMatrices(camera){camera.updateMatrix();camera.updateMatrixWorld();camera.matrixWorldInverse.getInverse(camera.matrixWorld);}function meshIsInView(mesh,camera,frustum){frustum=frustum||new THREE.Frustum();updateCameraMatrices(camera);mesh.updateMatrix();mesh.updateMatrixWorld();frustum.setFromMatrix(new THREE.Matrix4().multiplyMatrices(camera.projectionMatrix,camera.matrixWorldInverse));return frustum.intersectsObject(mesh);}function getMouseIntersection(mouse,camera,objects,raycaster){raycaster=raycaster||new THREE.Raycaster();raycaster.setFromCamera(mouse,camera);var intersections=raycaster.intersectObjects(objects);return intersections.length>0?intersections[0]:null;}function objectWorldPositionToScreen(object,camera){updateCameraMatrices(camera);object.updateMatrixWorld();var width=window.innerWidth,height=window.innerHeight,widthHalf=width/2,heightHalf=height/2,vector=new THREE.Vector3().setFromMatrixPosition(object.matrixWorld);vector.project(camera);return{x:vector.x*widthHalf+widthHalf|0,y:-(vector.y*heightHalf)+heightHalf|0};}function objectWorldPositionToScreenAlt(object,camera){updateCameraMatrices(camera);object.updateMatrixWorld();var width=window.innerWidth,height=window.innerHeight,pos=new THREE.Vector3().setFromMatrixPosition(object.matrixWorld),projScreenMat=new THREE.Matrix4();projScreenMat.multiplyMatrices(camera.projectionMatrix,camera.matrixWorldInverse);pos.applyMatrix4(projScreenMat);// pos.applyProjection(projScreenMat);\nreturn{x:(pos.x+1)*width/2|0,y:(-pos.y+1)*height/2|0};}function worldToScreen(position,camera){updateCameraMatrices(camera);var width=window.innerWidth,height=window.innerHeight,widthHalf=width/2,heightHalf=height/2,vector=new THREE.Vector3().copy(position);vector.project(camera);return{x:vector.x*widthHalf+widthHalf|0,y:-(vector.y*heightHalf)+heightHalf|0};// vector.x = ( vector.x * widthHalf ) + widthHalf;\n// vector.y = - ( vector.y * heightHalf ) + heightHalf;\n// return vector;\n}function screenToWorld(position,camera){updateCameraMatrices(camera);var x=position.x/window.innerWidth*2-1,y=-(position.y/window.innerHeight)*2+1,vector=new THREE.Vector3(x,y,0.5);vector.unproject(camera);var dir=vector.sub(camera.position).normalize(),distance=-camera.position.z/dir.z;return camera.position.clone().add(dir.multiplyScalar(distance));}function screenToWorldAtZ(position,z,camera){// let x = ( position.x / window.innerWidth ) * 2 - 1,\n//     y = - ( position.y / window.innerHeight ) * 2 + 1,\n//     planeZ = new THREE.Plane(new THREE.Vector3(0, 0, 1), z),\n//     vector = new THREE.Vector3(x, y, 0.5),\n//     projector = new THREE.Projector(),\n//     raycaster = projector.pickingRay(vector, camera);\n// return raycaster.ray.intersectPlane(planeZ);\nvar x=position.x/window.innerWidth*2-1,y=-(position.y/window.innerHeight)*2+1,planeZ=new THREE.Plane(new THREE.Vector3(0,0,1),z),vector=new THREE.Vector3(x,y,0.5),raycaster=new THREE.Raycaster(),pos=void 0;// raycaster.pickingRay(vector, camera);\nraycaster.setFromCamera(vector,camera);pos=raycaster.ray.intersectPlane(planeZ);return pos;}function getMouseWorldPos(mouseScreenPos,camera){// let vec = new THREE.Vector3(mouseScreenPos.x, mouseScreenPos.y, 0.5).unproject(camera);\nvar vec=mouseScreenPos.clone().unproject(camera);var dir=vec.sub(camera.position).normalize();var distance=-camera.position.z/dir.z;return camera.position.clone().add(dir.multiplyScalar(distance));}function getMouseWorldPosAtZ(mouseScreenPos,camera,z){var planeZ=new THREE.Plane(new THREE.Vector3(0,0,1),z);// let vec = new THREE.Vector3(mouseScreenPos.x, mouseScreenPos.y, 0.5);\nvar vec=mouseScreenPos;var raycaster=new THREE.Raycaster();raycaster.pickingRay(vec,camera);var pos=raycaster.ray.intersectPlane(planeZ);return pos;}function getEdges(mesh){var edge=[0,0],hash={};keys=['a','b','c'],geometry2,thresholdDot=Math.cos(THREE.Math.degToRad(1));var sortFunction=function sortFunction(a,b){return a-b;};if(mesh.geometry instanceof THREE.BufferGeometry){geometry2=new THREE.Geometry();geometry2.fromBufferGeometry(mesh.geometry);}else{geometry2=mesh.geometry.clone();}geometry2.mergeVertices();geometry2.computeFaceNormals();var vertices=geometry2.vertices,faces=geometry2.faces,facesOriginal=mesh.geometry.faces,key=void 0;for(var _i=0,l=faces.length;_i<l;_i++){var face=faces[_i];for(var j=0;j<3;j++){edge[0]=face[keys[j]];edge[1]=face[keys[(j+1)%3]];edge.sort(sortFunction);key=edge.toString();if(hash[key]===undefined){hash[key]={vert1:edge[0],vert2:edge[1],face1:_i,face2:undefined};}else{hash[key].face2=_i;}}}var edges=[];for(key in hash){var h=hash[key];if(h.face2===undefined||faces[h.face1].normal.dot(faces[h.face2].normal)<=thresholdDot){edges.push({vertex1:vertices[h.vert1],vertex2:vertices[h.vert2],// face1:faces[ h.face1 ],\n// face2:faces[ h.face2 ],\nface1:facesOriginal[h.face1],face2:facesOriginal[h.face2],faceIndex1:h.face1,faceIndex2:h.face2});}}return edges;}function addFragmentFogInjections(fragmentShader){var lines=fragmentShader.split('\\n'),len=lines.length;for(var _i2=0;_i2<len;_i2++){if(lines[_i2]==='/*#FOG_INJECTION_1#*/'){lines[_i2]=THREE.ShaderChunk['fog_pars_fragment'];}else if(lines[_i2]==='/*#FOG_INJECTION_2#*/'){lines[_i2]=THREE.ShaderChunk['fog_fragment'];}}return lines.join('\\n');}function pointOnSphere(r,a1,a2){return{x:r*Math.cos(a1)*Math.sin(a2),y:r*Math.sin(a1)*Math.sin(a2),z:r*Math.cos(a2)};}function getPointsOnSphere(n){var pts=[],pt=void 0;for(var _i3=0;_i3<n;_i3++){pt=pointOnSphere(1,Math.random()*Math.PI*2,Math.random()*Math.PI*2);pts.push(new THREE.Vector3(pt.x,pt.y,pt.z));}return pts;}function getPointsWithinSphere(n,maxRadius){var pts=[],pt=void 0;for(var _i4=0;_i4<n;_i4++){pt=pointOnSphere(Math.random()*maxRadius,Math.random()*Math.PI*2,Math.random()*Math.PI*2);pts.push(new THREE.Vector3(pt.x,pt.y,pt.z));}return pts;}function getPointsOnSphereEvenly(n){var pts=[],inc=Math.PI*(3-Math.sqrt(5)),off=2.0/n,x=void 0,y=void 0,z=void 0,r=void 0,phi=void 0;for(var k=0;k<n;k++){y=k*off-1+off/2;r=Math.sqrt(1-y*y);phi=k*inc;x=Math.cos(phi)*r;z=Math.sin(phi)*r;pts.push(new THREE.Vector3(x,y,z));}return pts;}function getRandomVector3(min,max){return new THREE.Vector3(randomRange(min,max),randomRange(min,max),randomRange(min,max));}function addRandomVector3(vec,min,max){return getRandomVector3(min,max).add(vec);}function rotationInDegrees(rotation){var degrees=180/Math.PI;return new THREE.Euler(rotation.x*degrees,rotation.y*degrees,rotation.z*degrees,rotation.order);}function loadJSONGeometry(manifest,callback){var loader=new THREE.JSONLoader(),len=manifest.length,loaded=0,file=void 0,id=void 0,geometriesById={};geometries=[];var load=function load(){file=manifest[loaded].file!==undefined?manifest[loaded].file:manifest[loaded];id=manifest[loaded].id!==undefined?manifest[loaded].id:null;loader.load(file,function(g){if(id){geometriesById[id]=g;}geometries.push({geometry:g,id:id});loaded++;if(loaded===len){if(typeof callback==='function'){callback(geometries,geometriesById);}}else{load();}});};load();}function loadTextures(manifest,callback){var len=manifest.length,loaded=0,file=void 0,id=void 0,texturesById={};textures=[],loader=new THREE.TextureLoader();loader.crossOrigin=\"\";var load=function load(){file=manifest[loaded].file!==undefined?manifest[loaded].file:manifest[loaded];id=manifest[loaded].id!==undefined?manifest[loaded].id:null;loader.load(file,function(tex){if(id){texturesById[id]=tex;}textures.push({texture:tex,id:id});loaded++;if(loaded===len){if(typeof callback==='function'){callback(textures,texturesById);}}else{load();}});// THREE.ImageUtils.loadTexture(file, undefined, function(tex){\n//     if(id)\n//     {\n//         texturesById[id] = tex;\n//     }\n//     textures.push({texture:tex, id:id});\n//     loaded++;\n//     if(loaded === len)\n//     {\n//         if(typeof callback === 'function')\n//         {\n//             callback(textures, texturesById);\n//         }\n//     }\n//     else\n//     {\n//         load();\n//     }\n// });\n};load();}function setTextureWrapping(textures,wrapping){for(var _i5=0;_i5<textures.length;_i5++){textures[_i5].wrapS=textures[_i5].wrapT=wrapping;textures[_i5].needsUpdate=true;}}function setTextureMipmapping(textures,mipmapping){for(var _i6=0;_i6<textures.length;_i6++){textures[_i6].generateMipmaps=mipmapping;textures[_i6].needsUpdate=true;}}function setTextureMinMagFilters(textures,minFilter,magFilter){for(var _i7=0;_i7<textures.length;_i7++){if(minFilter)textures[_i7].minFilter=minFilter;if(magFilter)textures[_i7].magFilter=magFilter;textures[_i7].needsUpdate=true;}}function injectShaderCode(original,key,injection){if(Object.prototype.toString.call(injection)==='[object Array]'){var replacement='';for(var _i8=0;_i8<injection.length;_i8++){replacement+=injection[_i8]+'\\n';}return original.replace(key,replacement);}else{return original.replace(key,injection);}}function logVector(vector){console.log(vector.x,vector.y,vector.z);}// usage: pass renderer.getContext() & mesh.material.program.program, call render at least once first.\nfunction logProgramInfo(gl,program){var result={attributes:[],uniforms:[],attributeCount:0,uniformCount:0};activeUniforms=gl.getProgramParameter(program,gl.ACTIVE_UNIFORMS),activeAttributes=gl.getProgramParameter(program,gl.ACTIVE_ATTRIBUTES);// Taken from the WebGl spec:\n// http://www.khronos.org/registry/webgl/specs/latest/1.0/#5.14\nvar enums={0x8B50:'FLOAT_VEC2',0x8B51:'FLOAT_VEC3',0x8B52:'FLOAT_VEC4',0x8B53:'INT_VEC2',0x8B54:'INT_VEC3',0x8B55:'INT_VEC4',0x8B56:'BOOL',0x8B57:'BOOL_VEC2',0x8B58:'BOOL_VEC3',0x8B59:'BOOL_VEC4',0x8B5A:'FLOAT_MAT2',0x8B5B:'FLOAT_MAT3',0x8B5C:'FLOAT_MAT4',0x8B5E:'SAMPLER_2D',0x8B60:'SAMPLER_CUBE',0x1400:'BYTE',0x1401:'UNSIGNED_BYTE',0x1402:'SHORT',0x1403:'UNSIGNED_SHORT',0x1404:'INT',0x1405:'UNSIGNED_INT',0x1406:'FLOAT'};// Loop through active uniforms\nfor(var _i9=0;_i9<activeUniforms;_i9++){var uniform=gl.getActiveUniform(program,_i9);uniform.typeName=enums[uniform.type];result.uniforms.push(uniform);result.uniformCount+=uniform.size;}// Loop through active attributes\nfor(i=0;i<activeAttributes;i++){var attribute=gl.getActiveAttrib(program,i);attribute.typeName=enums[attribute.type];result.attributes.push(attribute);result.attributeCount+=attribute.size;}console.log(result);}\n\n},{}],13:[function(require,module,exports){\n'use strict';Object.defineProperty(exports,\"__esModule\",{value:true});exports.createElement=createElement;exports.normalize=normalize;exports.lerp=lerp;exports.map=map;exports.clamp=clamp;exports.distance=distance;exports.distanceXY=distanceXY;exports.circleCollision=circleCollision;exports.circlePointCollision=circlePointCollision;exports.pointInRect=pointInRect;exports.inRange=inRange;exports.rangeIntersect=rangeIntersect;exports.rectIntersect=rectIntersect;exports.degreesToRads=degreesToRads;exports.radsToDegrees=radsToDegrees;exports.angleBetweenPoints=angleBetweenPoints;exports.randomRange=randomRange;exports.randomInt=randomInt;exports.roundToPlaces=roundToPlaces;exports.roundNearest=roundNearest;exports.quadraticBezier=quadraticBezier;exports.cubicBezier=cubicBezier;exports.multicurve=multicurve;exports.pointOnSphere=pointOnSphere;exports.getPointsOnSphere=getPointsOnSphere;exports.getPointsOnSphereEvenly=getPointsOnSphereEvenly;exports.clone=clone;exports.isArray=isArray;exports.shuffleArray=shuffleArray;exports.thinOutArray=thinOutArray;exports.randomItemFromArray=randomItemFromArray;exports.arrayRestrictedToRangeZ=arrayRestrictedToRangeZ;exports.extractKeyFromArray=extractKeyFromArray;exports.repeat=repeat;exports.isOpera=isOpera;exports.isFirefox=isFirefox;exports.isSafari=isSafari;exports.isChrome=isChrome;exports.isIE=isIE;exports.isMac=isMac;exports.isWindows=isWindows;exports.hasWebGL=hasWebGL;exports.getVideoType=getVideoType;exports.dispatchEvent=dispatchEvent;exports.setCursor=setCursor;exports.getParameterByName=getParameterByName;function createElement(type,classNames,content){type=type||'div';var el=document.createElement(type);if(classNames){classNames.forEach(function(name){el.classList.add(name);});}if(content)el.innerHTML=content;return el;}function normalize(value,min,max){return(value-min)/(max-min);}function lerp(norm,min,max){return(max-min)*norm+min;}function map(value,sourceMin,sourceMax,destMin,destMax){return lerp(normalize(value,sourceMin,sourceMax),destMin,destMax);}function clamp(value,min,max){return Math.min(Math.max(value,Math.min(min,max)),Math.max(min,max));}function distance(p0,p1){var dx=p1.x-p0.x,dy=p1.y-p0.y;return Math.sqrt(dx*dx+dy*dy);}function distanceXY(x0,y0,x1,y1){var dx=x1-x0,dy=y1-y0;return Math.sqrt(dx*dx+dy*dy);}function circleCollision(c0,c1){return distance(c0,c1)<=c0.radius+c1.radius;}function circlePointCollision(x,y,circle){return distanceXY(x,y,circle.x,circle.y)<circle.radius;}function pointInRect(x,y,rect){return inRange(x,rect.x,rect.x+rect.width)&&inRange(y,rect.y,rect.y+rect.height);}function inRange(value,min,max){return value>=Math.min(min,max)&&value<=Math.max(min,max);}function rangeIntersect(min0,max0,min1,max1){return Math.max(min0,max0)>=Math.min(min1,max1)&&Math.min(min0,max0)<=Math.max(min1,max1);}function rectIntersect(r0,r1){return rangeIntersect(r0.x,r0.x+r0.width,r1.x,r1.x+r1.width)&&rangeIntersect(r0.y,r0.y+r0.height,r1.y,r1.y+r1.height);}function degreesToRads(degrees){return degrees/180*Math.PI;}function radsToDegrees(radians){return radians*180/Math.PI;}function angleBetweenPoints(p1,p2){return Math.atan2(p2.y-p1.y,p2.x-p1.x);}function randomRange(min,max){return min+Math.random()*(max-min);}function randomInt(min,max){return Math.floor(min+Math.random()*(max-min+1));}function roundToPlaces(value,places){var mult=Math.pow(10,places);return Math.round(value*mult)/mult;}function roundNearest(value,nearest){return Math.round(value/nearest)*nearest;}function quadraticBezier(p0,p1,p2,t,pFinal){pFinal=pFinal||{};pFinal.x=Math.pow(1-t,2)*p0.x+(1-t)*2*t*p1.x+t*t*p2.x;pFinal.y=Math.pow(1-t,2)*p0.y+(1-t)*2*t*p1.y+t*t*p2.y;return pFinal;}function cubicBezier(p0,p1,p2,p3,t,pFinal){pFinal=pFinal||{};pFinal.x=Math.pow(1-t,3)*p0.x+Math.pow(1-t,2)*3*t*p1.x+(1-t)*3*t*t*p2.x+t*t*t*p3.x;pFinal.y=Math.pow(1-t,3)*p0.y+Math.pow(1-t,2)*3*t*p1.y+(1-t)*3*t*t*p2.y+t*t*t*p3.y;return pFinal;}function multicurve(points,context){var p0=void 0,p1=void 0,midx=void 0,midy=void 0;context.moveTo(points[0].x,points[0].y);for(var i=1;i<points.length-2;i+=1){p0=points[i];p1=points[i+1];midx=(p0.x+p1.x)/2;midy=(p0.y+p1.y)/2;context.quadraticCurveTo(p0.x,p0.y,midx,midy);}p0=points[points.length-2];p1=points[points.length-1];context.quadraticCurveTo(p0.x,p0.y,p1.x,p1.y);}function pointOnSphere(r,a1,a2){return{x:r*Math.cos(a1)*Math.sin(a2),y:r*Math.sin(a1)*Math.sin(a2),z:r*Math.cos(a2)};}function getPointsOnSphere(n){var pts=[],pt=void 0;for(var i=0;i<n;i++){pt=pointOnSphere(1,Math.random()*Math.PI*2,Math.random()*Math.PI*2);pts.push({x:pt.x,y:pt.y,z:pt.z});}return pts;}function getPointsOnSphereEvenly(n){var pts=[],inc=Math.PI*(3-Math.sqrt(5)),off=2.0/n,x=void 0,y=void 0,z=void 0,r=void 0,phi=void 0;for(var k=0;k<n;k++){y=k*off-1+off/2;r=Math.sqrt(1-y*y);phi=k*inc;x=Math.cos(phi)*r;z=Math.sin(phi)*r;pts.push({x:x,y:y,z:z});}return pts;}function clone(obj){return JSON.parse(JSON.stringify(obj));}function isArray(arg){return Object.prototype.toString.call(arg)==='[object Array]';}function shuffleArray(array){var currentIndex=array.length,temporaryValue=void 0,randomIndex=void 0;while(0!==currentIndex){randomIndex=Math.floor(Math.random()*currentIndex);currentIndex-=1;temporaryValue=array[currentIndex];array[currentIndex]=array[randomIndex];array[randomIndex]=temporaryValue;}return array;}function thinOutArray(array,n){var newArray=[],len=array.length;for(var i=0;i<len;i+=n){newArray.push(array[i]);}return newArray;}function randomItemFromArray(array){return array[Math.random()*array.length|0];}function arrayRestrictedToRangeZ(array,minZ,maxZ){var newArray=[],len=array.length;for(var i=0;i<len;i++){if(inRange(array[i].z,minZ,maxZ))newArray.push(array[i]);}return newArray;}function extractKeyFromArray(array,key){var a=[];for(var i=0;i<array.length;i++){a.push(array[i][key]);}return a;}function repeat(callback,params,intervals,delay,startDelay){startDelay=startDelay||0;var i=0;var doStuff=function doStuff(){setTimeout(function(){callback(params);i++;if(i<intervals)doStuff();},delay);};setTimeout(function(){doStuff();},startDelay);}function isOpera(){// Opera 8.0+ (UA detection to detect Blink/v8-powered Opera)\nreturn!!window.opera||navigator.userAgent.indexOf(' OPR/')>=0;}function isFirefox(){// Firefox 1.0+\nreturn typeof InstallTrigger!=='undefined';}function isSafari(){// At least Safari 3+: '[object HTMLElementConstructor]'\nreturn Object.prototype.toString.call(window.HTMLElement).indexOf('Constructor')>0;}function isChrome(){// Chrome 1+\nreturn!!window.chrome&&!isOpera();}function isIE(){// At least IE6\nreturn false||!!document.documentMode;}function isMac(){return navigator.platform.toLowerCase().indexOf('mac')>-1;}function isWindows(){return navigator.platform.toLowerCase().indexOf('win')>-1;}function hasWebGL(){if(!!window.WebGLRenderingContext){var canvas=document.createElement('canvas'),names=['webgl','experimental-webgl','moz-webgl','webkit-3d'],context=false;for(var i=0;i<4;i++){try{context=canvas.getContext(names[i]);if(context&&typeof context.getParameter==='function'){// WebGL is enabled\nreturn true;}}catch(e){}}// WebGL is supported, but disabled\nreturn false;}// WebGL not supported\nreturn false;}function getVideoType(file){if(file.indexOf('.mp4')!==-1)return'video/mp4';else if(file.indexOf('.webm')!==-1)return'video/webm';else if(file.indexOf('.ogg')!==-1)return'video/ogg';}function dispatchEvent(eventName,config){config=config||null;var event=void 0;if(!isIE()){event=new CustomEvent(eventName,{detail:config});document.dispatchEvent(event);}else{event=document.createEvent('CustomEvent');event.initCustomEvent(eventName,true,false,config);document.dispatchEvent(event);}}function setCursor(cursor,element){element=element||document.body;if(element.style.cursor!==cursor){element.style.cursor=cursor;}}function getParameterByName(name){name=name.replace(/[\\[]/,\"\\\\[\").replace(/[\\]]/,\"\\\\]\");var regex=new RegExp(\"[\\\\?&]\"+name+\"=([^&#]*)\"),results=regex.exec(location.search);return results===null?\"\":decodeURIComponent(results[1].replace(/\\+/g,\" \"));}\n\n},{}]},{},[4])\n\n","'use strict';\n\nlet scene,\n    camera,\n    mesh,\n    rtt1,\n    rtt2,\n    flip = false;\n\nexport default class GPGPU\n{\n    constructor({renderer, simulationMaterial, renderMaterial, size = 128, format = THREE.RGBFormat})\n    {\n        const gl = renderer.getContext();\n\n        if(!gl.getExtension('OES_texture_float'))\n        {\n            alert('No OES_texture_float support for float textures!');\n            return;\n        }\n\n        if(gl.getParameter(gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS) === 0)\n        {\n            alert('No support for vertex shader textures!');\n            return;\n        }\n\n        camera = new THREE.OrthographicCamera(-0.5, 0.5, 0.5, -0.5, 0, 1);\n\n        scene = new THREE.Scene();\n\n        mesh = new THREE.Mesh(new THREE.PlaneBufferGeometry(1, 1), simulationMaterial);\n        scene.add(mesh);\n\n        const options = {\n            minFilter: THREE.NearestFilter,\n            magFilter: THREE.NearestFilter,\n            type: THREE.FloatType,\n            format: format,\n            // depth: false,\n            stencil: false\n        };\n        rtt1 = new THREE.WebGLRenderTarget(size, size, options);\n        rtt2 = rtt1.clone();\n\n        this.renderer = renderer;\n        this.simulationMaterial = simulationMaterial;\n        this.renderMaterial = renderMaterial;\n    }\n\n    update(propertyName)\n    {\n        propertyName = propertyName || 'tPositions';\n\n        if(flip)\n        {\n            this.renderer.render(scene, camera, rtt2, false);\n            this.renderMaterial.uniforms[propertyName].value = rtt2.texture;\n            this.simulationMaterial.uniforms[propertyName].value = rtt2.texture;\n        }\n        else\n        {\n            this.renderer.render(scene, camera, rtt1, false);\n            this.renderMaterial.uniforms[propertyName].value = rtt1.texture;\n            this.simulationMaterial.uniforms[propertyName].value = rtt1.texture;\n        }\n\n        flip = !flip;\n    }\n}","// stats.js - http://github.com/mrdoob/stats.js\nvar Stats=function(){function f(a,e,b){a=document.createElement(a);a.id=e;a.style.cssText=b;return a}function l(a,e,b){var c=f(\"div\",a,\"padding:0 0 3px 3px;text-align:left;background:\"+b),d=f(\"div\",a+\"Text\",\"font-family:Helvetica,Arial,sans-serif;font-size:9px;font-weight:bold;line-height:15px;color:\"+e);d.innerHTML=a.toUpperCase();c.appendChild(d);a=f(\"div\",a+\"Graph\",\"width:74px;height:30px;background:\"+e);c.appendChild(a);for(e=0;74>e;e++)a.appendChild(f(\"span\",\"\",\"width:1px;height:30px;float:left;opacity:0.9;background:\"+\nb));return c}function m(a){for(var b=c.children,d=0;d<b.length;d++)b[d].style.display=d===a?\"block\":\"none\";n=a}function p(a,b){a.appendChild(a.firstChild).style.height=Math.min(30,30-30*b)+\"px\"}var q=self.performance&&self.performance.now?self.performance.now.bind(performance):Date.now,k=q(),r=k,t=0,n=0,c=f(\"div\",\"stats\",\"width:80px;opacity:0.9;cursor:pointer\");c.addEventListener(\"mousedown\",function(a){a.preventDefault();m(++n%c.children.length)},!1);var d=0,u=Infinity,v=0,b=l(\"fps\",\"#0ff\",\"#002\"),\nA=b.children[0],B=b.children[1];c.appendChild(b);var g=0,w=Infinity,x=0,b=l(\"ms\",\"#0f0\",\"#020\"),C=b.children[0],D=b.children[1];c.appendChild(b);if(self.performance&&self.performance.memory){var h=0,y=Infinity,z=0,b=l(\"mb\",\"#f08\",\"#201\"),E=b.children[0],F=b.children[1];c.appendChild(b)}m(n);return{REVISION:14,domElement:c,setMode:m,begin:function(){k=q()},end:function(){var a=q();g=a-k;w=Math.min(w,g);x=Math.max(x,g);C.textContent=(g|0)+\" MS (\"+(w|0)+\"-\"+(x|0)+\")\";p(D,g/200);t++;if(a>r+1E3&&(d=Math.round(1E3*\nt/(a-r)),u=Math.min(u,d),v=Math.max(v,d),A.textContent=d+\" FPS (\"+u+\"-\"+v+\")\",p(B,d/100),r=a,t=0,void 0!==h)){var b=performance.memory.usedJSHeapSize,c=performance.memory.jsHeapSizeLimit;h=Math.round(9.54E-7*b);y=Math.min(y,h);z=Math.max(z,h);E.textContent=h+\" MB (\"+y+\"-\"+z+\")\";p(F,b/c)}return a},update:function(){k=this.end()}}};\"object\"===typeof module&&(module.exports=Stats);\n","'use strict';\n\nimport App from './app/app';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    const app = new App();\n}, false);","/**\n * @author alteredq / http://alteredqualia.com/\n *\n * Full-screen textured quad shader\n */\n\nTHREE.CopyShader = {\n\n\tuniforms: {\n\n\t\t\"tDiffuse\": { value: null },\n\t\t\"opacity\":  { value: 1.0 }\n\n\t},\n\n\tvertexShader: [\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\t\"vUv = uv;\",\n\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\"}\"\n\n\t].join( \"\\n\" ),\n\n\tfragmentShader: [\n\n\t\t\"uniform float opacity;\",\n\n\t\t\"uniform sampler2D tDiffuse;\",\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\t\"vec4 texel = texture2D( tDiffuse, vUv );\",\n\t\t\t\"gl_FragColor = opacity * texel;\",\n\n\t\t\"}\"\n\n\t].join( \"\\n\" )\n\n};\n","/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.EffectComposer = function ( renderer, renderTarget ) {\n\n\tthis.renderer = renderer;\n\n\tif ( renderTarget === undefined ) {\n\n\t\tvar parameters = {\n\t\t\tminFilter: THREE.LinearFilter,\n\t\t\tmagFilter: THREE.LinearFilter,\n\t\t\tformat: THREE.RGBAFormat,\n\t\t\tstencilBuffer: false\n\t\t};\n\t\tvar size = renderer.getSize();\n\t\trenderTarget = new THREE.WebGLRenderTarget( size.width, size.height, parameters );\n\n\t}\n\n\tthis.renderTarget1 = renderTarget;\n\tthis.renderTarget2 = renderTarget.clone();\n\n\tthis.writeBuffer = this.renderTarget1;\n\tthis.readBuffer = this.renderTarget2;\n\n\tthis.passes = [];\n\n\tif ( THREE.CopyShader === undefined )\n\t\tconsole.error( \"THREE.EffectComposer relies on THREE.CopyShader\" );\n\n\tthis.copyPass = new THREE.ShaderPass( THREE.CopyShader );\n\n};\n\nObject.assign( THREE.EffectComposer.prototype, {\n\n\tswapBuffers: function() {\n\n\t\tvar tmp = this.readBuffer;\n\t\tthis.readBuffer = this.writeBuffer;\n\t\tthis.writeBuffer = tmp;\n\n\t},\n\n\taddPass: function ( pass ) {\n\n\t\tthis.passes.push( pass );\n\n\t\tvar size = this.renderer.getSize();\n\t\tpass.setSize( size.width, size.height );\n\n\t},\n\n\tinsertPass: function ( pass, index ) {\n\n\t\tthis.passes.splice( index, 0, pass );\n\n\t},\n\n\trender: function ( delta ) {\n\n\t\tvar maskActive = false;\n\n\t\tvar pass, i, il = this.passes.length;\n\n\t\tfor ( i = 0; i < il; i ++ ) {\n\n\t\t\tpass = this.passes[ i ];\n\n\t\t\tif ( pass.enabled === false ) continue;\n\n\t\t\tpass.render( this.renderer, this.writeBuffer, this.readBuffer, delta, maskActive );\n\n\t\t\tif ( pass.needsSwap ) {\n\n\t\t\t\tif ( maskActive ) {\n\n\t\t\t\t\tvar context = this.renderer.context;\n\n\t\t\t\t\tcontext.stencilFunc( context.NOTEQUAL, 1, 0xffffffff );\n\n\t\t\t\t\tthis.copyPass.render( this.renderer, this.writeBuffer, this.readBuffer, delta );\n\n\t\t\t\t\tcontext.stencilFunc( context.EQUAL, 1, 0xffffffff );\n\n\t\t\t\t}\n\n\t\t\t\tthis.swapBuffers();\n\n\t\t\t}\n\n\t\t\tif ( THREE.MaskPass !== undefined ) {\n\n\t\t\t\tif ( pass instanceof THREE.MaskPass ) {\n\n\t\t\t\t\tmaskActive = true;\n\n\t\t\t\t} else if ( pass instanceof THREE.ClearMaskPass ) {\n\n\t\t\t\t\tmaskActive = false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\treset: function ( renderTarget ) {\n\n\t\tif ( renderTarget === undefined ) {\n\n\t\t\tvar size = this.renderer.getSize();\n\n\t\t\trenderTarget = this.renderTarget1.clone();\n\t\t\trenderTarget.setSize( size.width, size.height );\n\n\t\t}\n\n\t\tthis.renderTarget1.dispose();\n\t\tthis.renderTarget2.dispose();\n\t\tthis.renderTarget1 = renderTarget;\n\t\tthis.renderTarget2 = renderTarget.clone();\n\n\t\tthis.writeBuffer = this.renderTarget1;\n\t\tthis.readBuffer = this.renderTarget2;\n\n\t},\n\n\tsetSize: function ( width, height ) {\n\n\t\tthis.renderTarget1.setSize( width, height );\n\t\tthis.renderTarget2.setSize( width, height );\n\n\t\tfor ( var i = 0; i < this.passes.length; i ++ ) {\n\n\t\t\tthis.passes[i].setSize( width, height );\n\n\t\t}\n\n\t}\n\n} );\n\n\nTHREE.Pass = function () {\n\n\t// if set to true, the pass is processed by the composer\n\tthis.enabled = true;\n\n\t// if set to true, the pass indicates to swap read and write buffer after rendering\n\tthis.needsSwap = true;\n\n\t// if set to true, the pass clears its buffer before rendering\n\tthis.clear = false;\n\n\t// if set to true, the result of the pass is rendered to screen\n\tthis.renderToScreen = false;\n\n};\n\nObject.assign( THREE.Pass.prototype, {\n\n\tsetSize: function( width, height ) {},\n\n\trender: function ( renderer, writeBuffer, readBuffer, delta, maskActive ) {\n\n\t\tconsole.error( \"THREE.Pass: .render() must be implemented in derived pass.\" );\n\n\t}\n\n} );\n","/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.MaskPass = function ( scene, camera ) {\n\n\tTHREE.Pass.call( this );\n\n\tthis.scene = scene;\n\tthis.camera = camera;\n\n\tthis.clear = true;\n\tthis.needsSwap = false;\n\n\tthis.inverse = false;\n\n};\n\nTHREE.MaskPass.prototype = Object.assign( Object.create( THREE.Pass.prototype ), {\n\n\tconstructor: THREE.MaskPass,\n\n\trender: function ( renderer, writeBuffer, readBuffer, delta, maskActive ) {\n\n\t\tvar context = renderer.context;\n\t\tvar state = renderer.state;\n\n\t\t// don't update color or depth\n\n\t\tstate.buffers.color.setMask( false );\n\t\tstate.buffers.depth.setMask( false );\n\n\t\t// lock buffers\n\n\t\tstate.buffers.color.setLocked( true );\n\t\tstate.buffers.depth.setLocked( true );\n\n\t\t// set up stencil\n\n\t\tvar writeValue, clearValue;\n\n\t\tif ( this.inverse ) {\n\n\t\t\twriteValue = 0;\n\t\t\tclearValue = 1;\n\n\t\t} else {\n\n\t\t\twriteValue = 1;\n\t\t\tclearValue = 0;\n\n\t\t}\n\n\t\tstate.buffers.stencil.setTest( true );\n\t\tstate.buffers.stencil.setOp( context.REPLACE, context.REPLACE, context.REPLACE );\n\t\tstate.buffers.stencil.setFunc( context.ALWAYS, writeValue, 0xffffffff );\n\t\tstate.buffers.stencil.setClear( clearValue );\n\n\t\t// draw into the stencil buffer\n\n\t\trenderer.render( this.scene, this.camera, readBuffer, this.clear );\n\t\trenderer.render( this.scene, this.camera, writeBuffer, this.clear );\n\n\t\t// unlock color and depth buffer for subsequent rendering\n\n\t\tstate.buffers.color.setLocked( false );\n\t\tstate.buffers.depth.setLocked( false );\n\n\t\t// only render where stencil is set to 1\n\n\t\tstate.buffers.stencil.setFunc( context.EQUAL, 1, 0xffffffff );  // draw if == 1\n\t\tstate.buffers.stencil.setOp( context.KEEP, context.KEEP, context.KEEP );\n\n\t}\n\n} );\n\n\nTHREE.ClearMaskPass = function () {\n\n\tTHREE.Pass.call( this );\n\n\tthis.needsSwap = false;\n\n};\n\nTHREE.ClearMaskPass.prototype = Object.create( THREE.Pass.prototype );\n\nObject.assign( THREE.ClearMaskPass.prototype, {\n\n\trender: function ( renderer, writeBuffer, readBuffer, delta, maskActive ) {\n\n\t\trenderer.state.buffers.stencil.setTest( false );\n\n\t}\n\n} );\n","/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.RenderPass = function ( scene, camera, overrideMaterial, clearColor, clearAlpha ) {\n\n\tTHREE.Pass.call( this );\n\n\tthis.scene = scene;\n\tthis.camera = camera;\n\n\tthis.overrideMaterial = overrideMaterial;\n\n\tthis.clearColor = clearColor;\n\tthis.clearAlpha = ( clearAlpha !== undefined ) ? clearAlpha : 0;\n\n\tthis.clear = true;\n\tthis.needsSwap = false;\n\n};\n\nTHREE.RenderPass.prototype = Object.assign( Object.create( THREE.Pass.prototype ), {\n\n\tconstructor: THREE.RenderPass,\n\n\trender: function ( renderer, writeBuffer, readBuffer, delta, maskActive ) {\n\n\t\tvar oldAutoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\n\t\tthis.scene.overrideMaterial = this.overrideMaterial;\n\n\t\tvar oldClearColor, oldClearAlpha;\n\n\t\tif ( this.clearColor ) {\n\n\t\t\toldClearColor = renderer.getClearColor().getHex();\n\t\t\toldClearAlpha = renderer.getClearAlpha();\n\n\t\t\trenderer.setClearColor( this.clearColor, this.clearAlpha );\n\n\t\t}\n\n\t\trenderer.render( this.scene, this.camera, this.renderToScreen ? null : readBuffer, this.clear );\n\n\t\tif ( this.clearColor ) {\n\n\t\t\trenderer.setClearColor( oldClearColor, oldClearAlpha );\n\n\t\t}\n\n\t\tthis.scene.overrideMaterial = null;\n\t\trenderer.autoClear = oldAutoClear;\n\t}\n\n} );\n","/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nTHREE.ShaderPass = function ( shader, textureID ) {\n\n\tTHREE.Pass.call( this );\n\n\tthis.textureID = ( textureID !== undefined ) ? textureID : \"tDiffuse\";\n\n\tif ( shader instanceof THREE.ShaderMaterial ) {\n\n\t\tthis.uniforms = shader.uniforms;\n\n\t\tthis.material = shader;\n\n\t} else if ( shader ) {\n\n\t\tthis.uniforms = THREE.UniformsUtils.clone( shader.uniforms );\n\n\t\tthis.material = new THREE.ShaderMaterial( {\n\n\t\t\tdefines: shader.defines || {},\n\t\t\tuniforms: this.uniforms,\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader\n\n\t\t} );\n\n\t}\n\n\tthis.camera = new THREE.OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\n\tthis.scene = new THREE.Scene();\n\n\tthis.quad = new THREE.Mesh( new THREE.PlaneBufferGeometry( 2, 2 ), null );\n\tthis.scene.add( this.quad );\n\n};\n\nTHREE.ShaderPass.prototype = Object.assign( Object.create( THREE.Pass.prototype ), {\n\n\tconstructor: THREE.ShaderPass,\n\n\trender: function( renderer, writeBuffer, readBuffer, delta, maskActive ) {\n\n\t\tif ( this.uniforms[ this.textureID ] ) {\n\n\t\t\tthis.uniforms[ this.textureID ].value = readBuffer.texture;\n\n\t\t}\n\n\t\tthis.quad.material = this.material;\n\n\t\tif ( this.renderToScreen ) {\n\n\t\t\trenderer.render( this.scene, this.camera );\n\n\t\t} else {\n\n\t\t\trenderer.render( this.scene, this.camera, writeBuffer, this.clear );\n\n\t\t}\n\n\t}\n\n} );\n","'use strict';\n\nrequire('./EffectComposer');\nrequire('./RenderPass');\nrequire('./ShaderPass');\nrequire('./MaskPass');\nrequire('./CopyShader');\n\nlet passes,\n\tcomposer,\n\trenderPass,\n\tcopyPass;\n\nexport default class EffectsManager{\n\n\tconstructor({renderer, camera, scene})\n\t{\n\t\tcomposer = new THREE.EffectComposer(renderer);\n\t\trenderPass = new THREE.RenderPass(scene, camera);\n\t\tcopyPass = new THREE.ShaderPass(THREE.CopyShader);\n\t\tcopyPass.renderToScreen = true;\n\n\t\tpasses = {};\n\n\t\tcomposer = new THREE.EffectComposer(renderer);\n\t\tcomposer.addPass(renderPass);\n\t\tcomposer.addPass(copyPass);\n\t}\n\n\tupdate()\n\t{\n\t\tcomposer.render(0.1);\n\t}\n\n\tresize(width, height)\n\t{\n\t\tif(composer)\n\t\t{\n\t\t\tcomposer.setSize(width, height);\n\t\t}\n\t}\n\n\tget passes()\n\t{\n\t\treturn passes;\n\t}\n\n\tdispose()\n\t{\n\t\tpasses = null;\n\t\tcomposer = null;\n\t\trenderPass = null;\n\t\tcopyPass = null;\n\t}\n}\n","'use strict';\n\nlet interval,\n    loadInfo,\n    files,\n    numFiles,\n    numLoaded,\n    progressCallback,\n    loadCallback,\n    loadCheck,\n    scope,\n    done = false;\n\nexport default class Loader\n{\n    constructor()\n    {\n        loadInfo = {};\n        files = {textures:{}, geometry:{}, fonts:{}, data:{}};\n        loadCheck = this.checkLoaded;\n        scope = this;\n    }\n\n    load(manifest, onLoadCallback, onProgressCallback)\n    {\n        progressCallback = onProgressCallback;\n        loadCallback = onLoadCallback;\n\n        numFiles = manifest.length;\n        numLoaded = 0;\n\n        const scope = this;\n\n        manifest.forEach(function(fileObj){\n            if(!(Object.prototype.toString.call(fileObj.file) === '[object Array]'))\n            {\n                if(fileObj.file.indexOf('.png') > 0 || fileObj.file.indexOf('.jpg') > 0 || fileObj.file.indexOf('.jpeg') > 0 || fileObj.file.indexOf('.gif') > 0)\n                {\n                    scope.loadTexture(fileObj);\n                }\n                else if(fileObj.file.indexOf('.json') > 0)\n                {\n                    if(fileObj.isData)\n                    {\n                        scope.loadDataJSON(fileObj);\n                    }\n                    else if(fileObj.isFont)\n                    {\n                        scope.loadFontJSON(fileObj);\n                    }\n                    else\n                    {\n                        scope.loadGeometryJSON(fileObj);\n                    }\n                }\n                else if(fileObj.file.indexOf('.dae') > 0)\n                {\n                    scope.loadCollada(fileObj);\n                }\n            }\n            else\n            {\n                scope.loadCubemap(fileObj)\n            }\n        });\n\n        interval = setInterval(scope.update, 1000/30);\n    }\n\n    loadDataJSON(fileObj)\n    {\n        const xhr = new XMLHttpRequest();\n        xhr.overrideMimeType(\"application/json\");\n        xhr.open('GET', fileObj.file, true);\n        xhr.onreadystatechange = function() {\n            if(xhr.readyState === 4 && xhr.status === 200)\n            {\n                files.data[fileObj.id] = JSON.parse(xhr.responseText);\n                numLoaded++;\n                loadCheck();\n            }\n        };\n        xhr.send();\n    }\n\n    loadGeometryJSON(fileObj)\n    {\n        // console.log('loadGeometryJSON:', fileObj.file);\n\n        const loader = new THREE.JSONLoader();\n        loadInfo[fileObj.id] = {loaded:0, total:0}\n\n        loader.load(fileObj.file, function(geometry){\n            loadInfo[fileObj.id].loaded = loadInfo[fileObj.id].total;\n            files.geometry[fileObj.id] = geometry;\n            numLoaded++;\n            loadCheck();\n        }, function(xhr){\n            loadInfo[fileObj.id].loaded = xhr.loaded;\n            loadInfo[fileObj.id].total = xhr.total;\n        });\n    }\n\n    loadFontJSON(fileObj)\n    {\n        const loader = new THREE.FontLoader();\n        loadInfo[fileObj.id] = {loaded:0, total:0}\n\n        loader.load(fileObj.file, function(font){\n            loadInfo[fileObj.id].loaded = loadInfo[fileObj.id].total;\n            files.fonts[fileObj.id] = font;\n            numLoaded++;\n            loadCheck();\n        }, function(xhr){\n            loadInfo[fileObj.id].loaded = xhr.loaded;\n            loadInfo[fileObj.id].total = xhr.total;\n        });\n    }\n\n    loadCollada(fileObj)\n    {\n        // console.log('loadCollada:', fileObj.file);\n\n        const loader = new THREE.ColladaLoader();\n        loadInfo[fileObj.id] = {loaded:0, total:0}\n\n        loader.load(fileObj.file, function(collada){\n            loadInfo[fileObj.id].loaded = loadInfo[fileObj.id].total;\n            files.geometry[fileObj.id] = collada;\n            numLoaded++;\n            loadCheck();\n        }, function(xhr){\n            loadInfo[fileObj.id].loaded = xhr.loaded;\n            loadInfo[fileObj.id].total = xhr.total;\n        });\n    }\n\n    loadTexture(fileObj)\n    {\n        // console.log('loadTexture:', fileObj.id, fileObj.file);\n\n        const loader = new THREE.TextureLoader();\n        loadInfo[fileObj.id] = {loaded:0, total:0}\n\n        loader.load(fileObj.file, function(texture){\n            loadInfo[fileObj.id].loaded = loadInfo[fileObj.id].total;\n            files.textures[fileObj.id] = texture;\n            numLoaded++;\n            loadCheck();\n        }, function(xhr){\n            loadInfo[fileObj.id].loaded = xhr.loaded;\n            loadInfo[fileObj.id].total = xhr.total;\n        });\n    }\n\n    loadCubemap(fileObj)\n    {\n        // console.log('loadCubemap:', fileObj.file);\n\n        const loader = new THREE.CubeTextureLoader();\n        loadInfo[fileObj.id] = {loaded:0, total:0}\n\n        loader.load(fileObj.file, function(texture){\n            loadInfo[fileObj.id].loaded = loadInfo[fileObj.id].total;\n            files.textures[fileObj.id] = texture;\n            numLoaded++;\n            loadCheck();\n        }, function(xhr){\n            loadInfo[fileObj.id].loaded = xhr.loaded;\n            loadInfo[fileObj.id].total = xhr.total;\n        });\n    }\n\n    checkLoaded()\n    {\n        if(done) return;\n\n        // console.log('checkLoaded:', numLoaded, numFiles);\n        if(numLoaded === numFiles)// || percent === 1)\n        {\n            done = true;\n            clearInterval(interval);\n            scope.update();\n\n            if(typeof loadCallback === 'function')\n            {\n                loadCallback(files);\n            }\n\n            // dispose();\n        }\n    }\n\n    update()\n    {\n        if(typeof progressCallback === 'function')\n        {\n            let loaded = 0;\n            let total = 0;\n\n            for(let info in loadInfo)\n            {\n                loaded += parseInt(loadInfo[info].loaded);\n                total += parseInt(loadInfo[info].total);\n            }\n\n            // checkLoaded(loaded/total);\n\n            if(progressCallback) progressCallback(loaded, total);\n        }\n    }\n\n    dispose()\n    {\n        clearInterval(interval);\n\n        interval = null;\n        loadInfo = null;\n        files = null;\n        numFiles = null;\n        numLoaded = null;\n        progressCallback = null;\n        loadCallback = null;\n        done = null;\n    }\n}\n","'use strict';\n\nexport const axisUp = new THREE.Vector3(0, 1, 0);\nexport const axisDown = new THREE.Vector3(0, -1, 0);\nexport const axisLeft = new THREE.Vector3(-1, 0, 0);\nexport const axisRight = new THREE.Vector3(1, 0, 0);\nexport const axisForward = new THREE.Vector3(0, 0, 1);\nexport const axisBackward = new THREE.Vector3(0, 0, -1);\n\nexport function degreesToRads(degrees)\n{\n    return degrees / 180 * Math.PI;\n}\n\nexport function radsToDegrees(radians)\n{\n    return radians * 180 / Math.PI;\n}\n\nexport function getDataTexture(data, width, height, format)\n{\n    let tex = new THREE.DataTexture(data, width, height, format, THREE.FloatType);\n    tex.minFilter = THREE.NearestFilter;\n    tex.magFilter = THREE.NearestFilter;\n    tex.generateMipmaps = false;\n    tex.needsUpdate = true;\n    return tex;\n}\n\nexport function createPlane(width, height, color)\n{\n    return new THREE.Mesh(\n        new THREE.PlaneGeometry(width || 1, height || 1),\n        new THREE.MeshBasicMaterial({color:color || 0xffffff})\n    );\n}\n\n//export function createSphere(radius, color)\n// {\n//     // TODO\n// }\n\n//export function createCube(width, height, depth, color)\n// {\n//     // TODO\n// }\n\nexport function randomRange(min, max)\n{\n    return min + Math.random() * (max - min);\n}\n\nexport function rotateAroundWorldAxisX(object, radians)\n{\n    let matrix = new THREE.Matrix4();\n    matrix.makeRotationX(radians);\n    matrix.multiply(object.matrix);\n    object.matrix = matrix;\n    object.rotation.setFromRotationMatrix(object.matrix);\n}\n\nexport function rotateAroundWorldAxisY(object, radians)\n{\n    let matrix = new THREE.Matrix4();\n    matrix.makeRotationY(radians);\n    matrix.multiply(object.matrix);\n    object.matrix = matrix;\n    object.rotation.setFromRotationMatrix(object.matrix);\n}\n\nexport function rotateAroundWorldAxisZ(object, radians)\n{\n    let matrix = new THREE.Matrix4();\n    matrix.makeRotationZ(radians);\n    matrix.multiply(object.matrix);\n    object.matrix = matrix;\n    object.rotation.setFromRotationMatrix(object.matrix);\n}\n\nexport function rotateAroundWorldAxis(object, axis, radians)\n{\n    let rotWorldMatrix = new THREE.Matrix4();\n    rotWorldMatrix.makeRotationAxis(axis.normalize(), radians);\n    rotWorldMatrix.multiply(object.matrix);\n    object.matrix = rotWorldMatrix;\n    object.rotation.setFromRotationMatrix(object.matrix);\n}\n\nexport function setScale(object, scale)\n{\n    object.scale.set(scale, scale, scale);\n}\n\nexport function disposeOfMesh(mesh)\n{\n    if(!mesh) return;\n\n    if(mesh.parent) mesh.parent.remove(mesh);\n    if(mesh.geometry) mesh.geometry.dispose();\n    if(mesh.material)\n    {\n        if(mesh.material.map)\n        {\n            mesh.material.map.dispose();\n        }\n        mesh.material.dispose();\n    }\n}\n\nexport function disposeOfChildren(children)\n{\n    // console.log('disposeOfChildren:', children.length);\n\n    if(!children) return;\n\n    while(children.length > 0)\n    {\n        disposeOfMesh(children[0]);\n    }\n}\n\nexport function removeAllChildren(object3d)\n{\n    while(object3d.children.length > 0)\n    {\n        object3d.remove(object3d.children[0]);\n    }\n}\n\nexport function moveTowards(object, position, easing)\n{\n    object.position.x += (position.x - object.position.x) * easing;\n    object.position.y += (position.y - object.position.y) * easing;\n    object.position.z += (position.z - object.position.z) * easing;\n}\n\nexport function moveVectorTowards(v1, v2, easing)\n{\n    v1.x += (v2.x - v1.x) * easing;\n    v1.y += (v2.y - v1.y) * easing;\n    v1.z += (v2.z - v1.z) * easing;\n}\n\nexport function rotateTowards(object, rotation, easing)\n{\n    object.rotation.x += (rotation.x - object.rotation.x) * easing;\n    object.rotation.y += (rotation.y - object.rotation.y) * easing;\n    object.rotation.z += (rotation.z - object.rotation.z) * easing;\n}\n\nexport function updateCameraMatrices(camera)\n{\n    camera.updateMatrix();\n    camera.updateMatrixWorld();\n    camera.matrixWorldInverse.getInverse(camera.matrixWorld);\n}\n\nexport function meshIsInView(mesh, camera, frustum)\n{\n    frustum = frustum || new THREE.Frustum();\n    updateCameraMatrices(camera);\n\n    mesh.updateMatrix();\n    mesh.updateMatrixWorld();\n\n    frustum.setFromMatrix( new THREE.Matrix4().multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse ) );\n    return frustum.intersectsObject(mesh);\n}\n\nexport function getMouseIntersection(mouse, camera, objects, raycaster)\n{\n    raycaster = raycaster || new THREE.Raycaster();\n\n    raycaster.setFromCamera(mouse, camera);\n    let intersections = raycaster.intersectObjects(objects);\n    return intersections.length > 0 ? intersections[0] : null;\n}\n\nexport function objectWorldPositionToScreen(object, camera)\n{\n    updateCameraMatrices(camera);\n    object.updateMatrixWorld();\n\n    let width = window.innerWidth, height = window.innerHeight,\n        widthHalf = width / 2, heightHalf = height / 2,\n        vector = new THREE.Vector3().setFromMatrixPosition(object.matrixWorld);\n\n    vector.project(camera);\n    return {\n        x:(vector.x * widthHalf) + widthHalf | 0,\n        y:-(vector.y * heightHalf) + heightHalf | 0\n    };\n}\n\nexport function objectWorldPositionToScreenAlt(object, camera)\n{\n    updateCameraMatrices(camera);\n    object.updateMatrixWorld();\n\n    let width = window.innerWidth, height = window.innerHeight,\n        pos = new THREE.Vector3().setFromMatrixPosition(object.matrixWorld),\n        projScreenMat = new THREE.Matrix4();\n\n        projScreenMat.multiplyMatrices(camera.projectionMatrix, camera.matrixWorldInverse);\n        pos.applyMatrix4(projScreenMat);\n        // pos.applyProjection(projScreenMat);\n\n\n        return {\n            x: ((pos.x + 1) * width / 2) | 0,\n            y: ((-pos.y + 1) * height / 2) | 0\n        };\n}\n\nexport function worldToScreen(position, camera)\n{\n    updateCameraMatrices(camera);\n\n    let width = window.innerWidth, height = window.innerHeight,\n        widthHalf = width / 2, heightHalf = height / 2,\n        vector = new THREE.Vector3().copy(position);\n\n    vector.project(camera);\n    return {\n        x:(vector.x * widthHalf) + widthHalf | 0,\n        y:-(vector.y * heightHalf) + heightHalf | 0\n    };\n\n    // vector.x = ( vector.x * widthHalf ) + widthHalf;\n    // vector.y = - ( vector.y * heightHalf ) + heightHalf;\n    // return vector;\n}\n\nexport function screenToWorld(position, camera)\n{\n    updateCameraMatrices(camera);\n\n    let x = ( position.x / window.innerWidth ) * 2 - 1,\n        y = - ( position.y / window.innerHeight ) * 2 + 1,\n        vector = new THREE.Vector3(x, y, 0.5);\n\n    vector.unproject(camera);\n\n    let dir = vector.sub( camera.position ).normalize(),\n        distance = - camera.position.z / dir.z;\n\n    return camera.position.clone().add( dir.multiplyScalar( distance ) );\n}\n\nexport function screenToWorldAtZ(position, z, camera)\n{\n    // let x = ( position.x / window.innerWidth ) * 2 - 1,\n    //     y = - ( position.y / window.innerHeight ) * 2 + 1,\n    //     planeZ = new THREE.Plane(new THREE.Vector3(0, 0, 1), z),\n    //     vector = new THREE.Vector3(x, y, 0.5),\n    //     projector = new THREE.Projector(),\n    //     raycaster = projector.pickingRay(vector, camera);\n\n    // return raycaster.ray.intersectPlane(planeZ);\n\n    let x = ( position.x / window.innerWidth ) * 2 - 1,\n        y = - ( position.y / window.innerHeight ) * 2 + 1,\n        planeZ = new THREE.Plane(new THREE.Vector3(0, 0, 1), z),\n        vector = new THREE.Vector3(x, y, 0.5),\n        raycaster = new THREE.Raycaster(),\n        pos;\n\n    // raycaster.pickingRay(vector, camera);\n    raycaster.setFromCamera(vector, camera);\n    pos = raycaster.ray.intersectPlane(planeZ);\n    return pos;\n}\n\nexport function getMouseWorldPos(mouseScreenPos, camera)\n{\n    // let vec = new THREE.Vector3(mouseScreenPos.x, mouseScreenPos.y, 0.5).unproject(camera);\n    let vec = mouseScreenPos.clone().unproject(camera);\n    let dir = vec.sub( camera.position ).normalize();\n    let distance = - camera.position.z / dir.z;\n    return camera.position.clone().add( dir.multiplyScalar( distance ) );\n}\n\nexport function getMouseWorldPosAtZ(mouseScreenPos, camera, z)\n{\n    let planeZ = new THREE.Plane(new THREE.Vector3(0, 0, 1), z);\n    // let vec = new THREE.Vector3(mouseScreenPos.x, mouseScreenPos.y, 0.5);\n    let vec = mouseScreenPos;\n    let raycaster = new THREE.Raycaster();\n    raycaster.pickingRay(vec, camera);\n    let pos = raycaster.ray.intersectPlane(planeZ);\n    return pos;\n}\n\nexport function getEdges(mesh)\n{\n    let edge = [ 0, 0 ],\n        hash = {}\n        keys = [ 'a', 'b', 'c' ],\n        geometry2,\n        thresholdDot = Math.cos( THREE.Math.degToRad( 1 ) );\n\n    let sortFunction = function ( a, b ) { return a - b; };\n\n    if ( mesh.geometry instanceof THREE.BufferGeometry ) {\n        geometry2 = new THREE.Geometry();\n        geometry2.fromBufferGeometry( mesh.geometry );\n    } else {\n        geometry2 = mesh.geometry.clone();\n    }\n    geometry2.mergeVertices();\n    geometry2.computeFaceNormals();\n\n    let vertices = geometry2.vertices,\n        faces = geometry2.faces,\n        facesOriginal = mesh.geometry.faces,\n        key;\n\n    for ( let i = 0, l = faces.length; i < l; i ++ ) {\n\n        let face = faces[ i ];\n\n        for ( let j = 0; j < 3; j ++ ) {\n\n            edge[ 0 ] = face[ keys[ j ] ];\n            edge[ 1 ] = face[ keys[ ( j + 1 ) % 3 ] ];\n            edge.sort( sortFunction );\n\n            key = edge.toString();\n\n            if ( hash[ key ] === undefined ) {\n                hash[ key ] = { vert1: edge[ 0 ], vert2: edge[ 1 ], face1: i, face2: undefined };\n            } else {\n                hash[ key ].face2 = i;\n            }\n        }\n    }\n\n    let edges = [];\n\n    for ( key in hash ) {\n        let h = hash[ key ];\n        if ( h.face2 === undefined || faces[ h.face1 ].normal.dot( faces[ h.face2 ].normal ) <= thresholdDot )\n        {\n            edges.push({\n                vertex1:vertices[ h.vert1 ],\n                vertex2:vertices[ h.vert2 ],\n                // face1:faces[ h.face1 ],\n                // face2:faces[ h.face2 ],\n                face1:facesOriginal[ h.face1 ],\n                face2:facesOriginal[ h.face2 ],\n                faceIndex1: h.face1,\n                faceIndex2: h.face2\n            });\n        }\n    }\n\n    return edges;\n}\n\nexport function addFragmentFogInjections(fragmentShader)\n{\n    let lines = fragmentShader.split('\\n'),\n        len = lines.length;\n\n    for(let i = 0; i < len; i++)\n    {\n        if(lines[i] === '/*#FOG_INJECTION_1#*/'){\n            lines[i] = THREE.ShaderChunk['fog_pars_fragment'];\n        }else if(lines[i] === '/*#FOG_INJECTION_2#*/'){\n            lines[i] = THREE.ShaderChunk['fog_fragment'];\n        }\n    }\n    return lines.join('\\n');\n}\n\nexport function pointOnSphere(r, a1, a2)\n{\n    return {\n        x: r * Math.cos(a1) * Math.sin(a2),\n        y: r * Math.sin(a1) * Math.sin(a2),\n        z: r * Math.cos(a2)\n    };\n}\n\nexport function getPointsOnSphere(n)\n{\n    let pts = [],\n        pt;\n\n    for(let i = 0; i < n; i++)\n    {\n        pt = pointOnSphere(1, Math.random() * Math.PI * 2, Math.random() * Math.PI * 2);\n        pts.push(new THREE.Vector3( pt.x, pt.y, pt.z ));\n    }\n\n    return pts;\n}\n\nexport function getPointsWithinSphere(n, maxRadius)\n{\n    let pts = [],\n        pt;\n\n    for(let i = 0; i < n; i++)\n    {\n        pt = pointOnSphere(Math.random() * maxRadius, Math.random() * Math.PI * 2, Math.random() * Math.PI * 2);\n        pts.push(new THREE.Vector3( pt.x, pt.y, pt.z ));\n    }\n\n    return pts;\n}\n\nexport function getPointsOnSphereEvenly(n)\n{\n    let pts = [],\n        inc = Math.PI * (3 - Math.sqrt(5)),\n        off = 2.0 / n,\n        x, y, z, r,\n        phi;\n\n    for (let k = 0; k < n; k++){\n        y = k * off - 1 + (off /2);\n        r = Math.sqrt(1 - y * y);\n        phi = k * inc;\n        x = Math.cos(phi) * r;\n        z = Math.sin(phi) * r;\n\n        pts.push(new THREE.Vector3( x, y, z ));\n    }\n    return pts;\n}\n\nexport function getRandomVector3(min, max)\n{\n    return new THREE.Vector3(randomRange(min, max), randomRange(min, max), randomRange(min, max));\n}\n\nexport function addRandomVector3(vec, min, max)\n{\n    return getRandomVector3(min, max).add(vec);\n}\n\nexport function rotationInDegrees(rotation)\n{\n    let degrees = 180 / Math.PI;\n    return new THREE.Euler(rotation.x * degrees, rotation.y * degrees, rotation.z * degrees, rotation.order);\n}\n\nexport function loadJSONGeometry(manifest, callback)\n{\n    let loader = new THREE.JSONLoader(),\n        len = manifest.length,\n        loaded = 0,\n        file,\n        id,\n        geometriesById = {}\n        geometries = [];\n\n    let load = function()\n    {\n        file = (manifest[loaded].file !== undefined) ? manifest[loaded].file : manifest[loaded];\n        id = (manifest[loaded].id !== undefined) ? manifest[loaded].id : null;\n        loader.load(file, function(g){\n            if(id)\n            {\n                geometriesById[id] = g;\n            }\n            geometries.push({geometry:g, id:id});\n            loaded++;\n            if(loaded === len)\n            {\n                if(typeof callback === 'function')\n                {\n                    callback(geometries, geometriesById);\n                }\n            }\n            else\n            {\n                load();\n            }\n        });\n    };\n\n    load();\n}\n\nexport function loadTextures(manifest, callback)\n{\n    let len = manifest.length,\n        loaded = 0,\n        file,\n        id,\n        texturesById = {}\n        textures = [],\n        loader = new THREE.TextureLoader();\n\n    loader.crossOrigin = \"\";\n\n    let load = function()\n    {\n        file = (manifest[loaded].file !== undefined) ? manifest[loaded].file : manifest[loaded];\n        id = (manifest[loaded].id !== undefined) ? manifest[loaded].id : null;\n\n        loader.load(file, function(tex){\n            if(id)\n            {\n                texturesById[id] = tex;\n            }\n            textures.push({texture:tex, id:id});\n            loaded++;\n            if(loaded === len)\n            {\n                if(typeof callback === 'function')\n                {\n                    callback(textures, texturesById);\n                }\n            }\n            else\n            {\n                load();\n            }\n        });\n\n        // THREE.ImageUtils.loadTexture(file, undefined, function(tex){\n        //     if(id)\n        //     {\n        //         texturesById[id] = tex;\n        //     }\n        //     textures.push({texture:tex, id:id});\n        //     loaded++;\n        //     if(loaded === len)\n        //     {\n        //         if(typeof callback === 'function')\n        //         {\n        //             callback(textures, texturesById);\n        //         }\n        //     }\n        //     else\n        //     {\n        //         load();\n        //     }\n        // });\n    };\n\n    load();\n}\n\nexport function setTextureWrapping(textures, wrapping)\n{\n    for(let i = 0; i < textures.length; i++)\n    {\n        textures[i].wrapS = textures[i].wrapT = wrapping;\n        textures[i].needsUpdate = true;\n    }\n}\n\nexport function setTextureMipmapping(textures, mipmapping)\n{\n    for(let i = 0; i < textures.length; i++)\n    {\n        textures[i].generateMipmaps = mipmapping;\n        textures[i].needsUpdate = true;\n    }\n}\n\nexport function setTextureMinMagFilters(textures, minFilter, magFilter)\n{\n    for(let i = 0; i < textures.length; i++)\n    {\n        if(minFilter)\n            textures[i].minFilter = minFilter;\n\n        if(magFilter)\n            textures[i].magFilter = magFilter;\n\n        textures[i].needsUpdate = true;\n    }\n}\n\nexport function injectShaderCode(original, key, injection)\n{\n    if(Object.prototype.toString.call(injection) === '[object Array]')\n    {\n        let replacement = '';\n        for(let i = 0; i < injection.length; i++)\n        {\n            replacement += injection[i] + '\\n';\n        }\n\n        return original.replace(key, replacement);\n    }\n    else\n    {\n        return original.replace(key, injection);\n    }\n}\n\nexport function logVector(vector)\n{\n    console.log(vector.x, vector.y, vector.z);\n}\n\n// usage: pass renderer.getContext() & mesh.material.program.program, call render at least once first.\nexport function logProgramInfo(gl, program) {\n    let result = {\n        attributes: [],\n        uniforms: [],\n        attributeCount: 0,\n        uniformCount: 0\n    }\n    activeUniforms = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS),\n    activeAttributes = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n\n    // Taken from the WebGl spec:\n    // http://www.khronos.org/registry/webgl/specs/latest/1.0/#5.14\n    let enums = {\n        0x8B50: 'FLOAT_VEC2',\n        0x8B51: 'FLOAT_VEC3',\n        0x8B52: 'FLOAT_VEC4',\n        0x8B53: 'INT_VEC2',\n        0x8B54: 'INT_VEC3',\n        0x8B55: 'INT_VEC4',\n        0x8B56: 'BOOL',\n        0x8B57: 'BOOL_VEC2',\n        0x8B58: 'BOOL_VEC3',\n        0x8B59: 'BOOL_VEC4',\n        0x8B5A: 'FLOAT_MAT2',\n        0x8B5B: 'FLOAT_MAT3',\n        0x8B5C: 'FLOAT_MAT4',\n        0x8B5E: 'SAMPLER_2D',\n        0x8B60: 'SAMPLER_CUBE',\n        0x1400: 'BYTE',\n        0x1401: 'UNSIGNED_BYTE',\n        0x1402: 'SHORT',\n        0x1403: 'UNSIGNED_SHORT',\n        0x1404: 'INT',\n        0x1405: 'UNSIGNED_INT',\n        0x1406: 'FLOAT'\n    };\n\n    // Loop through active uniforms\n    for (let i=0; i < activeUniforms; i++) {\n        let uniform = gl.getActiveUniform(program, i);\n        uniform.typeName = enums[uniform.type];\n        result.uniforms.push(uniform);\n        result.uniformCount += uniform.size;\n    }\n\n    // Loop through active attributes\n    for (i=0; i < activeAttributes; i++) {\n        let attribute = gl.getActiveAttrib(program, i);\n        attribute.typeName = enums[attribute.type];\n        result.attributes.push(attribute);\n        result.attributeCount += attribute.size;\n    }\n\n    console.log(result);\n}\n","'use strict';\n\nexport function createElement(type, classNames, content){\n    type = type || 'div';\n    let el = document.createElement(type);\n    if(classNames){\n        classNames.forEach(function(name){\n            el.classList.add(name);\n        });\n    }\n    if(content) el.innerHTML = content;\n    return el;\n}\n\nexport function normalize(value, min, max) {\n    return (value - min) / (max - min);\n}\n\nexport function lerp(norm, min, max) {\n    return (max - min) * norm + min;\n}\n\nexport function map(value, sourceMin, sourceMax, destMin, destMax) {\n    return lerp(normalize(value, sourceMin, sourceMax), destMin, destMax);\n}\n\nexport function clamp(value, min, max) {\n    return Math.min(Math.max(value, Math.min(min, max)), Math.max(min, max));\n}\n\nexport function distance(p0, p1) {\n    let dx = p1.x - p0.x,\n        dy = p1.y - p0.y;\n    return Math.sqrt(dx * dx + dy * dy);\n}\n\nexport function distanceXY(x0, y0, x1, y1) {\n    let dx = x1 - x0,\n        dy = y1 - y0;\n    return Math.sqrt(dx * dx + dy * dy);\n}\n\nexport function circleCollision(c0, c1) {\n    return distance(c0, c1) <= c0.radius + c1.radius;\n}\n\nexport function circlePointCollision(x, y, circle) {\n    return distanceXY(x, y, circle.x, circle.y) < circle.radius;\n}\n\nexport function pointInRect(x, y, rect) {\n    return inRange(x, rect.x, rect.x + rect.width) &&\n           inRange(y, rect.y, rect.y + rect.height);\n}\n\nexport function inRange(value, min, max) {\n    return value >= Math.min(min, max) && value <= Math.max(min, max);\n}\n\nexport function rangeIntersect(min0, max0, min1, max1) {\n    return Math.max(min0, max0) >= Math.min(min1, max1) &&\n           Math.min(min0, max0) <= Math.max(min1, max1);\n}\n\nexport function rectIntersect(r0, r1) {\n    return rangeIntersect(r0.x, r0.x + r0.width, r1.x, r1.x + r1.width) &&\n           rangeIntersect(r0.y, r0.y + r0.height, r1.y, r1.y + r1.height);\n}\n\nexport function degreesToRads(degrees) {\n    return degrees / 180 * Math.PI;\n}\n\nexport function radsToDegrees(radians) {\n    return radians * 180 / Math.PI;\n}\n\nexport function angleBetweenPoints(p1, p2){\n    return Math.atan2(p2.y - p1.y, p2.x - p1.x);\n}\n\nexport function randomRange(min, max) {\n    return min + Math.random() * (max - min);\n}\n\nexport function randomInt(min, max) {\n    return Math.floor(min + Math.random() * (max - min + 1));\n}\n\nexport function roundToPlaces(value, places) {\n    let mult = Math.pow(10, places);\n    return Math.round(value * mult) / mult;\n}\n\nexport function roundNearest(value, nearest) {\n    return Math.round(value / nearest) * nearest;\n}\n\nexport function quadraticBezier(p0, p1, p2, t, pFinal) {\n    pFinal = pFinal || {};\n    pFinal.x = Math.pow(1 - t, 2) * p0.x +\n               (1 - t) * 2 * t * p1.x +\n               t * t * p2.x;\n    pFinal.y = Math.pow(1 - t, 2) * p0.y +\n               (1 - t) * 2 * t * p1.y +\n               t * t * p2.y;\n    return pFinal;\n}\n\nexport function cubicBezier(p0, p1, p2, p3, t, pFinal) {\n    pFinal = pFinal || {};\n    pFinal.x = Math.pow(1 - t, 3) * p0.x +\n               Math.pow(1 - t, 2) * 3 * t * p1.x +\n               (1 - t) * 3 * t * t * p2.x +\n               t * t * t * p3.x;\n    pFinal.y = Math.pow(1 - t, 3) * p0.y +\n               Math.pow(1 - t, 2) * 3 * t * p1.y +\n               (1 - t) * 3 * t * t * p2.y +\n               t * t * t * p3.y;\n    return pFinal;\n}\n\nexport function multicurve(points, context) {\n    let p0, p1, midx, midy;\n\n    context.moveTo(points[0].x, points[0].y);\n\n    for(let i = 1; i < points.length - 2; i += 1) {\n        p0 = points[i];\n        p1 = points[i + 1];\n        midx = (p0.x + p1.x) / 2;\n        midy = (p0.y + p1.y) / 2;\n        context.quadraticCurveTo(p0.x, p0.y, midx, midy);\n    }\n\n    p0 = points[points.length - 2];\n    p1 = points[points.length - 1];\n    context.quadraticCurveTo(p0.x, p0.y, p1.x, p1.y);\n}\n\nexport function pointOnSphere(r, a1, a2) {\n    return {\n        x: r * Math.cos(a1) * Math.sin(a2),\n        y: r * Math.sin(a1) * Math.sin(a2),\n        z: r * Math.cos(a2)\n    };\n}\n\nexport function getPointsOnSphere(n){\n    let pts = [],\n        pt;\n\n    for(let i = 0; i < n; i++)\n    {\n        pt = pointOnSphere(1, Math.random() * Math.PI * 2, Math.random() * Math.PI * 2);\n        pts.push({x:pt.x, y:pt.y, z:pt.z});\n    }\n\n    return pts;\n}\n\nexport function getPointsOnSphereEvenly(n){\n    let pts = [],\n        inc = Math.PI * (3 - Math.sqrt(5)),\n        off = 2.0 / n,\n        x, y, z, r,\n        phi;\n\n    for (let k = 0; k < n; k++){\n        y = k * off - 1 + (off /2);\n        r = Math.sqrt(1 - y * y);\n        phi = k * inc;\n        x = Math.cos(phi) * r;\n        z = Math.sin(phi) * r;\n\n        pts.push({x:x, y:y, z:z});\n    }\n    return pts;\n}\n\nexport function clone(obj){\n    return JSON.parse(JSON.stringify(obj));\n}\n\nexport function isArray(arg){\n    return Object.prototype.toString.call(arg) === '[object Array]';\n}\n\nexport function shuffleArray(array) {\n    let currentIndex = array.length,\n        temporaryValue,\n        randomIndex;\n\n    while (0 !== currentIndex)\n    {\n        randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex -= 1;\n        temporaryValue = array[currentIndex];\n        array[currentIndex] = array[randomIndex];\n        array[randomIndex] = temporaryValue;\n    }\n\n    return array;\n}\n\nexport function thinOutArray(array, n){\n    let newArray = [],\n        len = array.length;\n\n    for(let i = 0; i < len; i += n)\n    {\n        newArray.push(array[i]);\n    }\n\n    return newArray;\n}\n\nexport function randomItemFromArray(array){\n    return array[Math.random() * array.length | 0];\n}\n\nexport function arrayRestrictedToRangeZ(array, minZ, maxZ){\n    let newArray = [],\n        len = array.length;\n\n    for(let i = 0; i < len; i++)\n    {\n        if(inRange(array[i].z, minZ, maxZ))\n            newArray.push(array[i]);\n    }\n\n    return newArray;\n}\n\nexport function extractKeyFromArray(array, key)\n{\n    let a = [];\n    for(let i = 0; i < array.length; i++)\n    {\n        a.push(array[i][key]);\n    }\n    return a;\n}\n\nexport function repeat(callback, params, intervals, delay, startDelay){\n    startDelay = startDelay || 0;\n    let i = 0;\n    let doStuff = function(){\n        setTimeout(function(){\n            callback(params);\n            i++;\n            if(i < intervals)\n                doStuff();\n        }, delay);\n    };\n    setTimeout(function(){\n        doStuff();\n    }, startDelay);\n}\n\nexport function isOpera(){\n    // Opera 8.0+ (UA detection to detect Blink/v8-powered Opera)\n    return !!window.opera || navigator.userAgent.indexOf(' OPR/') >= 0;\n}\n\nexport function isFirefox(){\n    // Firefox 1.0+\n    return typeof InstallTrigger !== 'undefined';\n}\n\nexport function isSafari(){\n    // At least Safari 3+: '[object HTMLElementConstructor]'\n    return Object.prototype.toString.call(window.HTMLElement).indexOf('Constructor') > 0;\n}\n\nexport function isChrome(){\n    // Chrome 1+\n    return !!window.chrome && !isOpera();\n}\n\nexport function isIE(){\n    // At least IE6\n    return false || !!document.documentMode;\n}\n\nexport function isMac() {\n    return navigator.platform.toLowerCase().indexOf('mac') > -1;\n}\n\nexport function isWindows() {\n    return navigator.platform.toLowerCase().indexOf('win') > -1;\n}\n\nexport function hasWebGL(){\n    if (!!window.WebGLRenderingContext) {\n        let canvas = document.createElement('canvas'),\n            names = ['webgl', 'experimental-webgl', 'moz-webgl', 'webkit-3d'],\n            context = false;\n\n        for(let i=0;i<4;i++) {\n            try {\n                context = canvas.getContext(names[i]);\n                if (context && typeof context.getParameter === 'function') {\n                    // WebGL is enabled\n                    return true;\n                }\n            } catch(e) {}\n        }\n        // WebGL is supported, but disabled\n        return false;\n    }\n    // WebGL not supported\n    return false;\n}\n\nexport function getVideoType(file)\n{\n    if(file.indexOf('.mp4') !== -1)\n        return 'video/mp4';\n    else if(file.indexOf('.webm') !== -1)\n        return 'video/webm';\n    else if(file.indexOf('.ogg') !== -1)\n        return 'video/ogg';\n}\n\nexport function dispatchEvent(eventName, config)\n{\n    config = config || null;\n\n    let event;\n\n    if(!isIE())\n    {\n        event = new CustomEvent(eventName, {\n            detail: config\n        });\n        document.dispatchEvent(event);\n    }\n    else\n    {\n        event = document.createEvent('CustomEvent');\n        event.initCustomEvent(eventName, true, false, config);\n        document.dispatchEvent(event);\n    }\n}\n\nexport function setCursor(cursor, element)\n{\n    element = element || document.body;\n\n    if(element.style.cursor !== cursor)\n    {\n        element.style.cursor = cursor;\n    }\n}\n\nexport function getParameterByName(name)\n{\n    name = name.replace(/[\\[]/, \"\\\\[\").replace(/[\\]]/, \"\\\\]\");\n    let regex = new RegExp(\"[\\\\?&]\" + name + \"=([^&#]*)\"),\n        results = regex.exec(location.search);\n    return results === null ? \"\" : decodeURIComponent(results[1].replace(/\\+/g, \" \"));\n}\n"],"sourceRoot":"/source/"}